ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_CSHL.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	CapSense_rawFilterData1,2,4
  18              		.global	CapSense_sensorBaseline
  19              		.bss
  20              		.align	2
  21              		.type	CapSense_sensorBaseline, %object
  22              		.size	CapSense_sensorBaseline, 2
  23              	CapSense_sensorBaseline:
  24 0000 0000     		.space	2
  25              		.global	CapSense_sensorBaselineLow
  26 0002 0000     		.align	2
  27              		.type	CapSense_sensorBaselineLow, %object
  28              		.size	CapSense_sensorBaselineLow, 1
  29              	CapSense_sensorBaselineLow:
  30 0004 00       		.space	1
  31              		.global	CapSense_sensorSignal
  32 0005 000000   		.align	2
  33              		.type	CapSense_sensorSignal, %object
  34              		.size	CapSense_sensorSignal, 1
  35              	CapSense_sensorSignal:
  36 0008 00       		.space	1
  37              		.global	CapSense_sensorOnMask
  38 0009 000000   		.align	2
  39              		.type	CapSense_sensorOnMask, %object
  40              		.size	CapSense_sensorOnMask, 1
  41              	CapSense_sensorOnMask:
  42 000c 00       		.space	1
  43              		.comm	CapSense_lowBaselineResetCnt,1,4
  44              		.global	CapSense_lowBaselineReset
  45              		.data
  46              		.align	2
  47              		.type	CapSense_lowBaselineReset, %object
  48              		.size	CapSense_lowBaselineReset, 1
  49              	CapSense_lowBaselineReset:
  50 0000 1E       		.byte	30
  51              		.global	CapSense_enableRawFilters
  52              		.type	CapSense_enableRawFilters, %object
  53              		.size	CapSense_enableRawFilters, 1
  54              	CapSense_enableRawFilters:
  55 0001 01       		.byte	1
  56              		.global	CapSense_fingerThreshold
  57 0002 0000     		.align	2
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 2


  58              		.type	CapSense_fingerThreshold, %object
  59              		.size	CapSense_fingerThreshold, 1
  60              	CapSense_fingerThreshold:
  61 0004 50       		.byte	80
  62              		.comm	CapSense_noiseThreshold,1,4
  63              		.comm	CapSense_negativeNoiseThreshold,1,4
  64              		.comm	CapSense_hysteresis,1,4
  65              		.global	CapSense_debounce
  66 0005 000000   		.align	2
  67              		.type	CapSense_debounce, %object
  68              		.size	CapSense_debounce, 1
  69              	CapSense_debounce:
  70 0008 05       		.byte	5
  71 0009 000000   		.bss
  72 000d 000000   		.align	2
  73              	CapSense_debounceCounter:
  74 0010 0000     		.space	2
  75              		.global	CapSense_rawDataIndex
  76 0012 0000     		.section	.rodata
  77              		.align	2
  78              		.type	CapSense_rawDataIndex, %object
  79              		.size	CapSense_rawDataIndex, 1
  80              	CapSense_rawDataIndex:
  81 0000 00       		.space	1
  82              		.global	CapSense_numberOfSensors
  83 0001 000000   		.align	2
  84              		.type	CapSense_numberOfSensors, %object
  85              		.size	CapSense_numberOfSensors, 1
  86              	CapSense_numberOfSensors:
  87 0004 01       		.byte	1
  88 0005 000000   		.section	.text.CapSense_BaseInit,"ax",%progbits
  89              		.align	2
  90              		.global	CapSense_BaseInit
  91              		.code	16
  92              		.thumb_func
  93              		.type	CapSense_BaseInit, %function
  94              	CapSense_BaseInit:
  95              	.LFB35:
  96              		.file 1 ".\\Generated_Source\\PSoC4\\CapSense_CSHL.c"
   1:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.10
   4:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2014, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 3


  19:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  31:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  33:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
  39:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:.\Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];	
  50:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  58:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
  59:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     30u, 
  60:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	extern CapSense_CONFIG_TYPE_P4_v2_10 CapSense_config;
  66:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[] = {
  74:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     80u, 
  75:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 4


  76:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  78:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  79:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_negativeNoiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  80:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_hysteresis[CapSense_WIDGET_PARAM_TBL_SIZE];
  82:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  83:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  84:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, 
  85:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  86:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  87:.\Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_debounceCounter[] = {
  88:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 0u, 
  89:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  90:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  91:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
  92:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* ProximitySensor0__PROX */
  93:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  94:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  95:.\Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
  96:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* ProximitySensor0__PROX */
  97:.\Generated_Source\PSoC4/CapSense_CSHL.c **** };
  98:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
  99:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 102:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 107:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 108:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value. 
 109:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and 
 110:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and 
 112:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an 
 113:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 114:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 115:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 121:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 122:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 123:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of 
 124:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
 125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between 
 126:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 127:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of 
 128:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 129:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 130:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 131:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 132:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 5


 133:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 134:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 135:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 136:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 137:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
  97              		.loc 1 137 0
  98              		.cfi_startproc
  99 0000 80B5     		push	{r7, lr}
 100              		.cfi_def_cfa_offset 8
 101              		.cfi_offset 7, -8
 102              		.cfi_offset 14, -4
 103 0002 84B0     		sub	sp, sp, #16
 104              		.cfi_def_cfa_offset 24
 105 0004 00AF     		add	r7, sp, #0
 106              		.cfi_def_cfa_register 7
 107 0006 7860     		str	r0, [r7, #4]
 138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
 108              		.loc 1 140 0
 109 0008 3B1C     		mov	r3, r7
 110 000a 0F33     		add	r3, r3, #15
 111 000c 1549     		ldr	r1, .L2
 112 000e 7A68     		ldr	r2, [r7, #4]
 113 0010 8A18     		add	r2, r1, r2
 114 0012 1278     		ldrb	r2, [r2]
 115 0014 1A70     		strb	r2, [r3]
 141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
 116              		.loc 1 154 0
 117 0016 144B     		ldr	r3, .L2+4
 118 0018 7A68     		ldr	r2, [r7, #4]
 119 001a 5200     		lsl	r2, r2, #1
 120 001c D15A     		ldrh	r1, [r2, r3]
 121 001e 134B     		ldr	r3, .L2+8
 122 0020 7A68     		ldr	r2, [r7, #4]
 123 0022 5200     		lsl	r2, r2, #1
 124 0024 D152     		strh	r1, [r2, r3]
 155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
 125              		.loc 1 155 0
 126 0026 124A     		ldr	r2, .L2+12
 127 0028 7B68     		ldr	r3, [r7, #4]
 128 002a D318     		add	r3, r2, r3
 129 002c 0022     		mov	r2, #0
 130 002e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 6


 156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
 131              		.loc 1 156 0
 132 0030 104A     		ldr	r2, .L2+16
 133 0032 7B68     		ldr	r3, [r7, #4]
 134 0034 D318     		add	r3, r2, r3
 135 0036 0022     		mov	r2, #0
 136 0038 1A70     		strb	r2, [r3]
 157:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_debounceCounter[widget] =  CapSense_debounce[widget];
 137              		.loc 1 158 0
 138 003a 3B1C     		mov	r3, r7
 139 003c 0F33     		add	r3, r3, #15
 140 003e 1B78     		ldrb	r3, [r3]
 141 0040 3A1C     		mov	r2, r7
 142 0042 0F32     		add	r2, r2, #15
 143 0044 1278     		ldrb	r2, [r2]
 144 0046 0C49     		ldr	r1, .L2+20
 145 0048 895C     		ldrb	r1, [r1, r2]
 146 004a 0C4A     		ldr	r2, .L2+24
 147 004c D154     		strb	r1, [r2, r3]
 159:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 162:.\Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 163:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 164:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 168:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 169:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 172:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             
 173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 148              		.loc 1 173 0
 149 004e 064B     		ldr	r3, .L2+4
 150 0050 7A68     		ldr	r2, [r7, #4]
 151 0052 5200     		lsl	r2, r2, #1
 152 0054 D15A     		ldrh	r1, [r2, r3]
 153 0056 0A4B     		ldr	r3, .L2+28
 154 0058 7A68     		ldr	r2, [r7, #4]
 155 005a 5200     		lsl	r2, r2, #1
 156 005c D152     		strh	r1, [r2, r3]
 174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 179:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 185:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 157              		.loc 1 185 0
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 7


 158 005e BD46     		mov	sp, r7
 159 0060 04B0     		add	sp, sp, #16
 160              		@ sp needed
 161 0062 80BD     		pop	{r7, pc}
 162              	.L3:
 163              		.align	2
 164              	.L2:
 165 0064 00000000 		.word	CapSense_widgetNumber
 166 0068 00000000 		.word	CapSense_sensorRaw
 167 006c 00000000 		.word	CapSense_sensorBaseline
 168 0070 00000000 		.word	CapSense_sensorBaselineLow
 169 0074 00000000 		.word	CapSense_sensorSignal
 170 0078 00000000 		.word	CapSense_debounce
 171 007c 10000000 		.word	CapSense_debounceCounter
 172 0080 00000000 		.word	CapSense_rawFilterData1
 173              		.cfi_endproc
 174              	.LFE35:
 175              		.size	CapSense_BaseInit, .-CapSense_BaseInit
 176              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
 177              		.align	2
 178              		.global	CapSense_InitializeSensorBaseline
 179              		.code	16
 180              		.thumb_func
 181              		.type	CapSense_InitializeSensorBaseline, %function
 182              	CapSense_InitializeSensorBaseline:
 183              	.LFB36:
 186:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 187:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 188:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 189:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 190:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 191:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 192:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 193:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 194:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair 
 195:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 196:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 197:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 198:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 199:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 200:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 201:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 202:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 203:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 205:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 206:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 207:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 184              		.loc 1 213 0
 185              		.cfi_startproc
 186 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 8


 187              		.cfi_def_cfa_offset 8
 188              		.cfi_offset 7, -8
 189              		.cfi_offset 14, -4
 190 0002 82B0     		sub	sp, sp, #8
 191              		.cfi_def_cfa_offset 16
 192 0004 00AF     		add	r7, sp, #0
 193              		.cfi_def_cfa_register 7
 194 0006 7860     		str	r0, [r7, #4]
 214:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 215:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
 195              		.loc 1 215 0
 196 0008 7B68     		ldr	r3, [r7, #4]
 197 000a 181C     		mov	r0, r3
 198 000c FFF7FEFF 		bl	CapSense_ScanSensor
 216:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 199              		.loc 1 216 0
 200 0010 C046     		mov	r8, r8
 201              	.L5:
 202              		.loc 1 216 0 is_stmt 0 discriminator 1
 203 0012 FFF7FEFF 		bl	CapSense_IsBusy
 204 0016 031C     		mov	r3, r0
 205 0018 002B     		cmp	r3, #0
 206 001a FAD1     		bne	.L5
 217:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 218:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */       
 222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
 207              		.loc 1 222 0 is_stmt 1
 208 001c 7B68     		ldr	r3, [r7, #4]
 209 001e 181C     		mov	r0, r3
 210 0020 FFF7FEFF 		bl	CapSense_BaseInit
 223:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 211              		.loc 1 223 0
 212 0024 BD46     		mov	sp, r7
 213 0026 02B0     		add	sp, sp, #8
 214              		@ sp needed
 215 0028 80BD     		pop	{r7, pc}
 216              		.cfi_endproc
 217              	.LFE36:
 218              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 219 002a C046     		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 220              		.align	2
 221              		.global	CapSense_InitializeAllBaselines
 222              		.code	16
 223              		.thumb_func
 224              		.type	CapSense_InitializeAllBaselines, %function
 225              	CapSense_InitializeAllBaselines:
 226              	.LFB37:
 224:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 9


 231:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the 
 232:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning 
 233:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for 
 234:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 235:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 236:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 237:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 238:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 239:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 240:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 241:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 242:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 243:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 244:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 245:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 246:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 247:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 249:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 250:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 227              		.loc 1 250 0
 228              		.cfi_startproc
 229 0000 80B5     		push	{r7, lr}
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 7, -8
 232              		.cfi_offset 14, -4
 233 0002 82B0     		sub	sp, sp, #8
 234              		.cfi_def_cfa_offset 16
 235 0004 00AF     		add	r7, sp, #0
 236              		.cfi_def_cfa_register 7
 251:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 252:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 237              		.loc 1 253 0
 238 0006 0023     		mov	r3, #0
 239 0008 7B60     		str	r3, [r7, #4]
 240 000a 06E0     		b	.L7
 241              	.L8:
 254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 255:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     	CapSense_InitializeSensorBaseline(i);
 242              		.loc 1 255 0 discriminator 2
 243 000c 7B68     		ldr	r3, [r7, #4]
 244 000e 181C     		mov	r0, r3
 245 0010 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 246              		.loc 1 253 0 discriminator 2
 247 0014 7B68     		ldr	r3, [r7, #4]
 248 0016 0133     		add	r3, r3, #1
 249 0018 7B60     		str	r3, [r7, #4]
 250              	.L7:
 253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 251              		.loc 1 253 0 is_stmt 0 discriminator 1
 252 001a 7B68     		ldr	r3, [r7, #4]
 253 001c 002B     		cmp	r3, #0
 254 001e F5D0     		beq	.L8
 256:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 257:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 10


 255              		.loc 1 257 0 is_stmt 1
 256 0020 BD46     		mov	sp, r7
 257 0022 02B0     		add	sp, sp, #8
 258              		@ sp needed
 259 0024 80BD     		pop	{r7, pc}
 260              		.cfi_endproc
 261              	.LFE37:
 262              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 263 0026 C046     		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 264              		.align	2
 265              		.global	CapSense_InitializeEnabledBaselines
 266              		.code	16
 267              		.thumb_func
 268              		.type	CapSense_InitializeEnabledBaselines, %function
 269              	CapSense_InitializeEnabledBaselines:
 270              	.LFB38:
 258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 259:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 260:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 261:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the 
 266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines 
 267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process. 
 268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 277:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 278:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 279:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 280:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 281:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 282:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 283:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 284:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 285:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 271              		.loc 1 285 0
 272              		.cfi_startproc
 273 0000 80B5     		push	{r7, lr}
 274              		.cfi_def_cfa_offset 8
 275              		.cfi_offset 7, -8
 276              		.cfi_offset 14, -4
 277 0002 82B0     		sub	sp, sp, #8
 278              		.cfi_def_cfa_offset 16
 279 0004 00AF     		add	r7, sp, #0
 280              		.cfi_def_cfa_register 7
 286:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 11


 289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 281              		.loc 1 289 0
 282 0006 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 283              		.loc 1 290 0
 284 000a C046     		mov	r8, r8
 285              	.L10:
 286              		.loc 1 290 0 is_stmt 0 discriminator 1
 287 000c FFF7FEFF 		bl	CapSense_IsBusy
 288 0010 031C     		mov	r3, r0
 289 0012 002B     		cmp	r3, #0
 290 0014 FAD1     		bne	.L10
 291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 292:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 291              		.loc 1 295 0 is_stmt 1
 292 0016 0023     		mov	r3, #0
 293 0018 7B60     		str	r3, [r7, #4]
 294 001a 11E0     		b	.L11
 295              	.L13:
 296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 296              		.loc 1 297 0
 297 001c 0B4A     		ldr	r2, .L14
 298 001e 7B68     		ldr	r3, [r7, #4]
 299 0020 101C     		mov	r0, r2
 300 0022 191C     		mov	r1, r3
 301 0024 FFF7FEFF 		bl	CapSense_GetBitValue
 302 0028 031C     		mov	r3, r0
 303 002a 3B60     		str	r3, [r7]
 298:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 299:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 304              		.loc 1 300 0
 305 002c 3B68     		ldr	r3, [r7]
 306 002e 002B     		cmp	r3, #0
 307 0030 03D0     		beq	.L12
 301:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 302:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 308              		.loc 1 303 0
 309 0032 7B68     		ldr	r3, [r7, #4]
 310 0034 181C     		mov	r0, r3
 311 0036 FFF7FEFF 		bl	CapSense_BaseInit
 312              	.L12:
 295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 313              		.loc 1 295 0
 314 003a 7B68     		ldr	r3, [r7, #4]
 315 003c 0133     		add	r3, r3, #1
 316 003e 7B60     		str	r3, [r7, #4]
 317              	.L11:
 295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 318              		.loc 1 295 0 is_stmt 0 discriminator 1
 319 0040 7B68     		ldr	r3, [r7, #4]
 320 0042 002B     		cmp	r3, #0
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 12


 321 0044 EAD0     		beq	.L13
 304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 306:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }  
 322              		.loc 1 306 0 is_stmt 1
 323 0046 BD46     		mov	sp, r7
 324 0048 02B0     		add	sp, sp, #8
 325              		@ sp needed
 326 004a 80BD     		pop	{r7, pc}
 327              	.L15:
 328              		.align	2
 329              	.L14:
 330 004c 00000000 		.word	CapSense_sensorEnableMask
 331              		.cfi_endproc
 332              	.LFE38:
 333              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 334              		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 335              		.align	2
 336              		.global	CapSense_UpdateBaselineNoThreshold
 337              		.code	16
 338              		.thumb_func
 339              		.type	CapSense_UpdateBaselineNoThreshold, %function
 340              	CapSense_UpdateBaselineNoThreshold:
 341              	.LFB39:
 307:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 308:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 309:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 310:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the 
 315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor]. 
 318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold. 
 319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded 
 320:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less 
 321:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 322:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 323:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 324:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 326:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 327:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 328:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 329:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 330:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 333:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 334:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 335:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 336:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of 
 337:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
 338:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between 
 339:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 13


 340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
 341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 342:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 343:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 344:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 345:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 346:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 347:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 348:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 349:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
 350:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 342              		.loc 1 350 0
 343              		.cfi_startproc
 344 0000 90B5     		push	{r4, r7, lr}
 345              		.cfi_def_cfa_offset 12
 346              		.cfi_offset 4, -12
 347              		.cfi_offset 7, -8
 348              		.cfi_offset 14, -4
 349 0002 87B0     		sub	sp, sp, #28
 350              		.cfi_def_cfa_offset 40
 351 0004 00AF     		add	r7, sp, #0
 352              		.cfi_def_cfa_register 7
 353 0006 7860     		str	r0, [r7, #4]
 351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 352:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint32 sign;
 353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 354              		.loc 1 355 0
 355 0008 3B1C     		mov	r3, r7
 356 000a 0F33     		add	r3, r3, #15
 357 000c 7A49     		ldr	r1, .L29
 358 000e 7A68     		ldr	r2, [r7, #4]
 359 0010 8A18     		add	r2, r1, r2
 360 0012 1278     		ldrb	r2, [r2]
 361 0014 1A70     		strb	r2, [r3]
 356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold = CapSense_noiseThreshold[widget];
 362              		.loc 1 356 0
 363 0016 3B1C     		mov	r3, r7
 364 0018 0F33     		add	r3, r3, #15
 365 001a 1A78     		ldrb	r2, [r3]
 366 001c 3B1C     		mov	r3, r7
 367 001e 0E33     		add	r3, r3, #14
 368 0020 7649     		ldr	r1, .L29+4
 369 0022 8A5C     		ldrb	r2, [r1, r2]
 370 0024 1A70     		strb	r2, [r3]
 357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 361:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 362:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 364:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 371              		.loc 1 364 0
 372 0026 3B1C     		mov	r3, r7
 373 0028 1033     		add	r3, r3, #16
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 14


 374 002a 754A     		ldr	r2, .L29+8
 375 002c 7968     		ldr	r1, [r7, #4]
 376 002e 4900     		lsl	r1, r1, #1
 377 0030 8A5A     		ldrh	r2, [r1, r2]
 378 0032 1A80     		strh	r2, [r3]
 365:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 366:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_RAW_FILTER_MASK != 0u)
 367:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if(CapSense_enableRawFilters != 0u)
 379              		.loc 1 367 0
 380 0034 734B     		ldr	r3, .L29+12
 381 0036 1B78     		ldrb	r3, [r3]
 382 0038 002B     		cmp	r3, #0
 383 003a 15D0     		beq	.L17
 368:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 369:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 370:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			tempRaw = filteredRawData;
 371:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor], 
 372:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 															CapSense_rawFilterData2[sensor]);
 373:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 374:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = tempRaw;
 375:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 376:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 377:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			tempRaw = filteredRawData;
 378:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sensor],
 379:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 															   CapSense_rawFilterData2[sensor]);
 380:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 381:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = tempRaw;
 382:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 383:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 384:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 385:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 386:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 387:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 388:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 384              		.loc 1 388 0
 385 003c 724B     		ldr	r3, .L29+16
 386 003e 7A68     		ldr	r2, [r7, #4]
 387 0040 5200     		lsl	r2, r2, #1
 388 0042 D35A     		ldrh	r3, [r2, r3]
 389 0044 3C1C     		mov	r4, r7
 390 0046 1034     		add	r4, r4, #16
 391 0048 3A1C     		mov	r2, r7
 392 004a 1032     		add	r2, r2, #16
 393 004c 1288     		ldrh	r2, [r2]
 394 004e 101C     		mov	r0, r2
 395 0050 191C     		mov	r1, r3
 396 0052 FFF7FEFF 		bl	CapSense_IIR4Filter
 397 0056 031C     		mov	r3, r0
 398 0058 2380     		strh	r3, [r4]
 389:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 399              		.loc 1 389 0
 400 005a 6B4B     		ldr	r3, .L29+16
 401 005c 7A68     		ldr	r2, [r7, #4]
 402 005e 5200     		lsl	r2, r2, #1
 403 0060 391C     		mov	r1, r7
 404 0062 1031     		add	r1, r1, #16
 405 0064 0988     		ldrh	r1, [r1]
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 15


 406 0066 D152     		strh	r1, [r2, r3]
 407              	.L17:
 390:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				
 391:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 392:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor]);
 393:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 394:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 395:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 396:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 397:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 398:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 399:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 400:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 401:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_rawFilterData1[sensor] = filteredRawData;
 402:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			
 403:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
 404:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* No Raw filters */
 405:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 406:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 407:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 408:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 409:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 410:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    MeasureNoiseEnvelope_P4_v2_10(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 408              		.loc 1 410 0
 409 0068 7B68     		ldr	r3, [r7, #4]
 410 006a DAB2     		uxtb	r2, r3
 411 006c 6749     		ldr	r1, .L29+20
 412 006e 644B     		ldr	r3, .L29+8
 413 0070 081C     		mov	r0, r1
 414 0072 111C     		mov	r1, r2
 415 0074 1A1C     		mov	r2, r3
 416 0076 FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_10
 411:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 412:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 417              		.loc 1 415 0
 418 007a 654B     		ldr	r3, .L29+24
 419 007c 7A68     		ldr	r2, [r7, #4]
 420 007e 5200     		lsl	r2, r2, #1
 421 0080 D35A     		ldrh	r3, [r2, r3]
 422 0082 3A1C     		mov	r2, r7
 423 0084 1032     		add	r2, r2, #16
 424 0086 1288     		ldrh	r2, [r2]
 425 0088 9A42     		cmp	r2, r3
 426 008a 12D3     		bcc	.L18
 416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 417:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_lowBaselineResetCnt[sensor] = 0u;	
 427              		.loc 1 417 0
 428 008c 614A     		ldr	r2, .L29+28
 429 008e 7B68     		ldr	r3, [r7, #4]
 430 0090 D318     		add	r3, r2, r3
 431 0092 0022     		mov	r2, #0
 432 0094 1A70     		strb	r2, [r3]
 418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 433              		.loc 1 418 0
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 16


 434 0096 5E4B     		ldr	r3, .L29+24
 435 0098 7A68     		ldr	r2, [r7, #4]
 436 009a 5200     		lsl	r2, r2, #1
 437 009c D25A     		ldrh	r2, [r2, r3]
 438 009e 3B1C     		mov	r3, r7
 439 00a0 1233     		add	r3, r3, #18
 440 00a2 391C     		mov	r1, r7
 441 00a4 1031     		add	r1, r1, #16
 442 00a6 0988     		ldrh	r1, [r1]
 443 00a8 8A1A     		sub	r2, r1, r2
 444 00aa 1A80     		strh	r2, [r3]
 419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 445              		.loc 1 419 0
 446 00ac 0123     		mov	r3, #1
 447 00ae 7B61     		str	r3, [r7, #20]
 448 00b0 0CE0     		b	.L19
 449              	.L18:
 420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 450              		.loc 1 423 0
 451 00b2 574B     		ldr	r3, .L29+24
 452 00b4 7A68     		ldr	r2, [r7, #4]
 453 00b6 5200     		lsl	r2, r2, #1
 454 00b8 D15A     		ldrh	r1, [r2, r3]
 455 00ba 3B1C     		mov	r3, r7
 456 00bc 1233     		add	r3, r3, #18
 457 00be 3A1C     		mov	r2, r7
 458 00c0 1032     		add	r2, r2, #16
 459 00c2 1288     		ldrh	r2, [r2]
 460 00c4 8A1A     		sub	r2, r1, r2
 461 00c6 1A80     		strh	r2, [r3]
 424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 462              		.loc 1 424 0
 463 00c8 0023     		mov	r3, #0
 464 00ca 7B61     		str	r3, [r7, #20]
 465              	.L19:
 425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 426:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 427:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 428:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 466              		.loc 1 428 0
 467 00cc 7B69     		ldr	r3, [r7, #20]
 468 00ce 002B     		cmp	r3, #0
 469 00d0 28D1     		bne	.L20
 470              		.loc 1 428 0 is_stmt 0 discriminator 1
 471 00d2 3B1C     		mov	r3, r7
 472 00d4 0F33     		add	r3, r3, #15
 473 00d6 1B78     		ldrb	r3, [r3]
 474 00d8 4F4A     		ldr	r2, .L29+32
 475 00da D35C     		ldrb	r3, [r2, r3]
 476 00dc 3A1C     		mov	r2, r7
 477 00de 1232     		add	r2, r2, #18
 478 00e0 1288     		ldrh	r2, [r2]
 479 00e2 9A42     		cmp	r2, r3
 480 00e4 1ED9     		bls	.L20
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 17


 429:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#else
 430:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 431:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 481              		.loc 1 433 0 is_stmt 1
 482 00e6 4B4A     		ldr	r2, .L29+28
 483 00e8 7B68     		ldr	r3, [r7, #4]
 484 00ea D318     		add	r3, r2, r3
 485 00ec 1A78     		ldrb	r2, [r3]
 486 00ee 4B49     		ldr	r1, .L29+36
 487 00f0 7B68     		ldr	r3, [r7, #4]
 488 00f2 CB18     		add	r3, r1, r3
 489 00f4 1B78     		ldrb	r3, [r3]
 490 00f6 9A42     		cmp	r2, r3
 491 00f8 09D3     		bcc	.L21
 434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 492              		.loc 1 435 0
 493 00fa 7B68     		ldr	r3, [r7, #4]
 494 00fc 181C     		mov	r0, r3
 495 00fe FFF7FEFF 		bl	CapSense_BaseInit
 436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 496              		.loc 1 436 0
 497 0102 444A     		ldr	r2, .L29+28
 498 0104 7B68     		ldr	r3, [r7, #4]
 499 0106 D318     		add	r3, r2, r3
 500 0108 0022     		mov	r2, #0
 501 010a 1A70     		strb	r2, [r3]
 433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 502              		.loc 1 433 0
 503 010c 4CE0     		b	.L23
 504              	.L21:
 437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 505              		.loc 1 440 0
 506 010e 414A     		ldr	r2, .L29+28
 507 0110 7B68     		ldr	r3, [r7, #4]
 508 0112 D318     		add	r3, r2, r3
 509 0114 1B78     		ldrb	r3, [r3]
 510 0116 0133     		add	r3, r3, #1
 511 0118 DAB2     		uxtb	r2, r3
 512 011a 3E49     		ldr	r1, .L29+28
 513 011c 7B68     		ldr	r3, [r7, #4]
 514 011e CB18     		add	r3, r1, r3
 515 0120 1A70     		strb	r2, [r3]
 433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 516              		.loc 1 433 0
 517 0122 41E0     		b	.L23
 518              	.L20:
 441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 18


 446:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)			
 447:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Update Baseline if lower than noiseThreshold */
 448:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 519              		.loc 1 448 0
 520 0124 3B1C     		mov	r3, r7
 521 0126 0E33     		add	r3, r3, #14
 522 0128 1B78     		ldrb	r3, [r3]
 523 012a 9BB2     		uxth	r3, r3
 524 012c 3A1C     		mov	r2, r7
 525 012e 1232     		add	r2, r2, #18
 526 0130 1288     		ldrh	r2, [r2]
 527 0132 9A42     		cmp	r2, r3
 528 0134 0CD9     		bls	.L24
 449:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			 ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 529              		.loc 1 449 0 discriminator 1
 530 0136 3B1C     		mov	r3, r7
 531 0138 0F33     		add	r3, r3, #15
 532 013a 1B78     		ldrb	r3, [r3]
 533 013c 364A     		ldr	r2, .L29+32
 534 013e D35C     		ldrb	r3, [r2, r3]
 448:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 535              		.loc 1 448 0 discriminator 1
 536 0140 3A1C     		mov	r2, r7
 537 0142 1232     		add	r2, r2, #18
 538 0144 1288     		ldrh	r2, [r2]
 539 0146 9A42     		cmp	r2, r3
 540 0148 2ED2     		bcs	.L23
 450:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			   && (sign == 0u)))
 541              		.loc 1 450 0
 542 014a 7B69     		ldr	r3, [r7, #20]
 543 014c 002B     		cmp	r3, #0
 544 014e 2BD1     		bne	.L23
 545              	.L24:
 451:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			{
 452:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
 453:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Update Baseline if lower than noiseThreshold */
 454:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 455:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				 ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 456:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 				   && (sign == 0u)))
 457:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			{
 458:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 546              		.loc 1 461 0
 547 0150 2F4B     		ldr	r3, .L29+24
 548 0152 7A68     		ldr	r2, [r7, #4]
 549 0154 5200     		lsl	r2, r2, #1
 550 0156 D35A     		ldrh	r3, [r2, r3]
 551 0158 1B02     		lsl	r3, r3, #8
 552 015a BB60     		str	r3, [r7, #8]
 462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 553              		.loc 1 462 0
 554 015c 304A     		ldr	r2, .L29+40
 555 015e 7B68     		ldr	r3, [r7, #4]
 556 0160 D318     		add	r3, r2, r3
 557 0162 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 19


 558 0164 BA68     		ldr	r2, [r7, #8]
 559 0166 1343     		orr	r3, r2
 560 0168 BB60     		str	r3, [r7, #8]
 463:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 561              		.loc 1 465 0
 562 016a 3B1C     		mov	r3, r7
 563 016c 1033     		add	r3, r3, #16
 564 016e 1B88     		ldrh	r3, [r3]
 565 0170 BA68     		ldr	r2, [r7, #8]
 566 0172 D318     		add	r3, r2, r3
 567 0174 BB60     		str	r3, [r7, #8]
 466:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 568              		.loc 1 468 0
 569 0176 264B     		ldr	r3, .L29+24
 570 0178 7A68     		ldr	r2, [r7, #4]
 571 017a 5200     		lsl	r2, r2, #1
 572 017c D35A     		ldrh	r3, [r2, r3]
 573 017e BA68     		ldr	r2, [r7, #8]
 574 0180 D31A     		sub	r3, r2, r3
 575 0182 BB60     		str	r3, [r7, #8]
 469:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 576              		.loc 1 471 0
 577 0184 BB68     		ldr	r3, [r7, #8]
 578 0186 1B0A     		lsr	r3, r3, #8
 579 0188 99B2     		uxth	r1, r3
 580 018a 214B     		ldr	r3, .L29+24
 581 018c 7A68     		ldr	r2, [r7, #4]
 582 018e 5200     		lsl	r2, r2, #1
 583 0190 D152     		strh	r1, [r2, r3]
 472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 584              		.loc 1 472 0
 585 0192 BB68     		ldr	r3, [r7, #8]
 586 0194 DAB2     		uxtb	r2, r3
 587 0196 2249     		ldr	r1, .L29+40
 588 0198 7B68     		ldr	r3, [r7, #4]
 589 019a CB18     		add	r3, r1, r3
 590 019c 1A70     		strb	r2, [r3]
 473:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 591              		.loc 1 474 0
 592 019e 1D4A     		ldr	r2, .L29+28
 593 01a0 7B68     		ldr	r3, [r7, #4]
 594 01a2 D318     		add	r3, r2, r3
 595 01a4 0022     		mov	r2, #0
 596 01a6 1A70     		strb	r2, [r3]
 597              	.L23:
 475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 479:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 20


 480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 598              		.loc 1 481 0
 599 01a8 3B1C     		mov	r3, r7
 600 01aa 0E33     		add	r3, r3, #14
 601 01ac 1B78     		ldrb	r3, [r3]
 602 01ae 9BB2     		uxth	r3, r3
 603 01b0 3A1C     		mov	r2, r7
 604 01b2 1232     		add	r2, r2, #18
 605 01b4 1288     		ldrh	r2, [r2]
 606 01b6 9A42     		cmp	r2, r3
 607 01b8 16D9     		bls	.L25
 608              		.loc 1 481 0 is_stmt 0 discriminator 1
 609 01ba 7B69     		ldr	r3, [r7, #20]
 610 01bc 002B     		cmp	r3, #0
 611 01be 13D0     		beq	.L25
 482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 612              		.loc 1 485 0 is_stmt 1
 613 01c0 3B1C     		mov	r3, r7
 614 01c2 1233     		add	r3, r3, #18
 615 01c4 1B88     		ldrh	r3, [r3]
 616 01c6 FF2B     		cmp	r3, #255
 617 01c8 05D9     		bls	.L26
 486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 618              		.loc 1 487 0
 619 01ca 164A     		ldr	r2, .L29+44
 620 01cc 7B68     		ldr	r3, [r7, #4]
 621 01ce D318     		add	r3, r2, r3
 622 01d0 FF22     		mov	r2, #255
 623 01d2 1A70     		strb	r2, [r3]
 485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 624              		.loc 1 485 0
 625 01d4 0DE0     		b	.L16
 626              	.L26:
 488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }    
 489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else 
 490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 627              		.loc 1 491 0
 628 01d6 3B1C     		mov	r3, r7
 629 01d8 1233     		add	r3, r3, #18
 630 01da 1B88     		ldrh	r3, [r3]
 631 01dc DAB2     		uxtb	r2, r3
 632 01de 1149     		ldr	r1, .L29+44
 633 01e0 7B68     		ldr	r3, [r7, #4]
 634 01e2 CB18     		add	r3, r1, r3
 635 01e4 1A70     		strb	r2, [r3]
 485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 636              		.loc 1 485 0
 637 01e6 04E0     		b	.L16
 638              	.L25:
 492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 21


 494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 639              		.loc 1 500 0
 640 01e8 0E4A     		ldr	r2, .L29+44
 641 01ea 7B68     		ldr	r3, [r7, #4]
 642 01ec D318     		add	r3, r2, r3
 643 01ee 0022     		mov	r2, #0
 644 01f0 1A70     		strb	r2, [r3]
 645              	.L16:
 501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 502:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 507:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 646              		.loc 1 507 0
 647 01f2 BD46     		mov	sp, r7
 648 01f4 07B0     		add	sp, sp, #28
 649              		@ sp needed
 650 01f6 90BD     		pop	{r4, r7, pc}
 651              	.L30:
 652              		.align	2
 653              	.L29:
 654 01f8 00000000 		.word	CapSense_widgetNumber
 655 01fc 00000000 		.word	CapSense_noiseThreshold
 656 0200 00000000 		.word	CapSense_sensorRaw
 657 0204 00000000 		.word	CapSense_enableRawFilters
 658 0208 00000000 		.word	CapSense_rawFilterData1
 659 020c 00000000 		.word	CapSense_config
 660 0210 00000000 		.word	CapSense_sensorBaseline
 661 0214 00000000 		.word	CapSense_lowBaselineResetCnt
 662 0218 00000000 		.word	CapSense_negativeNoiseThreshold
 663 021c 00000000 		.word	CapSense_lowBaselineReset
 664 0220 00000000 		.word	CapSense_sensorBaselineLow
 665 0224 00000000 		.word	CapSense_sensorSignal
 666              		.cfi_endproc
 667              	.LFE39:
 668              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 669              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 670              		.align	2
 671              		.global	CapSense_UpdateSensorBaseline
 672              		.code	16
 673              		.thumb_func
 674              		.type	CapSense_UpdateSensorBaseline, %function
 675              	CapSense_UpdateSensorBaseline:
 676              	.LFB40:
 508:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 509:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 510:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 511:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 512:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 22


 513:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 514:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 515:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the 
 516:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 517:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 518:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor]. 
 519:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold. 
 520:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating. 
 521:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and  
 522:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 523:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 524:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 525:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 526:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 527:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 528:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 529:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 530:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 531:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 532:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 533:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 534:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 535:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 536:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 537:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 538:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 539:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 541:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 677              		.loc 1 541 0
 678              		.cfi_startproc
 679 0000 80B5     		push	{r7, lr}
 680              		.cfi_def_cfa_offset 8
 681              		.cfi_offset 7, -8
 682              		.cfi_offset 14, -4
 683 0002 82B0     		sub	sp, sp, #8
 684              		.cfi_def_cfa_offset 16
 685 0004 00AF     		add	r7, sp, #0
 686              		.cfi_def_cfa_register 7
 687 0006 7860     		str	r0, [r7, #4]
 542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 543:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint32 widget;
 544:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
 545:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		widget = CapSense_widgetNumber[sensor];
 546:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 547:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 549:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 551:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     	CapSense_UpdateThresholds(sensor);
 688              		.loc 1 553 0
 689 0008 7B68     		ldr	r3, [r7, #4]
 690 000a 181C     		mov	r0, r3
 691 000c FFF7FEFF 		bl	CapSense_UpdateThresholds
 554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 23


 555:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 692              		.loc 1 556 0
 693 0010 7B68     		ldr	r3, [r7, #4]
 694 0012 181C     		mov	r0, r3
 695 0014 FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 562:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 696              		.loc 1 562 0
 697 0018 BD46     		mov	sp, r7
 698 001a 02B0     		add	sp, sp, #8
 699              		@ sp needed
 700 001c 80BD     		pop	{r7, pc}
 701              		.cfi_endproc
 702              	.LFE40:
 703              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 704 001e C046     		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 705              		.align	2
 706              		.global	CapSense_UpdateEnabledBaselines
 707              		.code	16
 708              		.thumb_func
 709              		.type	CapSense_UpdateEnabledBaselines, %function
 710              	CapSense_UpdateEnabledBaselines:
 711              	.LFB41:
 563:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 564:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 565:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 566:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 567:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 568:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 569:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 570:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the 
 571:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 572:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 573:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 574:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 575:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 576:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 577:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 578:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 579:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 580:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 581:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 582:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 583:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 584:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 585:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 586:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 587:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 588:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 589:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 590:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 591:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 24


 592:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 593:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 595:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 712              		.loc 1 595 0
 713              		.cfi_startproc
 714 0000 80B5     		push	{r7, lr}
 715              		.cfi_def_cfa_offset 8
 716              		.cfi_offset 7, -8
 717              		.cfi_offset 14, -4
 718 0002 82B0     		sub	sp, sp, #8
 719              		.cfi_def_cfa_offset 16
 720 0004 00AF     		add	r7, sp, #0
 721              		.cfi_def_cfa_register 7
 596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 722              		.loc 1 599 0
 723 0006 0023     		mov	r3, #0
 724 0008 7B60     		str	r3, [r7, #4]
 725 000a 11E0     		b	.L33
 726              	.L35:
 600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 727              		.loc 1 601 0
 728 000c 0B4A     		ldr	r2, .L36
 729 000e 7B68     		ldr	r3, [r7, #4]
 730 0010 101C     		mov	r0, r2
 731 0012 191C     		mov	r1, r3
 732 0014 FFF7FEFF 		bl	CapSense_GetBitValue
 733 0018 031C     		mov	r3, r0
 734 001a 3B60     		str	r3, [r7]
 602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 735              		.loc 1 603 0
 736 001c 3B68     		ldr	r3, [r7]
 737 001e 002B     		cmp	r3, #0
 738 0020 03D0     		beq	.L34
 604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 739              		.loc 1 605 0
 740 0022 7B68     		ldr	r3, [r7, #4]
 741 0024 181C     		mov	r0, r3
 742 0026 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 743              	.L34:
 599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 744              		.loc 1 599 0
 745 002a 7B68     		ldr	r3, [r7, #4]
 746 002c 0133     		add	r3, r3, #1
 747 002e 7B60     		str	r3, [r7, #4]
 748              	.L33:
 599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 749              		.loc 1 599 0 is_stmt 0 discriminator 1
 750 0030 7B68     		ldr	r3, [r7, #4]
 751 0032 002B     		cmp	r3, #0
 752 0034 EAD0     		beq	.L35
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 25


 606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 608:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 753              		.loc 1 608 0 is_stmt 1
 754 0036 BD46     		mov	sp, r7
 755 0038 02B0     		add	sp, sp, #8
 756              		@ sp needed
 757 003a 80BD     		pop	{r7, pc}
 758              	.L37:
 759              		.align	2
 760              	.L36:
 761 003c 00000000 		.word	CapSense_sensorEnableMask
 762              		.cfi_endproc
 763              	.LFE41:
 764              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 765              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 766              		.align	2
 767              		.global	CapSense_UpdateWidgetBaseline
 768              		.code	16
 769              		.thumb_func
 770              		.type	CapSense_UpdateWidgetBaseline, %function
 771              	CapSense_UpdateWidgetBaseline:
 772              	.LFB42:
 609:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 610:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 611:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 612:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 613:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 614:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 615:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the 
 616:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 617:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 618:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 619:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 620:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 621:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 622:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 623:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 624:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 625:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 626:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 627:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 628:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 629:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 630:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 631:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 632:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 633:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 634:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 635:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 636:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 637:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 638:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 639:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 640:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 773              		.loc 1 640 0
 774              		.cfi_startproc
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 26


 775 0000 80B5     		push	{r7, lr}
 776              		.cfi_def_cfa_offset 8
 777              		.cfi_offset 7, -8
 778              		.cfi_offset 14, -4
 779 0002 88B0     		sub	sp, sp, #32
 780              		.cfi_def_cfa_offset 40
 781 0004 00AF     		add	r7, sp, #0
 782              		.cfi_def_cfa_register 7
 783 0006 7860     		str	r0, [r7, #4]
 641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
 647:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get number of sensors in widget */
 648:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	sensorsPerWidget = CapSense_numberOfSensors[widget];
 784              		.loc 1 648 0
 785 0008 0123     		mov	r3, #1
 786 000a BB61     		str	r3, [r7, #24]
 649:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 650:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get first sensor in widget */
 651:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	firstSensor = CapSense_rawDataIndex[widget];
 787              		.loc 1 651 0
 788 000c 0023     		mov	r3, #0
 789 000e 7B61     		str	r3, [r7, #20]
 652:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 653:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/* Get last sensor in widget */
 654:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 790              		.loc 1 654 0
 791 0010 0023     		mov	r3, #0
 792 0012 1A1C     		mov	r2, r3
 793 0014 BB69     		ldr	r3, [r7, #24]
 794 0016 D318     		add	r3, r2, r3
 795 0018 3B61     		str	r3, [r7, #16]
 655:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
 656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 796              		.loc 1 656 0
 797 001a 7B69     		ldr	r3, [r7, #20]
 798 001c FB61     		str	r3, [r7, #28]
 799 001e 11E0     		b	.L39
 800              	.L41:
 657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 801              		.loc 1 658 0
 802 0020 0C4A     		ldr	r2, .L42
 803 0022 FB69     		ldr	r3, [r7, #28]
 804 0024 101C     		mov	r0, r2
 805 0026 191C     		mov	r1, r3
 806 0028 FFF7FEFF 		bl	CapSense_GetBitValue
 807 002c 031C     		mov	r3, r0
 808 002e FB60     		str	r3, [r7, #12]
 659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
 660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 809              		.loc 1 660 0
 810 0030 FB68     		ldr	r3, [r7, #12]
 811 0032 002B     		cmp	r3, #0
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 27


 812 0034 03D0     		beq	.L40
 661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 813              		.loc 1 662 0
 814 0036 FB69     		ldr	r3, [r7, #28]
 815 0038 181C     		mov	r0, r3
 816 003a FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 817              	.L40:
 656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 818              		.loc 1 656 0
 819 003e FB69     		ldr	r3, [r7, #28]
 820 0040 0133     		add	r3, r3, #1
 821 0042 FB61     		str	r3, [r7, #28]
 822              	.L39:
 656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 823              		.loc 1 656 0 is_stmt 0 discriminator 1
 824 0044 FA69     		ldr	r2, [r7, #28]
 825 0046 3B69     		ldr	r3, [r7, #16]
 826 0048 9A42     		cmp	r2, r3
 827 004a E9D3     		bcc	.L41
 663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 665:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 828              		.loc 1 665 0 is_stmt 1
 829 004c BD46     		mov	sp, r7
 830 004e 08B0     		add	sp, sp, #32
 831              		@ sp needed
 832 0050 80BD     		pop	{r7, pc}
 833              	.L43:
 834 0052 C046     		.align	2
 835              	.L42:
 836 0054 00000000 		.word	CapSense_sensorEnableMask
 837              		.cfi_endproc
 838              	.LFE42:
 839              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 840              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 841              		.align	2
 842              		.global	CapSense_GetBaselineData
 843              		.code	16
 844              		.thumb_func
 845              		.type	CapSense_GetBaselineData, %function
 846              	CapSense_GetBaselineData:
 847              	.LFB43:
 666:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 667:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 668:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 669:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 670:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 671:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 672:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 673:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
 674:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 675:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 676:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 677:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 678:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 679:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 28


 680:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 681:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 682:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 683:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 684:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 685:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 686:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 687:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 688:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 689:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 848              		.loc 1 689 0
 849              		.cfi_startproc
 850 0000 80B5     		push	{r7, lr}
 851              		.cfi_def_cfa_offset 8
 852              		.cfi_offset 7, -8
 853              		.cfi_offset 14, -4
 854 0002 82B0     		sub	sp, sp, #8
 855              		.cfi_def_cfa_offset 16
 856 0004 00AF     		add	r7, sp, #0
 857              		.cfi_def_cfa_register 7
 858 0006 7860     		str	r0, [r7, #4]
 690:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_sensorBaseline[sensor]);
 859              		.loc 1 690 0
 860 0008 034B     		ldr	r3, .L46
 861 000a 7A68     		ldr	r2, [r7, #4]
 862 000c 5200     		lsl	r2, r2, #1
 863 000e D35A     		ldrh	r3, [r2, r3]
 691:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 864              		.loc 1 691 0
 865 0010 181C     		mov	r0, r3
 866 0012 BD46     		mov	sp, r7
 867 0014 02B0     		add	sp, sp, #8
 868              		@ sp needed
 869 0016 80BD     		pop	{r7, pc}
 870              	.L47:
 871              		.align	2
 872              	.L46:
 873 0018 00000000 		.word	CapSense_sensorBaseline
 874              		.cfi_endproc
 875              	.LFE43:
 876              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 877              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 878              		.align	2
 879              		.global	CapSense_SetBaselineData
 880              		.code	16
 881              		.thumb_func
 882              		.type	CapSense_SetBaselineData, %function
 883              	CapSense_SetBaselineData:
 884              	.LFB44:
 692:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 693:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 694:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 695:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 696:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 697:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 698:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 29


 700:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 702:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 703:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 704:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 885              		.loc 1 716 0
 886              		.cfi_startproc
 887 0000 80B5     		push	{r7, lr}
 888              		.cfi_def_cfa_offset 8
 889              		.cfi_offset 7, -8
 890              		.cfi_offset 14, -4
 891 0002 82B0     		sub	sp, sp, #8
 892              		.cfi_def_cfa_offset 16
 893 0004 00AF     		add	r7, sp, #0
 894              		.cfi_def_cfa_register 7
 895 0006 7860     		str	r0, [r7, #4]
 896 0008 0A1C     		mov	r2, r1
 897 000a BB1C     		add	r3, r7, #2
 898 000c 1A80     		strh	r2, [r3]
 717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	CapSense_sensorBaseline[sensor] = data;
 899              		.loc 1 717 0
 900 000e 044B     		ldr	r3, .L49
 901 0010 7A68     		ldr	r2, [r7, #4]
 902 0012 5200     		lsl	r2, r2, #1
 903 0014 B91C     		add	r1, r7, #2
 904 0016 0988     		ldrh	r1, [r1]
 905 0018 D152     		strh	r1, [r2, r3]
 718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 906              		.loc 1 718 0
 907 001a BD46     		mov	sp, r7
 908 001c 02B0     		add	sp, sp, #8
 909              		@ sp needed
 910 001e 80BD     		pop	{r7, pc}
 911              	.L50:
 912              		.align	2
 913              	.L49:
 914 0020 00000000 		.word	CapSense_sensorBaseline
 915              		.cfi_endproc
 916              	.LFE44:
 917              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 918              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 919              		.align	2
 920              		.global	CapSense_GetDiffCountData
 921              		.code	16
 922              		.thumb_func
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 30


 923              		.type	CapSense_GetDiffCountData, %function
 924              	CapSense_GetDiffCountData:
 925              	.LFB45:
 719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the 
 733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument. 
 734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDiffCountData(uint32 sensor)
 743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 926              		.loc 1 743 0
 927              		.cfi_startproc
 928 0000 80B5     		push	{r7, lr}
 929              		.cfi_def_cfa_offset 8
 930              		.cfi_offset 7, -8
 931              		.cfi_offset 14, -4
 932 0002 82B0     		sub	sp, sp, #8
 933              		.cfi_def_cfa_offset 16
 934 0004 00AF     		add	r7, sp, #0
 935              		.cfi_def_cfa_register 7
 936 0006 7860     		str	r0, [r7, #4]
 744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_sensorSignal[sensor]);
 937              		.loc 1 744 0
 938 0008 034A     		ldr	r2, .L53
 939 000a 7B68     		ldr	r3, [r7, #4]
 940 000c D318     		add	r3, r2, r3
 941 000e 1B78     		ldrb	r3, [r3]
 745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 942              		.loc 1 745 0
 943 0010 181C     		mov	r0, r3
 944 0012 BD46     		mov	sp, r7
 945 0014 02B0     		add	sp, sp, #8
 946              		@ sp needed
 947 0016 80BD     		pop	{r7, pc}
 948              	.L54:
 949              		.align	2
 950              	.L53:
 951 0018 00000000 		.word	CapSense_sensorSignal
 952              		.cfi_endproc
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 31


 953              	.LFE45:
 954              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 955              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 956              		.align	2
 957              		.global	CapSense_SetDiffCountData
 958              		.code	16
 959              		.thumb_func
 960              		.type	CapSense_SetDiffCountData, %function
 961              	CapSense_SetDiffCountData:
 962              	.LFB46:
 746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None. 
 761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint8 value)
 770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 963              		.loc 1 770 0
 964              		.cfi_startproc
 965 0000 80B5     		push	{r7, lr}
 966              		.cfi_def_cfa_offset 8
 967              		.cfi_offset 7, -8
 968              		.cfi_offset 14, -4
 969 0002 82B0     		sub	sp, sp, #8
 970              		.cfi_def_cfa_offset 16
 971 0004 00AF     		add	r7, sp, #0
 972              		.cfi_def_cfa_register 7
 973 0006 7860     		str	r0, [r7, #4]
 974 0008 0A1C     		mov	r2, r1
 975 000a FB1C     		add	r3, r7, #3
 976 000c 1A70     		strb	r2, [r3]
 771:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 977              		.loc 1 771 0
 978 000e 044A     		ldr	r2, .L56
 979 0010 7B68     		ldr	r3, [r7, #4]
 980 0012 D318     		add	r3, r2, r3
 981 0014 FA1C     		add	r2, r7, #3
 982 0016 1278     		ldrb	r2, [r2]
 983 0018 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 32


 772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 984              		.loc 1 772 0
 985 001a BD46     		mov	sp, r7
 986 001c 02B0     		add	sp, sp, #8
 987              		@ sp needed
 988 001e 80BD     		pop	{r7, pc}
 989              	.L57:
 990              		.align	2
 991              	.L56:
 992 0020 00000000 		.word	CapSense_sensorSignal
 993              		.cfi_endproc
 994              	.LFE46:
 995              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 996              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 997              		.align	2
 998              		.global	CapSense_GetFingerThreshold
 999              		.code	16
 1000              		.thumb_func
 1001              		.type	CapSense_GetFingerThreshold, %function
 1002              	CapSense_GetFingerThreshold:
 1003              	.LFB47:
 773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument. 
 787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal 
 790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerThreshold(uint32 widget)
 797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1004              		.loc 1 797 0
 1005              		.cfi_startproc
 1006 0000 80B5     		push	{r7, lr}
 1007              		.cfi_def_cfa_offset 8
 1008              		.cfi_offset 7, -8
 1009              		.cfi_offset 14, -4
 1010 0002 82B0     		sub	sp, sp, #8
 1011              		.cfi_def_cfa_offset 16
 1012 0004 00AF     		add	r7, sp, #0
 1013              		.cfi_def_cfa_register 7
 1014 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 33


 798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_fingerThreshold[widget]);
 1015              		.loc 1 798 0
 1016 0008 034A     		ldr	r2, .L60
 1017 000a 7B68     		ldr	r3, [r7, #4]
 1018 000c D318     		add	r3, r2, r3
 1019 000e 1B78     		ldrb	r3, [r3]
 799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1020              		.loc 1 799 0
 1021 0010 181C     		mov	r0, r3
 1022 0012 BD46     		mov	sp, r7
 1023 0014 02B0     		add	sp, sp, #8
 1024              		@ sp needed
 1025 0016 80BD     		pop	{r7, pc}
 1026              	.L61:
 1027              		.align	2
 1028              	.L60:
 1029 0018 00000000 		.word	CapSense_fingerThreshold
 1030              		.cfi_endproc
 1031              	.LFE47:
 1032              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 1033              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 1034              		.align	2
 1035              		.global	CapSense_GetNoiseThreshold
 1036              		.code	16
 1037              		.thumb_func
 1038              		.type	CapSense_GetNoiseThreshold, %function
 1039              	CapSense_GetNoiseThreshold:
 1040              	.LFB48:
 800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 804:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 806:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 808:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 809:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 810:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 812:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument. 
 814:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 815:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 816:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal 
 817:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 818:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 819:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 820:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 821:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 822:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNoiseThreshold(uint32 widget)
 824:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1041              		.loc 1 824 0
 1042              		.cfi_startproc
 1043 0000 80B5     		push	{r7, lr}
 1044              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 34


 1045              		.cfi_offset 7, -8
 1046              		.cfi_offset 14, -4
 1047 0002 82B0     		sub	sp, sp, #8
 1048              		.cfi_def_cfa_offset 16
 1049 0004 00AF     		add	r7, sp, #0
 1050              		.cfi_def_cfa_register 7
 1051 0006 7860     		str	r0, [r7, #4]
 825:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return (CapSense_noiseThreshold[widget]);
 1052              		.loc 1 825 0
 1053 0008 034A     		ldr	r2, .L64
 1054 000a 7B68     		ldr	r3, [r7, #4]
 1055 000c D318     		add	r3, r2, r3
 1056 000e 1B78     		ldrb	r3, [r3]
 826:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1057              		.loc 1 826 0
 1058 0010 181C     		mov	r0, r3
 1059 0012 BD46     		mov	sp, r7
 1060 0014 02B0     		add	sp, sp, #8
 1061              		@ sp needed
 1062 0016 80BD     		pop	{r7, pc}
 1063              	.L65:
 1064              		.align	2
 1065              	.L64:
 1066 0018 00000000 		.word	CapSense_noiseThreshold
 1067              		.cfi_endproc
 1068              	.LFE48:
 1069              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 1070              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 1071              		.align	2
 1072              		.global	CapSense_GetFingerHysteresis
 1073              		.code	16
 1074              		.thumb_func
 1075              		.type	CapSense_GetFingerHysteresis, %function
 1076              	CapSense_GetFingerHysteresis:
 1077              	.LFB49:
 827:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 828:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 829:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 830:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 831:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 832:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 833:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 834:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 835:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 836:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 837:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 838:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 839:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 840:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument. 
 841:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 842:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 843:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value 
 844:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 845:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 846:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 847:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 848:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 35


 849:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 850:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 851:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerHysteresis(uint32 widget)
 852:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1078              		.loc 1 852 0
 1079              		.cfi_startproc
 1080 0000 80B5     		push	{r7, lr}
 1081              		.cfi_def_cfa_offset 8
 1082              		.cfi_offset 7, -8
 1083              		.cfi_offset 14, -4
 1084 0002 82B0     		sub	sp, sp, #8
 1085              		.cfi_def_cfa_offset 16
 1086 0004 00AF     		add	r7, sp, #0
 1087              		.cfi_def_cfa_register 7
 1088 0006 7860     		str	r0, [r7, #4]
 853:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_hysteresis[widget]);
 1089              		.loc 1 853 0
 1090 0008 034A     		ldr	r2, .L68
 1091 000a 7B68     		ldr	r3, [r7, #4]
 1092 000c D318     		add	r3, r2, r3
 1093 000e 1B78     		ldrb	r3, [r3]
 854:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1094              		.loc 1 854 0
 1095 0010 181C     		mov	r0, r3
 1096 0012 BD46     		mov	sp, r7
 1097 0014 02B0     		add	sp, sp, #8
 1098              		@ sp needed
 1099 0016 80BD     		pop	{r7, pc}
 1100              	.L69:
 1101              		.align	2
 1102              	.L68:
 1103 0018 00000000 		.word	CapSense_hysteresis
 1104              		.cfi_endproc
 1105              	.LFE49:
 1106              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 1107              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
 1108              		.align	2
 1109              		.global	CapSense_GetNegativeNoiseThreshold
 1110              		.code	16
 1111              		.thumb_func
 1112              		.type	CapSense_GetNegativeNoiseThreshold, %function
 1113              	CapSense_GetNegativeNoiseThreshold:
 1114              	.LFB50:
 855:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 856:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 857:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 858:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 859:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 860:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 861:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 862:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
 863:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 864:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters: 
 865:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 866:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 867:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value: 
 868:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 36


 869:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 870:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 871:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative 
 872:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 873:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 874:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
 875:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 876:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 877:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
 878:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 879:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 880:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1115              		.loc 1 880 0
 1116              		.cfi_startproc
 1117 0000 80B5     		push	{r7, lr}
 1118              		.cfi_def_cfa_offset 8
 1119              		.cfi_offset 7, -8
 1120              		.cfi_offset 14, -4
 1121 0002 82B0     		sub	sp, sp, #8
 1122              		.cfi_def_cfa_offset 16
 1123 0004 00AF     		add	r7, sp, #0
 1124              		.cfi_def_cfa_register 7
 1125 0006 7860     		str	r0, [r7, #4]
 881:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 882:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_negativeNoiseThreshold[widget]);
 1126              		.loc 1 882 0
 1127 0008 034A     		ldr	r2, .L72
 1128 000a 7B68     		ldr	r3, [r7, #4]
 1129 000c D318     		add	r3, r2, r3
 1130 000e 1B78     		ldrb	r3, [r3]
 883:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 884:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 885:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */ 
 886:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1131              		.loc 1 886 0
 1132 0010 181C     		mov	r0, r3
 1133 0012 BD46     		mov	sp, r7
 1134 0014 02B0     		add	sp, sp, #8
 1135              		@ sp needed
 1136 0016 80BD     		pop	{r7, pc}
 1137              	.L73:
 1138              		.align	2
 1139              	.L72:
 1140 0018 00000000 		.word	CapSense_negativeNoiseThreshold
 1141              		.cfi_endproc
 1142              	.LFE50:
 1143              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 1144              		.section	.text.CapSense_SetFingerThreshold,"ax",%progbits
 1145              		.align	2
 1146              		.global	CapSense_SetFingerThreshold
 1147              		.code	16
 1148              		.thumb_func
 1149              		.type	CapSense_SetFingerThreshold, %function
 1150              	CapSense_SetFingerThreshold:
 1151              	.LFB51:
 887:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 888:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 37


 889:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 890:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 891:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetFingerThreshold
 892:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 893:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 894:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 895:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the finger threshold value for a widget. 
 896:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 897:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 898:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  sensorNumber:  widget index. 
 899:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Finger threshold value for the widget.
 900:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 901:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 902:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 903:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 904:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 905:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_fingerThreshold[] - This array contains the level of signal 
 906:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   for each widget that determines if a finger is present on the widget.
 907:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
 908:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 909:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 910:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 911:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 912:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetFingerThreshold(uint32 widget, uint8 value)
 913:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{	
 1152              		.loc 1 913 0
 1153              		.cfi_startproc
 1154 0000 80B5     		push	{r7, lr}
 1155              		.cfi_def_cfa_offset 8
 1156              		.cfi_offset 7, -8
 1157              		.cfi_offset 14, -4
 1158 0002 82B0     		sub	sp, sp, #8
 1159              		.cfi_def_cfa_offset 16
 1160 0004 00AF     		add	r7, sp, #0
 1161              		.cfi_def_cfa_register 7
 1162 0006 7860     		str	r0, [r7, #4]
 1163 0008 0A1C     		mov	r2, r1
 1164 000a FB1C     		add	r3, r7, #3
 1165 000c 1A70     		strb	r2, [r3]
 914:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_fingerThreshold[widget] = value;
 1166              		.loc 1 914 0
 1167 000e 044A     		ldr	r2, .L75
 1168 0010 7B68     		ldr	r3, [r7, #4]
 1169 0012 D318     		add	r3, r2, r3
 1170 0014 FA1C     		add	r2, r7, #3
 1171 0016 1278     		ldrb	r2, [r2]
 1172 0018 1A70     		strb	r2, [r3]
 915:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1173              		.loc 1 915 0
 1174 001a BD46     		mov	sp, r7
 1175 001c 02B0     		add	sp, sp, #8
 1176              		@ sp needed
 1177 001e 80BD     		pop	{r7, pc}
 1178              	.L76:
 1179              		.align	2
 1180              	.L75:
 1181 0020 00000000 		.word	CapSense_fingerThreshold
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 38


 1182              		.cfi_endproc
 1183              	.LFE51:
 1184              		.size	CapSense_SetFingerThreshold, .-CapSense_SetFingerThreshold
 1185              		.section	.text.CapSense_SetNoiseThreshold,"ax",%progbits
 1186              		.align	2
 1187              		.global	CapSense_SetNoiseThreshold
 1188              		.code	16
 1189              		.thumb_func
 1190              		.type	CapSense_SetNoiseThreshold, %function
 1191              	CapSense_SetNoiseThreshold:
 1192              	.LFB52:
 916:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 917:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 918:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 919:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetNoiseThreshold
 920:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 921:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 922:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 923:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Noise Threshold value for each widget.
 924:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 925:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
 926:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget:  Sensor index number.
 927:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:   Noise Threshold value for widget.
 928:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 929:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 930:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 931:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 932:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 933:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_noiseThreshold[] - This array contains the level of signal 
 934:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   for each widget that determines the level of noise in the capacitive scan.
 935:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
 936:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 937:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 938:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 939:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 940:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetNoiseThreshold(uint32 widget, uint8 value)
 941:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1193              		.loc 1 941 0
 1194              		.cfi_startproc
 1195 0000 80B5     		push	{r7, lr}
 1196              		.cfi_def_cfa_offset 8
 1197              		.cfi_offset 7, -8
 1198              		.cfi_offset 14, -4
 1199 0002 82B0     		sub	sp, sp, #8
 1200              		.cfi_def_cfa_offset 16
 1201 0004 00AF     		add	r7, sp, #0
 1202              		.cfi_def_cfa_register 7
 1203 0006 7860     		str	r0, [r7, #4]
 1204 0008 0A1C     		mov	r2, r1
 1205 000a FB1C     		add	r3, r7, #3
 1206 000c 1A70     		strb	r2, [r3]
 942:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_noiseThreshold[widget] = value;
 1207              		.loc 1 942 0
 1208 000e 044A     		ldr	r2, .L78
 1209 0010 7B68     		ldr	r3, [r7, #4]
 1210 0012 D318     		add	r3, r2, r3
 1211 0014 FA1C     		add	r2, r7, #3
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 39


 1212 0016 1278     		ldrb	r2, [r2]
 1213 0018 1A70     		strb	r2, [r3]
 943:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1214              		.loc 1 943 0
 1215 001a BD46     		mov	sp, r7
 1216 001c 02B0     		add	sp, sp, #8
 1217              		@ sp needed
 1218 001e 80BD     		pop	{r7, pc}
 1219              	.L79:
 1220              		.align	2
 1221              	.L78:
 1222 0020 00000000 		.word	CapSense_noiseThreshold
 1223              		.cfi_endproc
 1224              	.LFE52:
 1225              		.size	CapSense_SetNoiseThreshold, .-CapSense_SetNoiseThreshold
 1226              		.section	.text.CapSense_SetFingerHysteresis,"ax",%progbits
 1227              		.align	2
 1228              		.global	CapSense_SetFingerHysteresis
 1229              		.code	16
 1230              		.thumb_func
 1231              		.type	CapSense_SetFingerHysteresis, %function
 1232              	CapSense_SetFingerHysteresis:
 1233              	.LFB53:
 944:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 945:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 946:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 947:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetFingerHysteresis
 948:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 949:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 950:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 951:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Hysteresis value of a widget
 952:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 953:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 954:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Hysteresis value for widgets.
 955:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget:  widget number
 956:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 957:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 958:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 959:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 960:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 961:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 962:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 963:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 964:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
 965:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 966:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 967:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 968:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetFingerHysteresis(uint32 widget, uint8 value)
 969:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1234              		.loc 1 969 0
 1235              		.cfi_startproc
 1236 0000 80B5     		push	{r7, lr}
 1237              		.cfi_def_cfa_offset 8
 1238              		.cfi_offset 7, -8
 1239              		.cfi_offset 14, -4
 1240 0002 82B0     		sub	sp, sp, #8
 1241              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 40


 1242 0004 00AF     		add	r7, sp, #0
 1243              		.cfi_def_cfa_register 7
 1244 0006 7860     		str	r0, [r7, #4]
 1245 0008 0A1C     		mov	r2, r1
 1246 000a FB1C     		add	r3, r7, #3
 1247 000c 1A70     		strb	r2, [r3]
 970:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_hysteresis[widget] = value;
 1248              		.loc 1 970 0
 1249 000e 044A     		ldr	r2, .L81
 1250 0010 7B68     		ldr	r3, [r7, #4]
 1251 0012 D318     		add	r3, r2, r3
 1252 0014 FA1C     		add	r2, r7, #3
 1253 0016 1278     		ldrb	r2, [r2]
 1254 0018 1A70     		strb	r2, [r3]
 971:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1255              		.loc 1 971 0
 1256 001a BD46     		mov	sp, r7
 1257 001c 02B0     		add	sp, sp, #8
 1258              		@ sp needed
 1259 001e 80BD     		pop	{r7, pc}
 1260              	.L82:
 1261              		.align	2
 1262              	.L81:
 1263 0020 00000000 		.word	CapSense_hysteresis
 1264              		.cfi_endproc
 1265              	.LFE53:
 1266              		.size	CapSense_SetFingerHysteresis, .-CapSense_SetFingerHysteresis
 1267              		.section	.text.CapSense_SetNegativeNoiseThreshold,"ax",%progbits
 1268              		.align	2
 1269              		.global	CapSense_SetNegativeNoiseThreshold
 1270              		.code	16
 1271              		.thumb_func
 1272              		.type	CapSense_SetNegativeNoiseThreshold, %function
 1273              	CapSense_SetNegativeNoiseThreshold:
 1274              	.LFB54:
 972:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 973:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
 974:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
 975:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetNegativeNoiseThreshold
 976:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
 977:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 978:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
 979:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the Negative Noise Threshold value of a widget
 980:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 981:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
 982:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Negative Noise Threshold value for widgets.
 983:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget: widget number
 984:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 985:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
 986:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 987:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 988:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
 989:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_negativeNoiseThreshold  - This parameter specifies the negative 
 990:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   difference between the raw count and baseline levels for Baseline resetting to 
 991:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*   the raw count level.
 992:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
 993:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 41


 994:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
 995:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
 996:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
 997:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
 998:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1275              		.loc 1 998 0
 1276              		.cfi_startproc
 1277 0000 80B5     		push	{r7, lr}
 1278              		.cfi_def_cfa_offset 8
 1279              		.cfi_offset 7, -8
 1280              		.cfi_offset 14, -4
 1281 0002 82B0     		sub	sp, sp, #8
 1282              		.cfi_def_cfa_offset 16
 1283 0004 00AF     		add	r7, sp, #0
 1284              		.cfi_def_cfa_register 7
 1285 0006 7860     		str	r0, [r7, #4]
 1286 0008 0A1C     		mov	r2, r1
 1287 000a FB1C     		add	r3, r7, #3
 1288 000c 1A70     		strb	r2, [r3]
 999:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_negativeNoiseThreshold[widget] = value;
 1289              		.loc 1 999 0
 1290 000e 044A     		ldr	r2, .L84
 1291 0010 7B68     		ldr	r3, [r7, #4]
 1292 0012 D318     		add	r3, r2, r3
 1293 0014 FA1C     		add	r2, r7, #3
 1294 0016 1278     		ldrb	r2, [r2]
 1295 0018 1A70     		strb	r2, [r3]
1000:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1296              		.loc 1 1000 0
 1297 001a BD46     		mov	sp, r7
 1298 001c 02B0     		add	sp, sp, #8
 1299              		@ sp needed
 1300 001e 80BD     		pop	{r7, pc}
 1301              	.L85:
 1302              		.align	2
 1303              	.L84:
 1304 0020 00000000 		.word	CapSense_negativeNoiseThreshold
 1305              		.cfi_endproc
 1306              	.LFE54:
 1307              		.size	CapSense_SetNegativeNoiseThreshold, .-CapSense_SetNegativeNoiseThreshold
 1308              		.section	.text.CapSense_SetDebounce,"ax",%progbits
 1309              		.align	2
 1310              		.global	CapSense_SetDebounce
 1311              		.code	16
 1312              		.thumb_func
 1313              		.type	CapSense_SetDebounce, %function
 1314              	CapSense_SetDebounce:
 1315              	.LFB55:
1001:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1002:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1003:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
1004:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetDebounce
1005:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
1006:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1007:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
1008:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the debounce value for a widget.
1009:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 42


1010:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
1011:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value:  Debounce value for widget.
1012:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  widget: widget index.
1013:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1014:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
1015:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1016:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1017:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1018:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_debounce[] - This array contains the debounce value for each widget.
1019:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1020:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1021:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
1022:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1023:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1024:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
1025:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetDebounce(uint32 widget, uint8 value)
1026:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1316              		.loc 1 1026 0
 1317              		.cfi_startproc
 1318 0000 80B5     		push	{r7, lr}
 1319              		.cfi_def_cfa_offset 8
 1320              		.cfi_offset 7, -8
 1321              		.cfi_offset 14, -4
 1322 0002 82B0     		sub	sp, sp, #8
 1323              		.cfi_def_cfa_offset 16
 1324 0004 00AF     		add	r7, sp, #0
 1325              		.cfi_def_cfa_register 7
 1326 0006 7860     		str	r0, [r7, #4]
 1327 0008 0A1C     		mov	r2, r1
 1328 000a FB1C     		add	r3, r7, #3
 1329 000c 1A70     		strb	r2, [r3]
1027:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_debounce[widget] = value;
 1330              		.loc 1 1027 0
 1331 000e 044A     		ldr	r2, .L87
 1332 0010 7B68     		ldr	r3, [r7, #4]
 1333 0012 D318     		add	r3, r2, r3
 1334 0014 FA1C     		add	r2, r7, #3
 1335 0016 1278     		ldrb	r2, [r2]
 1336 0018 1A70     		strb	r2, [r3]
1028:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1337              		.loc 1 1028 0
 1338 001a BD46     		mov	sp, r7
 1339 001c 02B0     		add	sp, sp, #8
 1340              		@ sp needed
 1341 001e 80BD     		pop	{r7, pc}
 1342              	.L88:
 1343              		.align	2
 1344              	.L87:
 1345 0020 00000000 		.word	CapSense_debounce
 1346              		.cfi_endproc
 1347              	.LFE55:
 1348              		.size	CapSense_SetDebounce, .-CapSense_SetDebounce
 1349              		.section	.text.CapSense_SetLowBaselineReset,"ax",%progbits
 1350              		.align	2
 1351              		.global	CapSense_SetLowBaselineReset
 1352              		.code	16
 1353              		.thumb_func
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 43


 1354              		.type	CapSense_SetLowBaselineReset, %function
 1355              	CapSense_SetLowBaselineReset:
 1356              	.LFB56:
1029:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1030:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1031:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
1032:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_SetLowBaselineReset
1033:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
1034:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1035:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
1036:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  This API sets the low baseline reset threshold value for the sensor.
1037:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1038:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters: 
1039:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  value: low baseline reset threshold value.
1040:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  sensor: Sensor index.
1041:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1042:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return Value: 
1043:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1044:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1045:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1046:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_lowBaselineReset[] - This array contains the Baseline update 
1047:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  threshold value for each sensor.
1048:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1049:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
1050:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1051:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1052:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
1053:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1054:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 1357              		.loc 1 1054 0
 1358              		.cfi_startproc
 1359 0000 80B5     		push	{r7, lr}
 1360              		.cfi_def_cfa_offset 8
 1361              		.cfi_offset 7, -8
 1362              		.cfi_offset 14, -4
 1363 0002 82B0     		sub	sp, sp, #8
 1364              		.cfi_def_cfa_offset 16
 1365 0004 00AF     		add	r7, sp, #0
 1366              		.cfi_def_cfa_register 7
 1367 0006 7860     		str	r0, [r7, #4]
 1368 0008 0A1C     		mov	r2, r1
 1369 000a FB1C     		add	r3, r7, #3
 1370 000c 1A70     		strb	r2, [r3]
1055:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_lowBaselineReset[sensor] = value;
 1371              		.loc 1 1055 0
 1372 000e 044A     		ldr	r2, .L90
 1373 0010 7B68     		ldr	r3, [r7, #4]
 1374 0012 D318     		add	r3, r2, r3
 1375 0014 FA1C     		add	r2, r7, #3
 1376 0016 1278     		ldrb	r2, [r2]
 1377 0018 1A70     		strb	r2, [r3]
1056:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 1378              		.loc 1 1056 0
 1379 001a BD46     		mov	sp, r7
 1380 001c 02B0     		add	sp, sp, #8
 1381              		@ sp needed
 1382 001e 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 44


 1383              	.L91:
 1384              		.align	2
 1385              	.L90:
 1386 0020 00000000 		.word	CapSense_lowBaselineReset
 1387              		.cfi_endproc
 1388              	.LFE56:
 1389              		.size	CapSense_SetLowBaselineReset, .-CapSense_SetLowBaselineReset
 1390              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 1391              		.align	2
 1392              		.global	CapSense_CheckIsSensorActive
 1393              		.code	16
 1394              		.thumb_func
 1395              		.type	CapSense_CheckIsSensorActive, %function
 1396              	CapSense_CheckIsSensorActive:
 1397              	.LFB57:
1057:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1058:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1059:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1060:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1061:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1062:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1063:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1064:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1065:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1066:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into 
1067:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
1068:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active. 
1069:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1070:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1071:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1072:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1073:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1074:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1075:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1076:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1077:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1078:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1079:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1080:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1081:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between 
1082:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1083:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce 
1084:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix 
1085:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1086:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1087:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1088:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors 
1089:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1090:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1091:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1092:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
1093:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
1094:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1095:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1096:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1097:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1098:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 45


1099:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1100:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {	
 1398              		.loc 1 1100 0
 1399              		.cfi_startproc
 1400 0000 80B5     		push	{r7, lr}
 1401              		.cfi_def_cfa_offset 8
 1402              		.cfi_offset 7, -8
 1403              		.cfi_offset 14, -4
 1404 0002 84B0     		sub	sp, sp, #16
 1405              		.cfi_def_cfa_offset 24
 1406 0004 00AF     		add	r7, sp, #0
 1407              		.cfi_def_cfa_register 7
 1408 0006 7860     		str	r0, [r7, #4]
1101:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 widget;
1102:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 debounce;
1103:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 debounceIndex;
1104:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1105:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 fingerThreshold;
1106:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	uint8 hysteresis;
1107:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1108:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1109:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1110:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
 1409              		.loc 1 1110 0
 1410 0008 3B1C     		mov	r3, r7
 1411 000a 0F33     		add	r3, r3, #15
 1412 000c 4349     		ldr	r1, .L101
 1413 000e 7A68     		ldr	r2, [r7, #4]
 1414 0010 8A18     		add	r2, r1, r2
 1415 0012 1278     		ldrb	r2, [r2]
 1416 0014 1A70     		strb	r2, [r3]
1111:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1112:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
 1417              		.loc 1 1112 0
 1418 0016 3B1C     		mov	r3, r7
 1419 0018 0F33     		add	r3, r3, #15
 1420 001a 1A78     		ldrb	r2, [r3]
 1421 001c 3B1C     		mov	r3, r7
 1422 001e 0E33     		add	r3, r3, #14
 1423 0020 3F49     		ldr	r1, .L101+4
 1424 0022 8A5C     		ldrb	r2, [r1, r2]
 1425 0024 1A70     		strb	r2, [r3]
1113:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	hysteresis = CapSense_hysteresis[widget];
 1426              		.loc 1 1113 0
 1427 0026 3B1C     		mov	r3, r7
 1428 0028 0F33     		add	r3, r3, #15
 1429 002a 1A78     		ldrb	r2, [r3]
 1430 002c 3B1C     		mov	r3, r7
 1431 002e 0D33     		add	r3, r3, #13
 1432 0030 3C49     		ldr	r1, .L101+8
 1433 0032 8A5C     		ldrb	r2, [r1, r2]
 1434 0034 1A70     		strb	r2, [r3]
1114:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	debounce = CapSense_debounce[widget];	
 1435              		.loc 1 1114 0
 1436 0036 3B1C     		mov	r3, r7
 1437 0038 0F33     		add	r3, r3, #15
 1438 003a 1A78     		ldrb	r2, [r3]
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 46


 1439 003c 3B1C     		mov	r3, r7
 1440 003e 0C33     		add	r3, r3, #12
 1441 0040 3949     		ldr	r1, .L101+12
 1442 0042 8A5C     		ldrb	r2, [r1, r2]
 1443 0044 1A70     		strb	r2, [r3]
1115:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1116:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    debounceIndex = widget;
 1444              		.loc 1 1116 0
 1445 0046 3B1C     		mov	r3, r7
 1446 0048 0B33     		add	r3, r3, #11
 1447 004a 3A1C     		mov	r2, r7
 1448 004c 0F32     		add	r2, r2, #15
 1449 004e 1278     		ldrb	r2, [r2]
 1450 0050 1A70     		strb	r2, [r3]
1117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	
1119:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1120:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 1451              		.loc 1 1120 0
 1452 0052 364A     		ldr	r2, .L101+16
 1453 0054 7B68     		ldr	r3, [r7, #4]
 1454 0056 101C     		mov	r0, r2
 1455 0058 191C     		mov	r1, r3
 1456 005a FFF7FEFF 		bl	CapSense_GetBitValue
 1457 005e 031C     		mov	r3, r0
 1458 0060 002B     		cmp	r3, #0
 1459 0062 1DD0     		beq	.L93
1121:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1122:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1123:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 1460              		.loc 1 1123 0
 1461 0064 324A     		ldr	r2, .L101+20
 1462 0066 7B68     		ldr	r3, [r7, #4]
 1463 0068 D318     		add	r3, r2, r3
 1464 006a 1B78     		ldrb	r3, [r3]
 1465 006c 1A1C     		mov	r2, r3
 1466 006e 3B1C     		mov	r3, r7
 1467 0070 0E33     		add	r3, r3, #14
 1468 0072 1978     		ldrb	r1, [r3]
 1469 0074 3B1C     		mov	r3, r7
 1470 0076 0D33     		add	r3, r3, #13
 1471 0078 1B78     		ldrb	r3, [r3]
 1472 007a CB1A     		sub	r3, r1, r3
 1473 007c 9A42     		cmp	r2, r3
 1474 007e 3DDA     		bge	.L95
1124:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1125:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	   		CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
 1475              		.loc 1 1125 0
 1476 0080 2A4A     		ldr	r2, .L101+16
 1477 0082 7B68     		ldr	r3, [r7, #4]
 1478 0084 101C     		mov	r0, r2
 1479 0086 191C     		mov	r1, r3
 1480 0088 0022     		mov	r2, #0
 1481 008a FFF7FEFF 		bl	CapSense_SetBitValue
1126:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			/* Sensor inactive - reset Debounce counter */
1127:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1482              		.loc 1 1127 0
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 47


 1483 008e 3B1C     		mov	r3, r7
 1484 0090 0B33     		add	r3, r3, #11
 1485 0092 1B78     		ldrb	r3, [r3]
 1486 0094 274A     		ldr	r2, .L101+24
 1487 0096 391C     		mov	r1, r7
 1488 0098 0C31     		add	r1, r1, #12
 1489 009a 0978     		ldrb	r1, [r1]
 1490 009c D154     		strb	r1, [r2, r3]
 1491 009e 2DE0     		b	.L95
 1492              	.L93:
1128:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1129:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 1493              		.loc 1 1133 0
 1494 00a0 234A     		ldr	r2, .L101+20
 1495 00a2 7B68     		ldr	r3, [r7, #4]
 1496 00a4 D318     		add	r3, r2, r3
 1497 00a6 1B78     		ldrb	r3, [r3]
 1498 00a8 1A1C     		mov	r2, r3
 1499 00aa 3B1C     		mov	r3, r7
 1500 00ac 0E33     		add	r3, r3, #14
 1501 00ae 1978     		ldrb	r1, [r3]
 1502 00b0 3B1C     		mov	r3, r7
 1503 00b2 0D33     		add	r3, r3, #13
 1504 00b4 1B78     		ldrb	r3, [r3]
 1505 00b6 CB18     		add	r3, r1, r3
 1506 00b8 9A42     		cmp	r2, r3
 1507 00ba 17DB     		blt	.L96
1134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1135:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			CapSense_debounceCounter[debounceIndex]--;
 1508              		.loc 1 1135 0
 1509 00bc 3B1C     		mov	r3, r7
 1510 00be 0B33     		add	r3, r3, #11
 1511 00c0 1B78     		ldrb	r3, [r3]
 1512 00c2 1C4A     		ldr	r2, .L101+24
 1513 00c4 D25C     		ldrb	r2, [r2, r3]
 1514 00c6 013A     		sub	r2, r2, #1
 1515 00c8 D1B2     		uxtb	r1, r2
 1516 00ca 1A4A     		ldr	r2, .L101+24
 1517 00cc D154     		strb	r1, [r2, r3]
1136:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 1518              		.loc 1 1137 0
 1519 00ce 3B1C     		mov	r3, r7
 1520 00d0 0B33     		add	r3, r3, #11
 1521 00d2 1B78     		ldrb	r3, [r3]
 1522 00d4 174A     		ldr	r2, .L101+24
 1523 00d6 D35C     		ldrb	r3, [r2, r3]
 1524 00d8 002B     		cmp	r3, #0
 1525 00da 0FD1     		bne	.L95
1138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u); 
 1526              		.loc 1 1139 0
 1527 00dc 134A     		ldr	r2, .L101+16
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 48


 1528 00de 7B68     		ldr	r3, [r7, #4]
 1529 00e0 101C     		mov	r0, r2
 1530 00e2 191C     		mov	r1, r3
 1531 00e4 0122     		mov	r2, #1
 1532 00e6 FFF7FEFF 		bl	CapSense_SetBitValue
 1533 00ea 07E0     		b	.L95
 1534              	.L96:
1140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1142:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1535              		.loc 1 1145 0
 1536 00ec 3B1C     		mov	r3, r7
 1537 00ee 0B33     		add	r3, r3, #11
 1538 00f0 1B78     		ldrb	r3, [r3]
 1539 00f2 104A     		ldr	r2, .L101+24
 1540 00f4 391C     		mov	r1, r7
 1541 00f6 0C31     		add	r1, r1, #12
 1542 00f8 0978     		ldrb	r1, [r1]
 1543 00fa D154     		strb	r1, [r2, r3]
 1544              	.L95:
1146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 1545              		.loc 1 1149 0
 1546 00fc 0B4A     		ldr	r2, .L101+16
 1547 00fe 7B68     		ldr	r3, [r7, #4]
 1548 0100 101C     		mov	r0, r2
 1549 0102 191C     		mov	r1, r3
 1550 0104 FFF7FEFF 		bl	CapSense_GetBitValue
 1551 0108 031C     		mov	r3, r0
 1552 010a 002B     		cmp	r3, #0
 1553 010c 01D0     		beq	.L98
 1554              		.loc 1 1149 0 is_stmt 0 discriminator 1
 1555 010e 0123     		mov	r3, #1
 1556 0110 00E0     		b	.L99
 1557              	.L98:
 1558              		.loc 1 1149 0 discriminator 2
 1559 0112 0023     		mov	r3, #0
 1560              	.L99:
1150:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1561              		.loc 1 1150 0 is_stmt 1 discriminator 3
 1562 0114 181C     		mov	r0, r3
 1563 0116 BD46     		mov	sp, r7
 1564 0118 04B0     		add	sp, sp, #16
 1565              		@ sp needed
 1566 011a 80BD     		pop	{r7, pc}
 1567              	.L102:
 1568              		.align	2
 1569              	.L101:
 1570 011c 00000000 		.word	CapSense_widgetNumber
 1571 0120 00000000 		.word	CapSense_fingerThreshold
 1572 0124 00000000 		.word	CapSense_hysteresis
 1573 0128 00000000 		.word	CapSense_debounce
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 49


 1574 012c 00000000 		.word	CapSense_sensorOnMask
 1575 0130 00000000 		.word	CapSense_sensorSignal
 1576 0134 10000000 		.word	CapSense_debounceCounter
 1577              		.cfi_endproc
 1578              	.LFE57:
 1579              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 1580              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 1581              		.align	2
 1582              		.global	CapSense_CheckIsWidgetActive
 1583              		.code	16
 1584              		.thumb_func
 1585              		.type	CapSense_CheckIsWidgetActive, %function
 1586              	CapSense_CheckIsWidgetActive:
 1587              	.LFB58:
1151:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1152:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1153:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1154:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1155:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1156:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1157:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1158:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of 
1159:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account. 
1160:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1161:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is 
1162:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold 
1163:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount. 
1164:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition. 
1165:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1166:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1167:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1168:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1169:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1170:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1171:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
1172:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1173:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1174:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1175:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1176:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1177:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1178:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1179:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1180:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1181:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1182:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1588              		.loc 1 1182 0
 1589              		.cfi_startproc
 1590 0000 80B5     		push	{r7, lr}
 1591              		.cfi_def_cfa_offset 8
 1592              		.cfi_offset 7, -8
 1593              		.cfi_offset 14, -4
 1594 0002 86B0     		sub	sp, sp, #24
 1595              		.cfi_def_cfa_offset 32
 1596 0004 00AF     		add	r7, sp, #0
 1597              		.cfi_def_cfa_register 7
 1598 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 50


1183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 1599              		.loc 1 1183 0
 1600 0008 0023     		mov	r3, #0
 1601 000a 7B61     		str	r3, [r7, #20]
1184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
 1602              		.loc 1 1184 0
 1603 000c 0123     		mov	r3, #1
 1604 000e 1A1C     		mov	r2, r3
 1605 0010 7B69     		ldr	r3, [r7, #20]
 1606 0012 D318     		add	r3, r2, r3
 1607 0014 FB60     		str	r3, [r7, #12]
1185:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 1608              		.loc 1 1185 0
 1609 0016 0023     		mov	r3, #0
 1610 0018 3B61     		str	r3, [r7, #16]
 1611              	.L105:
1186:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 1612              		.loc 1 1190 0
 1613 001a 7B69     		ldr	r3, [r7, #20]
 1614 001c 181C     		mov	r0, r3
 1615 001e FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 1616 0022 031C     		mov	r3, r0
 1617 0024 002B     		cmp	r3, #0
 1618 0026 01D0     		beq	.L104
1191:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1192:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 1619              		.loc 1 1192 0
 1620 0028 0123     		mov	r3, #1
 1621 002a 3B61     		str	r3, [r7, #16]
 1622              	.L104:
1193:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1623              		.loc 1 1194 0
 1624 002c 7B69     		ldr	r3, [r7, #20]
 1625 002e 0133     		add	r3, r3, #1
 1626 0030 7B61     		str	r3, [r7, #20]
1195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1627              		.loc 1 1196 0
 1628 0032 7A69     		ldr	r2, [r7, #20]
 1629 0034 FB68     		ldr	r3, [r7, #12]
 1630 0036 9A42     		cmp	r2, r3
 1631 0038 EFD3     		bcc	.L105
1197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1198:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1199:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1200:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1632              		.loc 1 1200 0
 1633 003a 3B69     		ldr	r3, [r7, #16]
1201:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1634              		.loc 1 1201 0
 1635 003c 181C     		mov	r0, r3
 1636 003e BD46     		mov	sp, r7
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 51


 1637 0040 06B0     		add	sp, sp, #24
 1638              		@ sp needed
 1639 0042 80BD     		pop	{r7, pc}
 1640              		.cfi_endproc
 1641              	.LFE58:
 1642              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 1643              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 1644              		.align	2
 1645              		.global	CapSense_CheckIsAnyWidgetActive
 1646              		.code	16
 1647              		.thumb_func
 1648              		.type	CapSense_CheckIsAnyWidgetActive, %function
 1649              	CapSense_CheckIsAnyWidgetActive:
 1650              	.LFB59:
1202:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1203:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1205:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1206:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1207:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1208:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1209:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger 
1210:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so 
1211:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this 
1212:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1213:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1214:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1215:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1216:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1217:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1218:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1219:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1220:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1221:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1222:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1223:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1224:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1225:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1226:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1227:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1228:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1651              		.loc 1 1228 0
 1652              		.cfi_startproc
 1653 0000 80B5     		push	{r7, lr}
 1654              		.cfi_def_cfa_offset 8
 1655              		.cfi_offset 7, -8
 1656              		.cfi_offset 14, -4
 1657 0002 82B0     		sub	sp, sp, #8
 1658              		.cfi_def_cfa_offset 16
 1659 0004 00AF     		add	r7, sp, #0
 1660              		.cfi_def_cfa_register 7
1229:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1230:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	    uint32 i;
1231:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 1661              		.loc 1 1231 0
 1662 0006 0023     		mov	r3, #0
 1663 0008 3B60     		str	r3, [r7]
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 52


1232:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1233:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 1664              		.loc 1 1233 0
 1665 000a 0023     		mov	r3, #0
 1666 000c 7B60     		str	r3, [r7, #4]
 1667 000e 0BE0     		b	.L108
 1668              	.L110:
1234:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1235:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 1669              		.loc 1 1235 0
 1670 0010 7B68     		ldr	r3, [r7, #4]
 1671 0012 181C     		mov	r0, r3
 1672 0014 FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 1673 0018 031C     		mov	r3, r0
 1674 001a 002B     		cmp	r3, #0
 1675 001c 01D0     		beq	.L109
1236:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 1676              		.loc 1 1237 0
 1677 001e 0123     		mov	r3, #1
 1678 0020 3B60     		str	r3, [r7]
 1679              	.L109:
1233:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 1680              		.loc 1 1233 0
 1681 0022 7B68     		ldr	r3, [r7, #4]
 1682 0024 0133     		add	r3, r3, #1
 1683 0026 7B60     		str	r3, [r7, #4]
 1684              	.L108:
1233:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 1685              		.loc 1 1233 0 is_stmt 0 discriminator 1
 1686 0028 7B68     		ldr	r3, [r7, #4]
 1687 002a 002B     		cmp	r3, #0
 1688 002c F0D0     		beq	.L110
1238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1241:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1242:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1689              		.loc 1 1243 0 is_stmt 1
 1690 002e 3B68     		ldr	r3, [r7]
1244:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1691              		.loc 1 1244 0
 1692 0030 181C     		mov	r0, r3
 1693 0032 BD46     		mov	sp, r7
 1694 0034 02B0     		add	sp, sp, #8
 1695              		@ sp needed
 1696 0036 80BD     		pop	{r7, pc}
 1697              		.cfi_endproc
 1698              	.LFE59:
 1699              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 1700              		.section	.text.CapSense_EnableWidget,"ax",%progbits
 1701              		.align	2
 1702              		.global	CapSense_EnableWidget
 1703              		.code	16
 1704              		.thumb_func
 1705              		.type	CapSense_EnableWidget, %function
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 53


 1706              	CapSense_EnableWidget:
 1707              	.LFB60:
1245:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1246:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1247:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1248:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1249:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1250:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1251:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1252:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1253:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1254:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1255:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1256:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1257:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1258:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1259:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1260:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1261:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
1262:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1263:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
1264:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1266:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1267:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1268:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1270:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1271:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1272:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1273:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1274:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1275:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1708              		.loc 1 1275 0
 1709              		.cfi_startproc
 1710 0000 80B5     		push	{r7, lr}
 1711              		.cfi_def_cfa_offset 8
 1712              		.cfi_offset 7, -8
 1713              		.cfi_offset 14, -4
 1714 0002 84B0     		sub	sp, sp, #16
 1715              		.cfi_def_cfa_offset 24
 1716 0004 00AF     		add	r7, sp, #0
 1717              		.cfi_def_cfa_register 7
 1718 0006 7860     		str	r0, [r7, #4]
1276:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1277:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1719              		.loc 1 1277 0
 1720 0008 3B1C     		mov	r3, r7
 1721 000a 0F33     		add	r3, r3, #15
 1722 000c 0022     		mov	r2, #0
 1723 000e 1A70     		strb	r2, [r3]
1278:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1724              		.loc 1 1278 0
 1725 0010 0121     		mov	r1, #1
 1726 0012 3B1C     		mov	r3, r7
 1727 0014 0E33     		add	r3, r3, #14
 1728 0016 3A1C     		mov	r2, r7
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 54


 1729 0018 0F32     		add	r2, r2, #15
 1730 001a 1278     		ldrb	r2, [r2]
 1731 001c 8A18     		add	r2, r1, r2
 1732 001e 1A70     		strb	r2, [r3]
 1733              	.L113:
1279:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1280:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
1281:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1282:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1283:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 1734              		.loc 1 1283 0 discriminator 1
 1735 0020 3B1C     		mov	r3, r7
 1736 0022 0F33     		add	r3, r3, #15
 1737 0024 1B78     		ldrb	r3, [r3]
 1738 0026 0C4A     		ldr	r2, .L114
 1739 0028 101C     		mov	r0, r2
 1740 002a 191C     		mov	r1, r3
 1741 002c 0122     		mov	r2, #1
 1742 002e FFF7FEFF 		bl	CapSense_SetBitValue
1284:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1743              		.loc 1 1284 0 discriminator 1
 1744 0032 3B1C     		mov	r3, r7
 1745 0034 0F33     		add	r3, r3, #15
 1746 0036 1A78     		ldrb	r2, [r3]
 1747 0038 3B1C     		mov	r3, r7
 1748 003a 0F33     		add	r3, r3, #15
 1749 003c 0132     		add	r2, r2, #1
 1750 003e 1A70     		strb	r2, [r3]
1285:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1286:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1751              		.loc 1 1286 0 discriminator 1
 1752 0040 3A1C     		mov	r2, r7
 1753 0042 0F32     		add	r2, r2, #15
 1754 0044 3B1C     		mov	r3, r7
 1755 0046 0E33     		add	r3, r3, #14
 1756 0048 1278     		ldrb	r2, [r2]
 1757 004a 1B78     		ldrb	r3, [r3]
 1758 004c 9A42     		cmp	r2, r3
 1759 004e E7D3     		bcc	.L113
1287:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1760              		.loc 1 1287 0
 1761 0050 BD46     		mov	sp, r7
 1762 0052 04B0     		add	sp, sp, #16
 1763              		@ sp needed
 1764 0054 80BD     		pop	{r7, pc}
 1765              	.L115:
 1766 0056 C046     		.align	2
 1767              	.L114:
 1768 0058 00000000 		.word	CapSense_sensorEnableMask
 1769              		.cfi_endproc
 1770              	.LFE60:
 1771              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 1772              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 1773              		.align	2
 1774              		.global	CapSense_DisableWidget
 1775              		.code	16
 1776              		.thumb_func
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 55


 1777              		.type	CapSense_DisableWidget, %function
 1778              	CapSense_DisableWidget:
 1779              	.LFB61:
1288:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1289:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1290:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1291:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1292:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1293:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1294:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1295:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1296:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1297:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1298:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1299:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1300:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1301:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1302:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1303:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1304:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
1305:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1306:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
1307:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1308:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
1309:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1310:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1311:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1312:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
1313:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1314:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1315:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
1316:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1317:.\Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1318:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1780              		.loc 1 1318 0
 1781              		.cfi_startproc
 1782 0000 80B5     		push	{r7, lr}
 1783              		.cfi_def_cfa_offset 8
 1784              		.cfi_offset 7, -8
 1785              		.cfi_offset 14, -4
 1786 0002 84B0     		sub	sp, sp, #16
 1787              		.cfi_def_cfa_offset 24
 1788 0004 00AF     		add	r7, sp, #0
 1789              		.cfi_def_cfa_register 7
 1790 0006 7860     		str	r0, [r7, #4]
1319:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1791              		.loc 1 1319 0
 1792 0008 3B1C     		mov	r3, r7
 1793 000a 0F33     		add	r3, r3, #15
 1794 000c 0022     		mov	r2, #0
 1795 000e 1A70     		strb	r2, [r3]
1320:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1796              		.loc 1 1320 0
 1797 0010 0121     		mov	r1, #1
 1798 0012 3B1C     		mov	r3, r7
 1799 0014 0E33     		add	r3, r3, #14
 1800 0016 3A1C     		mov	r2, r7
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 56


 1801 0018 0F32     		add	r2, r2, #15
 1802 001a 1278     		ldrb	r2, [r2]
 1803 001c 8A18     		add	r2, r1, r2
 1804 001e 1A70     		strb	r2, [r3]
 1805              	.L117:
1321:.\Generated_Source\PSoC4/CapSense_CSHL.c ****    
1322:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
1323:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1324:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1326:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 1806              		.loc 1 1326 0 discriminator 1
 1807 0020 3B1C     		mov	r3, r7
 1808 0022 0F33     		add	r3, r3, #15
 1809 0024 1B78     		ldrb	r3, [r3]
 1810 0026 0C4A     		ldr	r2, .L118
 1811 0028 101C     		mov	r0, r2
 1812 002a 191C     		mov	r1, r3
 1813 002c 0022     		mov	r2, #0
 1814 002e FFF7FEFF 		bl	CapSense_SetBitValue
1327:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1815              		.loc 1 1327 0 discriminator 1
 1816 0032 3B1C     		mov	r3, r7
 1817 0034 0F33     		add	r3, r3, #15
 1818 0036 1A78     		ldrb	r2, [r3]
 1819 0038 3B1C     		mov	r3, r7
 1820 003a 0F33     		add	r3, r3, #15
 1821 003c 0132     		add	r2, r2, #1
 1822 003e 1A70     		strb	r2, [r3]
1328:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1329:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1823              		.loc 1 1329 0 discriminator 1
 1824 0040 3A1C     		mov	r2, r7
 1825 0042 0F32     		add	r2, r2, #15
 1826 0044 3B1C     		mov	r3, r7
 1827 0046 0E33     		add	r3, r3, #14
 1828 0048 1278     		ldrb	r2, [r2]
 1829 004a 1B78     		ldrb	r3, [r3]
 1830 004c 9A42     		cmp	r2, r3
 1831 004e E7D3     		bcc	.L117
1330:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1832              		.loc 1 1330 0
 1833 0050 BD46     		mov	sp, r7
 1834 0052 04B0     		add	sp, sp, #16
 1835              		@ sp needed
 1836 0054 80BD     		pop	{r7, pc}
 1837              	.L119:
 1838 0056 C046     		.align	2
 1839              	.L118:
 1840 0058 00000000 		.word	CapSense_sensorEnableMask
 1841              		.cfi_endproc
 1842              	.LFE61:
 1843              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 1844              		.section	.text.CapSense_MedianFilter,"ax",%progbits
 1845              		.align	2
 1846              		.global	CapSense_MedianFilter
 1847              		.code	16
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 57


 1848              		.thumb_func
 1849              		.type	CapSense_MedianFilter, %function
 1850              	CapSense_MedianFilter:
 1851              	.LFB62:
1331:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1332:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1333:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1335:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1336:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1337:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1338:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1339:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks 
1340:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and 
1341:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are 
1342:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1343:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1346:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1347:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1356:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1357:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1358:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_startOfSlider[] - contains the index of the first slider element
1359:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1360:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects: 
1361:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1362:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1363:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1364:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#if (CapSense_IS_DIPLEX_SLIDER)
1365:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *diplex)
1366:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#else 
1367:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1368:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
1381:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 temp = 0u;
1383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 58


1384:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1387:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
1390:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
1391:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1392:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {          
1410:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1411:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1412:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1413:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1414:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1415:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1416:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             
1419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1424:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++; 
1425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1426:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1427:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1428:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }            
1430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
1435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 59


1441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */ 
1443:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1444:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1445:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1446:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1447:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1448:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1449:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else                    
1451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
1460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1461:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1464:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }                    
1465:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)                    
1466:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];                    
1467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
1474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 } 
1479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
1481:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {                      
1482:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1483:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
1484:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1485:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
1486:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1487:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
1488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
1489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }    
1492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
1494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 60


1498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1500:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1503:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1504:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1505:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
1510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1517:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1518:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects: 
1519:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1520:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
1521:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1522:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1523:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, 
1524:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1525:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #else								
1526:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, 
1527:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)						
1528:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1529:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1531:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
1532:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1533:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1535:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1537:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		    static uint8 CapSense_centroid[3u];
1538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                
1540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)                
1541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1543:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1545:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1547:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1548:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		uint8  *startOfSlider = &CapSense_sensorSignal[offset];
1549:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		
1550:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1551:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
1552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****      
1554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 61


1555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1558:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  
1563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1566:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1567:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1568:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1569:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1570:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1571:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1572:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1577:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1580:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1585:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1586:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1587:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1588:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)                   
1589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1590:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1592:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1593:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u; 
1595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }                    
1603:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1604:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1605:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1606:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1607:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1608:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;                    
1609:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else                    
1610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 62


1612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1615:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
1616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1622:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1623:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1624:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1625:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1626:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 { 
1628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
1629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1630:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1631:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1632:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1633:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
1635:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1642:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1645:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1646:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
1647:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1648:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
1649:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1650:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
1651:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1652:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1653:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
1655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
1659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
1662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1663:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
1664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
1668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 63


1669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
1673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
1674:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1676:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] + 
1677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] + 
1678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
1679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1682:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
1686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1687:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
1692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1693:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
1695:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1697:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }    
1698:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1700:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1702:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1703:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1704:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1705:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1706:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1707:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1708:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1709:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1710:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1711:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1712:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1713:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1714:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1715:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1716:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1717:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1718:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
1722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1723:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1724:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1725:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 64


1726:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1727:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1728:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1729:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1730:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1731:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1732:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1733:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1734:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1735:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1736:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1737:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1738:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1739:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1740:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1741:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1742:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
1743:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1744:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1745:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1746:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];  
1747:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1749:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1750:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1751:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1752:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1753:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1754:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1756:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1757:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1758:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1759:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1760:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1761:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1762:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1763:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1764:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1765:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1766:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1767:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1768:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1769:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
1770:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1771:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		/* Find Maximum within centroid */      
1774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_IS_DIPLEX_SLIDER)        
1775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], diplex);
1776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
1777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1780:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
1781:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1782:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 65


1783:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
1784:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1786:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1787:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1788:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1789:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1790:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1791:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1792:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1793:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1794:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1795:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1796:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1797:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1798:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1799:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1800:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1802:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
1803:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1804:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1805:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1806:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1807:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1808:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1809:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1810:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1811:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1812:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
1813:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1814:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1815:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1816:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1817:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1818:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1819:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1820:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1821:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1822:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1823:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1824:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1825:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1826:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1827:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1828:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1829:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1830:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1831:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1832:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1833:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1834:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) 
1835:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1836:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1837:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1838:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1839:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 66


1840:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1841:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1842:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1843:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1844:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1845:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1846:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1847:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1848:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER)) 
1849:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1850:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1851:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1852:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1853:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1854:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1855:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1856:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1857:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1858:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1859:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1860:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1861:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1862:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1863:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1864:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }                                
1865:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1866:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1867:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1868:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1869:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1870:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1871:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1872:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1873:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1874:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1875:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1876:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1877:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1878:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1879:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1880:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1881:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1882:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1883:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1884:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1885:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1886:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1887:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
1888:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1889:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1890:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1891:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1892:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1893:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1894:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1895:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1896:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 67


1897:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1898:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1899:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1900:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1901:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1902:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1903:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1904:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1905:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1906:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1907:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1908:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1909:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1910:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1911:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1912:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1913:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1914:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1915:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1916:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1917:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1918:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1919:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * 
1920:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1921:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1922:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1923:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
1924:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
1925:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
1926:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1927:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1928:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1929:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1930:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1931:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1932:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1933:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1934:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1935:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1936:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1937:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1938:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1939:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1940:.\Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1941:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1942:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1943:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1944:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1945:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget]; 
1946:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1947:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1948:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1949:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1950:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1951:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1952:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1953:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 68


1954:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1955:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1956:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1957:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1958:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1959:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1960:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		/* Find Maximum within centroid */      
1961:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#if (CapSense_IS_DIPLEX_SLIDER)        
1962:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 0u);
1963:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#else
1964:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 			maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1965:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		#endif /* (CapSense_IS_DIPLEX_SLIDER) */
1966:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
1967:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
1968:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1969:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1970:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
1971:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1972:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1973:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1974:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1975:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1976:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1977:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1978:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1979:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     
1980:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1981:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1982:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1983:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1984:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1985:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1986:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1987:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1988:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
1989:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  || 
1990:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1991:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1992:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1993:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1994:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1995:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1996:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1997:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1998:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1999:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
2000:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
2001:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2002:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2003:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2004:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2005:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2006:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2007:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2008:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2009:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2010:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 69


2011:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2012:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = 
2013:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2014:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2015:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2016:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER & 
2017:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2018:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2019:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2020:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2021:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2022:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2023:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2024:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2025:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position, 
2026:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2027:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2028:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
2029:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2030:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2031:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2032:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2033:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2034:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2035:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2036:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2037:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2038:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
2039:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2040:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2041:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2042:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & 
2043:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2044:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2045:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2046:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2047:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2048:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2049:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2050:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2051:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2052:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2053:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & 
2054:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2055:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2056:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2057:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2058:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2059:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2060:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position, 
2061:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2062:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2063:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2064:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2065:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2066:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2067:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 70


2068:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2069:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2070:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2071:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2072:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2073:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2074:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found?? */
2075:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
2076:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2077:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2078:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2079:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2080:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2081:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2082:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2083:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2084:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2085:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2086:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
2087:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2088:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2089:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2090:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2091:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2092:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2093:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2094:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2095:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2096:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2097:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2098:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2099:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2100:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2101:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2102:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2103:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2104:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2105:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2106:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number. 
2107:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2108:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2109:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2110:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2111:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2112:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2113:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2114:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2115:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2116:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2117:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2118:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2119:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2120:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2121:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2122:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2123:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2124:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 71


2125:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2126:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2127:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2128:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2129:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2130:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2131:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2132:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2133:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2134:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2135:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2136:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2137:.\Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2138:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2139:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2140:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2141:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2142:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2143:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2144:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
2145:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2146:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2147:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2148:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2149:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2150:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2151:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2152:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2153:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2154:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2155:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2156:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2157:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2158:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
2159:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2160:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2161:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2162:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2163:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2164:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2165:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2166:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2167:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2168:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2169:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2170:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2171:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2172:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2173:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2174:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2175:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2176:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count, 
2177:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2178:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2179:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
2180:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2181:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 72


2182:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 
2183:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count, 
2184:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
2185:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2186:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2187:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2188:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2189:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2190:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2191:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2192:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2193:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         
2194:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2195:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2196:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2197:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2198:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2199:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2200:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2201:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2202:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2203:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2204:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2205:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
2206:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2207:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2208:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2209:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2210:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2211:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2212:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2213:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2214:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2215:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2216:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             
2217:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2218:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2219:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2220:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2221:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2222:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2223:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2224:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2225:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2226:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2227:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2228:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2229:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
2230:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2231:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2232:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2233:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2234:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2235:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2236:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2237:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
2238:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 73


2239:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2240:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2241:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2242:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
2243:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2244:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2245:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2246:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2247:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2248:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2249:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2250:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2251:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2252:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2253:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
2254:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2255:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2256:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2257:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2258:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY, 
2259:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2260:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2261:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
2262:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2263:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2264:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2265:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2266:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2267:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2268:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2269:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2270:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2271:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2272:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2273:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX, 
2274:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2275:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2276:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     
2277:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY, 
2278:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2279:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2280:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2281:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2282:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
2283:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2284:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2285:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2286:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2287:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2288:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2289:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2290:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2291:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2292:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2293:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
2294:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2295:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 74


2296:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2297:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 
2298:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
2299:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2300:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2301:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2302:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2303:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2304:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2305:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX, 
2306:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2307:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2308:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         
2309:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY, 
2310:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2311:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2312:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2313:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
2314:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2315:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2316:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2317:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2318:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2319:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2320:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2321:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2322:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2323:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2324:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2325:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2326:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2327:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2328:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2329:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2330:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2331:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2332:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2333:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2334:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2335:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2336:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2337:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2338:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2339:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2340:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2341:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2342:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2343:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2344:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2345:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2346:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2347:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2348:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2349:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2350:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function. 
2351:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
2352:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 75


2353:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2354:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2355:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2356:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2357:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2358:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2359:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2360:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2361:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2362:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2363:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2364:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2365:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2366:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2367:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2368:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2369:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2370:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1852              		.loc 1 2370 0
 1853              		.cfi_startproc
 1854 0000 80B5     		push	{r7, lr}
 1855              		.cfi_def_cfa_offset 8
 1856              		.cfi_offset 7, -8
 1857              		.cfi_offset 14, -4
 1858 0002 84B0     		sub	sp, sp, #16
 1859              		.cfi_def_cfa_offset 24
 1860 0004 00AF     		add	r7, sp, #0
 1861              		.cfi_def_cfa_register 7
 1862 0006 BB1D     		add	r3, r7, #6
 1863 0008 1880     		strh	r0, [r3]
 1864 000a 3B1D     		add	r3, r7, #4
 1865 000c 1980     		strh	r1, [r3]
 1866 000e BB1C     		add	r3, r7, #2
 1867 0010 1A80     		strh	r2, [r3]
2371:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
2372:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2373:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
 1868              		.loc 1 2373 0
 1869 0012 BA1D     		add	r2, r7, #6
 1870 0014 3B1D     		add	r3, r7, #4
 1871 0016 1288     		ldrh	r2, [r2]
 1872 0018 1B88     		ldrh	r3, [r3]
 1873 001a 9A42     		cmp	r2, r3
 1874 001c 0DD9     		bls	.L121
2374:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2375:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
 1875              		.loc 1 2375 0
 1876 001e 3B1C     		mov	r3, r7
 1877 0020 0E33     		add	r3, r3, #14
 1878 0022 3A1D     		add	r2, r7, #4
 1879 0024 1288     		ldrh	r2, [r2]
 1880 0026 1A80     		strh	r2, [r3]
2376:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
 1881              		.loc 1 2376 0
 1882 0028 3B1D     		add	r3, r7, #4
 1883 002a BA1D     		add	r2, r7, #6
 1884 002c 1288     		ldrh	r2, [r2]
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 76


 1885 002e 1A80     		strh	r2, [r3]
2377:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 1886              		.loc 1 2377 0
 1887 0030 BB1D     		add	r3, r7, #6
 1888 0032 3A1C     		mov	r2, r7
 1889 0034 0E32     		add	r2, r2, #14
 1890 0036 1288     		ldrh	r2, [r2]
 1891 0038 1A80     		strh	r2, [r3]
 1892              	.L121:
2378:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2379:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2380:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
 1893              		.loc 1 2380 0
 1894 003a 3A1D     		add	r2, r7, #4
 1895 003c BB1C     		add	r3, r7, #2
 1896 003e 1288     		ldrh	r2, [r2]
 1897 0040 1B88     		ldrh	r3, [r3]
 1898 0042 9A42     		cmp	r2, r3
 1899 0044 03D9     		bls	.L122
2381:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2382:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
 1900              		.loc 1 2382 0
 1901 0046 3B1D     		add	r3, r7, #4
 1902 0048 BA1C     		add	r2, r7, #2
 1903 004a 1288     		ldrh	r2, [r2]
 1904 004c 1A80     		strh	r2, [r3]
 1905              	.L122:
2383:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2384:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2385:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 1906              		.loc 1 2385 0
 1907 004e 3B1D     		add	r3, r7, #4
 1908 0050 BA1D     		add	r2, r7, #6
 1909 0052 1288     		ldrh	r2, [r2]
 1910 0054 1B88     		ldrh	r3, [r3]
 1911 0056 98B2     		uxth	r0, r3
 1912 0058 91B2     		uxth	r1, r2
 1913 005a 8842     		cmp	r0, r1
 1914 005c 00D2     		bcs	.L123
 1915 005e 131C     		add	r3, r2, #0
 1916              	.L123:
 1917 0060 9BB2     		uxth	r3, r3
2386:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1918              		.loc 1 2386 0
 1919 0062 181C     		mov	r0, r3
 1920 0064 BD46     		mov	sp, r7
 1921 0066 04B0     		add	sp, sp, #16
 1922              		@ sp needed
 1923 0068 80BD     		pop	{r7, pc}
 1924              		.cfi_endproc
 1925              	.LFE62:
 1926              		.size	CapSense_MedianFilter, .-CapSense_MedianFilter
 1927 006a C046     		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 1928              		.align	2
 1929              		.global	CapSense_IIR4Filter
 1930              		.code	16
 1931              		.thumb_func
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 77


 1932              		.type	CapSense_IIR4Filter, %function
 1933              	CapSense_IIR4Filter:
 1934              	.LFB63:
2387:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2388:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2389:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2390:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2391:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2392:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2393:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2394:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2395:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2396:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2397:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2398:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2399:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
2400:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2401:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2402:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2403:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2404:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2405:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2406:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2407:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2408:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2409:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2410:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2411:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2412:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2413:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2414:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2415:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2416:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2417:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2418:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2419:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2420:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2421:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2422:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2423:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2424:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2425:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
2426:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2427:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2428:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2429:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2430:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2431:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2432:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2433:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2434:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2435:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2436:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2437:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2438:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2439:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2440:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 78


2441:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2442:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2443:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2444:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2445:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2446:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2447:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2448:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2449:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2450:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2451:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2452:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2453:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2454:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2455:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2456:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2457:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2458:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2459:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2460:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2461:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2462:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2463:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2464:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2465:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2466:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2467:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2468:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2469:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2470:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2471:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2472:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2473:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2474:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2475:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2476:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2477:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2478:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2479:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2480:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2481:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2482:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2483:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2484:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2485:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2486:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2487:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2488:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2489:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2490:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1935              		.loc 1 2490 0
 1936              		.cfi_startproc
 1937 0000 80B5     		push	{r7, lr}
 1938              		.cfi_def_cfa_offset 8
 1939              		.cfi_offset 7, -8
 1940              		.cfi_offset 14, -4
 1941 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 79


 1942              		.cfi_def_cfa_offset 24
 1943 0004 00AF     		add	r7, sp, #0
 1944              		.cfi_def_cfa_register 7
 1945 0006 0A1C     		mov	r2, r1
 1946 0008 BB1D     		add	r3, r7, #6
 1947 000a 011C     		add	r1, r0, #0
 1948 000c 1980     		strh	r1, [r3]
 1949 000e 3B1D     		add	r3, r7, #4
 1950 0010 1A80     		strh	r2, [r3]
2491:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2492:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2493:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2494:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 1951              		.loc 1 2494 0
 1952 0012 BB1D     		add	r3, r7, #6
 1953 0014 1A88     		ldrh	r2, [r3]
 1954 0016 3B1D     		add	r3, r7, #4
 1955 0018 1B88     		ldrh	r3, [r3]
 1956 001a D318     		add	r3, r2, r3
 1957 001c FB60     		str	r3, [r7, #12]
2495:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 1958              		.loc 1 2495 0
 1959 001e 3B1D     		add	r3, r7, #4
 1960 0020 1B88     		ldrh	r3, [r3]
 1961 0022 5B00     		lsl	r3, r3, #1
 1962 0024 FA68     		ldr	r2, [r7, #12]
 1963 0026 D318     		add	r3, r2, r3
 1964 0028 FB60     		str	r3, [r7, #12]
2496:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
 1965              		.loc 1 2496 0
 1966 002a FB68     		ldr	r3, [r7, #12]
 1967 002c 9B08     		lsr	r3, r3, #2
 1968 002e FB60     		str	r3, [r7, #12]
2497:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2498:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 1969              		.loc 1 2498 0
 1970 0030 FB68     		ldr	r3, [r7, #12]
 1971 0032 9BB2     		uxth	r3, r3
2499:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1972              		.loc 1 2499 0
 1973 0034 181C     		mov	r0, r3
 1974 0036 BD46     		mov	sp, r7
 1975 0038 04B0     		add	sp, sp, #16
 1976              		@ sp needed
 1977 003a 80BD     		pop	{r7, pc}
 1978              		.cfi_endproc
 1979              	.LFE63:
 1980              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 1981              		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 1982              		.align	2
 1983              		.global	CapSense_GetWidgetNumber
 1984              		.code	16
 1985              		.thumb_func
 1986              		.type	CapSense_GetWidgetNumber, %function
 1987              	CapSense_GetWidgetNumber:
 1988              	.LFB64:
2500:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 80


2501:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2502:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2503:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2504:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2505:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2506:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2507:.\Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))  
2508:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2509:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
2510:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2511:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2512:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2513:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2514:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2515:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2516:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2517:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2518:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2519:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2520:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2521:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2522:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2523:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2524:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2525:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2526:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2527:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2528:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2529:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2530:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2531:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2532:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2533:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
2534:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2535:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2536:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2537:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
2538:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2539:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
2540:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2541:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2542:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2543:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
2544:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2545:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2546:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2547:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	   *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2548:.\Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2549:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2550:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2551:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2552:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2553:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2554:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2555:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2556:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2557:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 81


2558:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2559:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2560:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2561:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2562:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2563:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2564:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2565:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2566:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2567:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2568:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2569:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2570:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2571:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2572:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2573:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2574:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2575:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2576:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2577:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2578:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2579:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2580:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2581:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2582:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     
2583:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2584:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2585:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2586:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2587:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2588:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2589:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2590:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2591:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2592:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2593:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2594:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2595:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2596:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2597:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2598:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2599:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2600:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2601:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2602:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2603:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2604:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2605:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None.
2606:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2607:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2608:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2609:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2610:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2611:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2612:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2613:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2614:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 82


2615:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2616:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2617:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2618:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2619:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         
2620:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2621:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2622:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2623:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2624:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2625:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2626:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2627:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2628:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2629:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2630:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2631:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2632:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2633:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2634:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2635:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2636:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2637:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be 
2638:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2639:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
2640:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2641:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2642:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2643:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2644:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2645:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2646:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2647:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2648:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_sensorSignal[ ] - used to store a difference between the current value of 
2649:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  raw data and a previous value of the baseline.
2650:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2651:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2652:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2653:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2654:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2655:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2656:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2657:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2658:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2659:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2660:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2661:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2662:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
2663:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2664:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2665:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2666:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2667:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2668:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2669:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2670:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2671:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 83


2672:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2673:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2674:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2675:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2676:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2677:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2678:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
2679:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2680:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2681:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
2682:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2683:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2684:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2685:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2686:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2687:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2688:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2689:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2690:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2691:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
2692:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2693:.\Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2694:.\Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2695:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2696:.\Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
2697:.\Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2698:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2699:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2700:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2701:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2702:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2703:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2704:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2705:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2706:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2707:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2708:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2709:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2710:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2711:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2712:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2713:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor. 
2714:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2715:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2716:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2717:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2718:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2719:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2720:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2721:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2722:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2723:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1989              		.loc 1 2723 0
 1990              		.cfi_startproc
 1991 0000 80B5     		push	{r7, lr}
 1992              		.cfi_def_cfa_offset 8
 1993              		.cfi_offset 7, -8
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 84


 1994              		.cfi_offset 14, -4
 1995 0002 82B0     		sub	sp, sp, #8
 1996              		.cfi_def_cfa_offset 16
 1997 0004 00AF     		add	r7, sp, #0
 1998              		.cfi_def_cfa_register 7
 1999 0006 7860     		str	r0, [r7, #4]
2724:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return((uint32)CapSense_widgetNumber[sensor]);
 2000              		.loc 1 2724 0
 2001 0008 034A     		ldr	r2, .L129
 2002 000a 7B68     		ldr	r3, [r7, #4]
 2003 000c D318     		add	r3, r2, r3
 2004 000e 1B78     		ldrb	r3, [r3]
2725:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2005              		.loc 1 2725 0
 2006 0010 181C     		mov	r0, r3
 2007 0012 BD46     		mov	sp, r7
 2008 0014 02B0     		add	sp, sp, #8
 2009              		@ sp needed
 2010 0016 80BD     		pop	{r7, pc}
 2011              	.L130:
 2012              		.align	2
 2013              	.L129:
 2014 0018 00000000 		.word	CapSense_widgetNumber
 2015              		.cfi_endproc
 2016              	.LFE64:
 2017              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 2018              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 2019              		.align	2
 2020              		.global	CapSense_GetLowBaselineReset
 2021              		.code	16
 2022              		.thumb_func
 2023              		.type	CapSense_GetLowBaselineReset, %function
 2024              	CapSense_GetLowBaselineReset:
 2025              	.LFB65:
2726:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2727:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2728:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2729:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2730:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2731:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2732:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2733:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2734:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2735:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2736:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2737:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2738:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2739:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2740:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2741:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2742:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2743:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2744:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2745:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2746:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2747:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2748:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 85


2749:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2026              		.loc 1 2749 0
 2027              		.cfi_startproc
 2028 0000 80B5     		push	{r7, lr}
 2029              		.cfi_def_cfa_offset 8
 2030              		.cfi_offset 7, -8
 2031              		.cfi_offset 14, -4
 2032 0002 82B0     		sub	sp, sp, #8
 2033              		.cfi_def_cfa_offset 16
 2034 0004 00AF     		add	r7, sp, #0
 2035              		.cfi_def_cfa_register 7
 2036 0006 7860     		str	r0, [r7, #4]
2750:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_lowBaselineReset[sensor]);
 2037              		.loc 1 2750 0
 2038 0008 034A     		ldr	r2, .L133
 2039 000a 7B68     		ldr	r3, [r7, #4]
 2040 000c D318     		add	r3, r2, r3
 2041 000e 1B78     		ldrb	r3, [r3]
2751:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2042              		.loc 1 2751 0
 2043 0010 181C     		mov	r0, r3
 2044 0012 BD46     		mov	sp, r7
 2045 0014 02B0     		add	sp, sp, #8
 2046              		@ sp needed
 2047 0016 80BD     		pop	{r7, pc}
 2048              	.L134:
 2049              		.align	2
 2050              	.L133:
 2051 0018 00000000 		.word	CapSense_lowBaselineReset
 2052              		.cfi_endproc
 2053              	.LFE65:
 2054              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 2055              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 2056              		.align	2
 2057              		.global	CapSense_GetDebounce
 2058              		.code	16
 2059              		.thumb_func
 2060              		.type	CapSense_GetDebounce, %function
 2061              	CapSense_GetDebounce:
 2062              	.LFB66:
2752:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2753:.\Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2754:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2755:.\Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2756:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2757:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2758:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2759:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2760:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2761:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be 
2762:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2763:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2764:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2765:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value 
2766:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2767:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2768:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 86


2769:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * 
2770:.\Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2771:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2772:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *
2773:.\Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2774:.\Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2775:.\Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2063              		.loc 1 2775 0
 2064              		.cfi_startproc
 2065 0000 80B5     		push	{r7, lr}
 2066              		.cfi_def_cfa_offset 8
 2067              		.cfi_offset 7, -8
 2068              		.cfi_offset 14, -4
 2069 0002 82B0     		sub	sp, sp, #8
 2070              		.cfi_def_cfa_offset 16
 2071 0004 00AF     		add	r7, sp, #0
 2072              		.cfi_def_cfa_register 7
 2073 0006 7860     		str	r0, [r7, #4]
2776:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	return(CapSense_debounce[widget]);
 2074              		.loc 1 2776 0
 2075 0008 034A     		ldr	r2, .L137
 2076 000a 7B68     		ldr	r3, [r7, #4]
 2077 000c D318     		add	r3, r2, r3
 2078 000e 1B78     		ldrb	r3, [r3]
2777:.\Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2079              		.loc 1 2777 0
 2080 0010 181C     		mov	r0, r3
 2081 0012 BD46     		mov	sp, r7
 2082 0014 02B0     		add	sp, sp, #8
 2083              		@ sp needed
 2084 0016 80BD     		pop	{r7, pc}
 2085              	.L138:
 2086              		.align	2
 2087              	.L137:
 2088 0018 00000000 		.word	CapSense_debounce
 2089              		.cfi_endproc
 2090              	.LFE66:
 2091              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 2092              		.section	.text.CapSense_EnableRawDataFilters,"ax",%progbits
 2093              		.align	2
 2094              		.global	CapSense_EnableRawDataFilters
 2095              		.code	16
 2096              		.thumb_func
 2097              		.type	CapSense_EnableRawDataFilters, %function
 2098              	CapSense_EnableRawDataFilters:
 2099              	.LFB67:
2778:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2779:.\Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
2780:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
2781:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_EnableRawDataFilters
2782:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
2783:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2784:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
2785:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  Enables the rawdata filters for the sensor signals.
2786:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2787:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
2788:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 87


2789:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2790:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return:
2791:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2792:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2793:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2794:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_enableRawFilters defines if the filters are enabled or not.
2795:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2796:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2797:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2798:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2799:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
2800:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_EnableRawDataFilters(void)
2801:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 2100              		.loc 1 2801 0
 2101              		.cfi_startproc
 2102 0000 80B5     		push	{r7, lr}
 2103              		.cfi_def_cfa_offset 8
 2104              		.cfi_offset 7, -8
 2105              		.cfi_offset 14, -4
 2106 0002 00AF     		add	r7, sp, #0
 2107              		.cfi_def_cfa_register 7
2802:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
 2108              		.loc 1 2802 0
 2109 0004 024B     		ldr	r3, .L140
 2110 0006 0122     		mov	r2, #1
 2111 0008 1A70     		strb	r2, [r3]
2803:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 2112              		.loc 1 2803 0
 2113 000a BD46     		mov	sp, r7
 2114              		@ sp needed
 2115 000c 80BD     		pop	{r7, pc}
 2116              	.L141:
 2117 000e C046     		.align	2
 2118              	.L140:
 2119 0010 00000000 		.word	CapSense_enableRawFilters
 2120              		.cfi_endproc
 2121              	.LFE67:
 2122              		.size	CapSense_EnableRawDataFilters, .-CapSense_EnableRawDataFilters
 2123              		.section	.text.CapSense_DisableRawDataFilters,"ax",%progbits
 2124              		.align	2
 2125              		.global	CapSense_DisableRawDataFilters
 2126              		.code	16
 2127              		.thumb_func
 2128              		.type	CapSense_DisableRawDataFilters, %function
 2129              	CapSense_DisableRawDataFilters:
 2130              	.LFB68:
2804:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 
2805:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	/*******************************************************************************
2806:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Function Name: CapSense_DisableRawDataFilters
2807:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	********************************************************************************
2808:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2809:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Summary:
2810:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  Disables the rawdata filters for the sensor signals.
2811:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2812:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Parameters:
2813:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2814:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 88


2815:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Return:
2816:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2817:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2818:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Global Variables:
2819:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  CapSense_enableRawFilters defines if the filters are enabled or not.
2820:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*
2821:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* Side Effects:
2822:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*  None
2823:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	* 
2824:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	*******************************************************************************/
2825:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	void CapSense_DisableRawDataFilters(void)
2826:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	{
 2131              		.loc 1 2826 0
 2132              		.cfi_startproc
 2133 0000 80B5     		push	{r7, lr}
 2134              		.cfi_def_cfa_offset 8
 2135              		.cfi_offset 7, -8
 2136              		.cfi_offset 14, -4
 2137 0002 00AF     		add	r7, sp, #0
 2138              		.cfi_def_cfa_register 7
2827:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 		CapSense_enableRawFilters = CapSense_RAW_FILTERS_DISABLED;
 2139              		.loc 1 2827 0
 2140 0004 024B     		ldr	r3, .L143
 2141 0006 0022     		mov	r2, #0
 2142 0008 1A70     		strb	r2, [r3]
2828:.\Generated_Source\PSoC4/CapSense_CSHL.c **** 	}
 2143              		.loc 1 2828 0
 2144 000a BD46     		mov	sp, r7
 2145              		@ sp needed
 2146 000c 80BD     		pop	{r7, pc}
 2147              	.L144:
 2148 000e C046     		.align	2
 2149              	.L143:
 2150 0010 00000000 		.word	CapSense_enableRawFilters
 2151              		.cfi_endproc
 2152              	.LFE68:
 2153              		.size	CapSense_DisableRawDataFilters, .-CapSense_DisableRawDataFilters
 2154              		.text
 2155              	.Letext0:
 2156              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 2157              		.file 3 ".\\Generated_Source\\PSoC4\\CapSense_PVT.h"
 2158              		.section	.debug_info,"",%progbits
 2159              	.Ldebug_info0:
 2160 0000 130B0000 		.4byte	0xb13
 2161 0004 0400     		.2byte	0x4
 2162 0006 00000000 		.4byte	.Ldebug_abbrev0
 2163 000a 04       		.byte	0x4
 2164 000b 01       		.uleb128 0x1
 2165 000c 09060000 		.4byte	.LASF112
 2166 0010 01       		.byte	0x1
 2167 0011 50040000 		.4byte	.LASF113
 2168 0015 36080000 		.4byte	.LASF114
 2169 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2170 001d 00000000 		.4byte	0
 2171 0021 00000000 		.4byte	.Ldebug_line0
 2172 0025 02       		.uleb128 0x2
 2173 0026 01       		.byte	0x1
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 89


 2174 0027 06       		.byte	0x6
 2175 0028 C1010000 		.4byte	.LASF0
 2176 002c 02       		.uleb128 0x2
 2177 002d 01       		.byte	0x1
 2178 002e 08       		.byte	0x8
 2179 002f A2060000 		.4byte	.LASF1
 2180 0033 02       		.uleb128 0x2
 2181 0034 02       		.byte	0x2
 2182 0035 05       		.byte	0x5
 2183 0036 09070000 		.4byte	.LASF2
 2184 003a 02       		.uleb128 0x2
 2185 003b 02       		.byte	0x2
 2186 003c 07       		.byte	0x7
 2187 003d C4030000 		.4byte	.LASF3
 2188 0041 02       		.uleb128 0x2
 2189 0042 04       		.byte	0x4
 2190 0043 05       		.byte	0x5
 2191 0044 2D020000 		.4byte	.LASF4
 2192 0048 02       		.uleb128 0x2
 2193 0049 04       		.byte	0x4
 2194 004a 07       		.byte	0x7
 2195 004b 50030000 		.4byte	.LASF5
 2196 004f 02       		.uleb128 0x2
 2197 0050 08       		.byte	0x8
 2198 0051 05       		.byte	0x5
 2199 0052 B3010000 		.4byte	.LASF6
 2200 0056 02       		.uleb128 0x2
 2201 0057 08       		.byte	0x8
 2202 0058 07       		.byte	0x7
 2203 0059 27010000 		.4byte	.LASF7
 2204 005d 03       		.uleb128 0x3
 2205 005e 04       		.byte	0x4
 2206 005f 05       		.byte	0x5
 2207 0060 696E7400 		.ascii	"int\000"
 2208 0064 02       		.uleb128 0x2
 2209 0065 04       		.byte	0x4
 2210 0066 07       		.byte	0x7
 2211 0067 43030000 		.4byte	.LASF8
 2212 006b 04       		.uleb128 0x4
 2213 006c 56020000 		.4byte	.LASF9
 2214 0070 02       		.byte	0x2
 2215 0071 A1       		.byte	0xa1
 2216 0072 2C000000 		.4byte	0x2c
 2217 0076 04       		.uleb128 0x4
 2218 0077 00000000 		.4byte	.LASF10
 2219 007b 02       		.byte	0x2
 2220 007c A2       		.byte	0xa2
 2221 007d 3A000000 		.4byte	0x3a
 2222 0081 04       		.uleb128 0x4
 2223 0082 B2020000 		.4byte	.LASF11
 2224 0086 02       		.byte	0x2
 2225 0087 A3       		.byte	0xa3
 2226 0088 48000000 		.4byte	0x48
 2227 008c 02       		.uleb128 0x2
 2228 008d 04       		.byte	0x4
 2229 008e 04       		.byte	0x4
 2230 008f E6050000 		.4byte	.LASF12
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 90


 2231 0093 02       		.uleb128 0x2
 2232 0094 08       		.byte	0x8
 2233 0095 04       		.byte	0x4
 2234 0096 95020000 		.4byte	.LASF13
 2235 009a 02       		.uleb128 0x2
 2236 009b 01       		.byte	0x1
 2237 009c 08       		.byte	0x8
 2238 009d A7070000 		.4byte	.LASF14
 2239 00a1 02       		.uleb128 0x2
 2240 00a2 04       		.byte	0x4
 2241 00a3 07       		.byte	0x7
 2242 00a4 B3040000 		.4byte	.LASF15
 2243 00a8 05       		.uleb128 0x5
 2244 00a9 38       		.byte	0x38
 2245 00aa 03       		.byte	0x3
 2246 00ab 2F       		.byte	0x2f
 2247 00ac 59010000 		.4byte	0x159
 2248 00b0 06       		.uleb128 0x6
 2249 00b1 51050000 		.4byte	.LASF16
 2250 00b5 03       		.byte	0x3
 2251 00b6 31       		.byte	0x31
 2252 00b7 59010000 		.4byte	0x159
 2253 00bb 00       		.byte	0
 2254 00bc 06       		.uleb128 0x6
 2255 00bd 60050000 		.4byte	.LASF17
 2256 00c1 03       		.byte	0x3
 2257 00c2 32       		.byte	0x32
 2258 00c3 59010000 		.4byte	0x159
 2259 00c7 04       		.byte	0x4
 2260 00c8 06       		.uleb128 0x6
 2261 00c9 D7030000 		.4byte	.LASF18
 2262 00cd 03       		.byte	0x3
 2263 00ce 33       		.byte	0x33
 2264 00cf 59010000 		.4byte	0x159
 2265 00d3 08       		.byte	0x8
 2266 00d4 06       		.uleb128 0x6
 2267 00d5 43040000 		.4byte	.LASF19
 2268 00d9 03       		.byte	0x3
 2269 00da 34       		.byte	0x34
 2270 00db 59010000 		.4byte	0x159
 2271 00df 0C       		.byte	0xc
 2272 00e0 06       		.uleb128 0x6
 2273 00e1 1A070000 		.4byte	.LASF20
 2274 00e5 03       		.byte	0x3
 2275 00e6 35       		.byte	0x35
 2276 00e7 59010000 		.4byte	0x159
 2277 00eb 10       		.byte	0x10
 2278 00ec 06       		.uleb128 0x6
 2279 00ed FD010000 		.4byte	.LASF21
 2280 00f1 03       		.byte	0x3
 2281 00f2 36       		.byte	0x36
 2282 00f3 5F010000 		.4byte	0x15f
 2283 00f7 14       		.byte	0x14
 2284 00f8 06       		.uleb128 0x6
 2285 00f9 7D030000 		.4byte	.LASF22
 2286 00fd 03       		.byte	0x3
 2287 00fe 37       		.byte	0x37
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 91


 2288 00ff 6A010000 		.4byte	0x16a
 2289 0103 18       		.byte	0x18
 2290 0104 06       		.uleb128 0x6
 2291 0105 2F090000 		.4byte	.LASF23
 2292 0109 03       		.byte	0x3
 2293 010a 38       		.byte	0x38
 2294 010b 5F010000 		.4byte	0x15f
 2295 010f 1C       		.byte	0x1c
 2296 0110 06       		.uleb128 0x6
 2297 0111 ED010000 		.4byte	.LASF24
 2298 0115 03       		.byte	0x3
 2299 0116 39       		.byte	0x39
 2300 0117 5F010000 		.4byte	0x15f
 2301 011b 20       		.byte	0x20
 2302 011c 06       		.uleb128 0x6
 2303 011d CB000000 		.4byte	.LASF25
 2304 0121 03       		.byte	0x3
 2305 0122 3A       		.byte	0x3a
 2306 0123 7F010000 		.4byte	0x17f
 2307 0127 24       		.byte	0x24
 2308 0128 06       		.uleb128 0x6
 2309 0129 19080000 		.4byte	.LASF26
 2310 012d 03       		.byte	0x3
 2311 012e 3B       		.byte	0x3b
 2312 012f 90010000 		.4byte	0x190
 2313 0133 28       		.byte	0x28
 2314 0134 06       		.uleb128 0x6
 2315 0135 D0060000 		.4byte	.LASF27
 2316 0139 03       		.byte	0x3
 2317 013a 3C       		.byte	0x3c
 2318 013b 7F010000 		.4byte	0x17f
 2319 013f 2C       		.byte	0x2c
 2320 0140 06       		.uleb128 0x6
 2321 0141 8C030000 		.4byte	.LASF28
 2322 0145 03       		.byte	0x3
 2323 0146 3D       		.byte	0x3d
 2324 0147 AA010000 		.4byte	0x1aa
 2325 014b 30       		.byte	0x30
 2326 014c 06       		.uleb128 0x6
 2327 014d BC080000 		.4byte	.LASF29
 2328 0151 03       		.byte	0x3
 2329 0152 3E       		.byte	0x3e
 2330 0153 C5010000 		.4byte	0x1c5
 2331 0157 34       		.byte	0x34
 2332 0158 00       		.byte	0
 2333 0159 07       		.uleb128 0x7
 2334 015a 04       		.byte	0x4
 2335 015b 6B000000 		.4byte	0x6b
 2336 015f 07       		.uleb128 0x7
 2337 0160 04       		.byte	0x4
 2338 0161 65010000 		.4byte	0x165
 2339 0165 08       		.uleb128 0x8
 2340 0166 6B000000 		.4byte	0x6b
 2341 016a 07       		.uleb128 0x7
 2342 016b 04       		.byte	0x4
 2343 016c 81000000 		.4byte	0x81
 2344 0170 09       		.uleb128 0x9
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 92


 2345 0171 76000000 		.4byte	0x76
 2346 0175 7F010000 		.4byte	0x17f
 2347 0179 0A       		.uleb128 0xa
 2348 017a 81000000 		.4byte	0x81
 2349 017e 00       		.byte	0
 2350 017f 07       		.uleb128 0x7
 2351 0180 04       		.byte	0x4
 2352 0181 70010000 		.4byte	0x170
 2353 0185 0B       		.uleb128 0xb
 2354 0186 90010000 		.4byte	0x190
 2355 018a 0A       		.uleb128 0xa
 2356 018b 81000000 		.4byte	0x81
 2357 018f 00       		.byte	0
 2358 0190 07       		.uleb128 0x7
 2359 0191 04       		.byte	0x4
 2360 0192 85010000 		.4byte	0x185
 2361 0196 09       		.uleb128 0x9
 2362 0197 81000000 		.4byte	0x81
 2363 019b AA010000 		.4byte	0x1aa
 2364 019f 0A       		.uleb128 0xa
 2365 01a0 5F010000 		.4byte	0x15f
 2366 01a4 0A       		.uleb128 0xa
 2367 01a5 81000000 		.4byte	0x81
 2368 01a9 00       		.byte	0
 2369 01aa 07       		.uleb128 0x7
 2370 01ab 04       		.byte	0x4
 2371 01ac 96010000 		.4byte	0x196
 2372 01b0 0B       		.uleb128 0xb
 2373 01b1 C5010000 		.4byte	0x1c5
 2374 01b5 0A       		.uleb128 0xa
 2375 01b6 59010000 		.4byte	0x159
 2376 01ba 0A       		.uleb128 0xa
 2377 01bb 81000000 		.4byte	0x81
 2378 01bf 0A       		.uleb128 0xa
 2379 01c0 81000000 		.4byte	0x81
 2380 01c4 00       		.byte	0
 2381 01c5 07       		.uleb128 0x7
 2382 01c6 04       		.byte	0x4
 2383 01c7 B0010000 		.4byte	0x1b0
 2384 01cb 04       		.uleb128 0x4
 2385 01cc D5000000 		.4byte	.LASF30
 2386 01d0 03       		.byte	0x3
 2387 01d1 3F       		.byte	0x3f
 2388 01d2 A8000000 		.4byte	0xa8
 2389 01d6 05       		.uleb128 0x5
 2390 01d7 0C       		.byte	0xc
 2391 01d8 03       		.byte	0x3
 2392 01d9 41       		.byte	0x41
 2393 01da 27020000 		.4byte	0x227
 2394 01de 06       		.uleb128 0x6
 2395 01df 9B030000 		.4byte	.LASF31
 2396 01e3 03       		.byte	0x3
 2397 01e4 43       		.byte	0x43
 2398 01e5 6B000000 		.4byte	0x6b
 2399 01e9 00       		.byte	0
 2400 01ea 06       		.uleb128 0x6
 2401 01eb 44090000 		.4byte	.LASF32
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 93


 2402 01ef 03       		.byte	0x3
 2403 01f0 44       		.byte	0x44
 2404 01f1 6B000000 		.4byte	0x6b
 2405 01f5 01       		.byte	0x1
 2406 01f6 06       		.uleb128 0x6
 2407 01f7 05030000 		.4byte	.LASF33
 2408 01fb 03       		.byte	0x3
 2409 01fc 45       		.byte	0x45
 2410 01fd 6B000000 		.4byte	0x6b
 2411 0201 02       		.byte	0x2
 2412 0202 06       		.uleb128 0x6
 2413 0203 F5020000 		.4byte	.LASF34
 2414 0207 03       		.byte	0x3
 2415 0208 46       		.byte	0x46
 2416 0209 76000000 		.4byte	0x76
 2417 020d 04       		.byte	0x4
 2418 020e 06       		.uleb128 0x6
 2419 020f A5040000 		.4byte	.LASF35
 2420 0213 03       		.byte	0x3
 2421 0214 47       		.byte	0x47
 2422 0215 76000000 		.4byte	0x76
 2423 0219 06       		.byte	0x6
 2424 021a 06       		.uleb128 0x6
 2425 021b 93040000 		.4byte	.LASF36
 2426 021f 03       		.byte	0x3
 2427 0220 48       		.byte	0x48
 2428 0221 27020000 		.4byte	0x227
 2429 0225 08       		.byte	0x8
 2430 0226 00       		.byte	0
 2431 0227 07       		.uleb128 0x7
 2432 0228 04       		.byte	0x4
 2433 0229 2D020000 		.4byte	0x22d
 2434 022d 08       		.uleb128 0x8
 2435 022e CB010000 		.4byte	0x1cb
 2436 0232 04       		.uleb128 0x4
 2437 0233 B8050000 		.4byte	.LASF37
 2438 0237 03       		.byte	0x3
 2439 0238 49       		.byte	0x49
 2440 0239 D6010000 		.4byte	0x1d6
 2441 023d 0C       		.uleb128 0xc
 2442 023e 34070000 		.4byte	.LASF38
 2443 0242 01       		.byte	0x1
 2444 0243 88       		.byte	0x88
 2445 0244 00000000 		.4byte	.LFB35
 2446 0248 84000000 		.4byte	.LFE35-.LFB35
 2447 024c 01       		.uleb128 0x1
 2448 024d 9C       		.byte	0x9c
 2449 024e 6F020000 		.4byte	0x26f
 2450 0252 0D       		.uleb128 0xd
 2451 0253 E6030000 		.4byte	.LASF40
 2452 0257 01       		.byte	0x1
 2453 0258 88       		.byte	0x88
 2454 0259 81000000 		.4byte	0x81
 2455 025d 02       		.uleb128 0x2
 2456 025e 91       		.byte	0x91
 2457 025f 6C       		.sleb128 -20
 2458 0260 0E       		.uleb128 0xe
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 94


 2459 0261 13070000 		.4byte	.LASF42
 2460 0265 01       		.byte	0x1
 2461 0266 8C       		.byte	0x8c
 2462 0267 6B000000 		.4byte	0x6b
 2463 026b 02       		.uleb128 0x2
 2464 026c 91       		.byte	0x91
 2465 026d 77       		.sleb128 -9
 2466 026e 00       		.byte	0
 2467 026f 0F       		.uleb128 0xf
 2468 0270 F5040000 		.4byte	.LASF39
 2469 0274 01       		.byte	0x1
 2470 0275 D4       		.byte	0xd4
 2471 0276 00000000 		.4byte	.LFB36
 2472 027a 2A000000 		.4byte	.LFE36-.LFB36
 2473 027e 01       		.uleb128 0x1
 2474 027f 9C       		.byte	0x9c
 2475 0280 93020000 		.4byte	0x293
 2476 0284 0D       		.uleb128 0xd
 2477 0285 E6030000 		.4byte	.LASF40
 2478 0289 01       		.byte	0x1
 2479 028a D4       		.byte	0xd4
 2480 028b 81000000 		.4byte	0x81
 2481 028f 02       		.uleb128 0x2
 2482 0290 91       		.byte	0x91
 2483 0291 74       		.sleb128 -12
 2484 0292 00       		.byte	0
 2485 0293 0F       		.uleb128 0xf
 2486 0294 B0060000 		.4byte	.LASF41
 2487 0298 01       		.byte	0x1
 2488 0299 F9       		.byte	0xf9
 2489 029a 00000000 		.4byte	.LFB37
 2490 029e 26000000 		.4byte	.LFE37-.LFB37
 2491 02a2 01       		.uleb128 0x1
 2492 02a3 9C       		.byte	0x9c
 2493 02a4 B5020000 		.4byte	0x2b5
 2494 02a8 10       		.uleb128 0x10
 2495 02a9 6900     		.ascii	"i\000"
 2496 02ab 01       		.byte	0x1
 2497 02ac FB       		.byte	0xfb
 2498 02ad 81000000 		.4byte	0x81
 2499 02b1 02       		.uleb128 0x2
 2500 02b2 91       		.byte	0x91
 2501 02b3 74       		.sleb128 -12
 2502 02b4 00       		.byte	0
 2503 02b5 11       		.uleb128 0x11
 2504 02b6 6F010000 		.4byte	.LASF43
 2505 02ba 01       		.byte	0x1
 2506 02bb 1C01     		.2byte	0x11c
 2507 02bd 00000000 		.4byte	.LFB38
 2508 02c1 50000000 		.4byte	.LFE38-.LFB38
 2509 02c5 01       		.uleb128 0x1
 2510 02c6 9C       		.byte	0x9c
 2511 02c7 E8020000 		.4byte	0x2e8
 2512 02cb 12       		.uleb128 0x12
 2513 02cc 6900     		.ascii	"i\000"
 2514 02ce 01       		.byte	0x1
 2515 02cf 1E01     		.2byte	0x11e
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 95


 2516 02d1 81000000 		.4byte	0x81
 2517 02d5 02       		.uleb128 0x2
 2518 02d6 91       		.byte	0x91
 2519 02d7 74       		.sleb128 -12
 2520 02d8 13       		.uleb128 0x13
 2521 02d9 24070000 		.4byte	.LASF44
 2522 02dd 01       		.byte	0x1
 2523 02de 1F01     		.2byte	0x11f
 2524 02e0 81000000 		.4byte	0x81
 2525 02e4 02       		.uleb128 0x2
 2526 02e5 91       		.byte	0x91
 2527 02e6 70       		.sleb128 -16
 2528 02e7 00       		.byte	0
 2529 02e8 11       		.uleb128 0x11
 2530 02e9 D2040000 		.4byte	.LASF45
 2531 02ed 01       		.byte	0x1
 2532 02ee 5D01     		.2byte	0x15d
 2533 02f0 00000000 		.4byte	.LFB39
 2534 02f4 28020000 		.4byte	.LFE39-.LFB39
 2535 02f8 01       		.uleb128 0x1
 2536 02f9 9C       		.byte	0x9c
 2537 02fa 68030000 		.4byte	0x368
 2538 02fe 14       		.uleb128 0x14
 2539 02ff E6030000 		.4byte	.LASF40
 2540 0303 01       		.byte	0x1
 2541 0304 5D01     		.2byte	0x15d
 2542 0306 81000000 		.4byte	0x81
 2543 030a 02       		.uleb128 0x2
 2544 030b 91       		.byte	0x91
 2545 030c 5C       		.sleb128 -36
 2546 030d 13       		.uleb128 0x13
 2547 030e 3E040000 		.4byte	.LASF46
 2548 0312 01       		.byte	0x1
 2549 0313 5F01     		.2byte	0x15f
 2550 0315 81000000 		.4byte	0x81
 2551 0319 02       		.uleb128 0x2
 2552 031a 91       		.byte	0x91
 2553 031b 60       		.sleb128 -32
 2554 031c 13       		.uleb128 0x13
 2555 031d 24080000 		.4byte	.LASF47
 2556 0321 01       		.byte	0x1
 2557 0322 6001     		.2byte	0x160
 2558 0324 81000000 		.4byte	0x81
 2559 0328 02       		.uleb128 0x2
 2560 0329 91       		.byte	0x91
 2561 032a 6C       		.sleb128 -20
 2562 032b 13       		.uleb128 0x13
 2563 032c 3C090000 		.4byte	.LASF48
 2564 0330 01       		.byte	0x1
 2565 0331 6101     		.2byte	0x161
 2566 0333 76000000 		.4byte	0x76
 2567 0337 02       		.uleb128 0x2
 2568 0338 91       		.byte	0x91
 2569 0339 6A       		.sleb128 -22
 2570 033a 13       		.uleb128 0x13
 2571 033b 07000000 		.4byte	.LASF49
 2572 033f 01       		.byte	0x1
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 96


 2573 0340 6201     		.2byte	0x162
 2574 0342 76000000 		.4byte	0x76
 2575 0346 02       		.uleb128 0x2
 2576 0347 91       		.byte	0x91
 2577 0348 68       		.sleb128 -24
 2578 0349 13       		.uleb128 0x13
 2579 034a 13070000 		.4byte	.LASF42
 2580 034e 01       		.byte	0x1
 2581 034f 6301     		.2byte	0x163
 2582 0351 6B000000 		.4byte	0x6b
 2583 0355 02       		.uleb128 0x2
 2584 0356 91       		.byte	0x91
 2585 0357 67       		.sleb128 -25
 2586 0358 13       		.uleb128 0x13
 2587 0359 FA060000 		.4byte	.LASF50
 2588 035d 01       		.byte	0x1
 2589 035e 6401     		.2byte	0x164
 2590 0360 6B000000 		.4byte	0x6b
 2591 0364 02       		.uleb128 0x2
 2592 0365 91       		.byte	0x91
 2593 0366 66       		.sleb128 -26
 2594 0367 00       		.byte	0
 2595 0368 11       		.uleb128 0x11
 2596 0369 20040000 		.4byte	.LASF51
 2597 036d 01       		.byte	0x1
 2598 036e 1C02     		.2byte	0x21c
 2599 0370 00000000 		.4byte	.LFB40
 2600 0374 1E000000 		.4byte	.LFE40-.LFB40
 2601 0378 01       		.uleb128 0x1
 2602 0379 9C       		.byte	0x9c
 2603 037a 8E030000 		.4byte	0x38e
 2604 037e 14       		.uleb128 0x14
 2605 037f E6030000 		.4byte	.LASF40
 2606 0383 01       		.byte	0x1
 2607 0384 1C02     		.2byte	0x21c
 2608 0386 81000000 		.4byte	0x81
 2609 038a 02       		.uleb128 0x2
 2610 038b 91       		.byte	0x91
 2611 038c 74       		.sleb128 -12
 2612 038d 00       		.byte	0
 2613 038e 11       		.uleb128 0x11
 2614 038f 93010000 		.4byte	.LASF52
 2615 0393 01       		.byte	0x1
 2616 0394 5202     		.2byte	0x252
 2617 0396 00000000 		.4byte	.LFB41
 2618 039a 40000000 		.4byte	.LFE41-.LFB41
 2619 039e 01       		.uleb128 0x1
 2620 039f 9C       		.byte	0x9c
 2621 03a0 C1030000 		.4byte	0x3c1
 2622 03a4 12       		.uleb128 0x12
 2623 03a5 6900     		.ascii	"i\000"
 2624 03a7 01       		.byte	0x1
 2625 03a8 5402     		.2byte	0x254
 2626 03aa 81000000 		.4byte	0x81
 2627 03ae 02       		.uleb128 0x2
 2628 03af 91       		.byte	0x91
 2629 03b0 74       		.sleb128 -12
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 97


 2630 03b1 13       		.uleb128 0x13
 2631 03b2 24070000 		.4byte	.LASF44
 2632 03b6 01       		.byte	0x1
 2633 03b7 5502     		.2byte	0x255
 2634 03b9 81000000 		.4byte	0x81
 2635 03bd 02       		.uleb128 0x2
 2636 03be 91       		.byte	0x91
 2637 03bf 70       		.sleb128 -16
 2638 03c0 00       		.byte	0
 2639 03c1 11       		.uleb128 0x11
 2640 03c2 AD000000 		.4byte	.LASF53
 2641 03c6 01       		.byte	0x1
 2642 03c7 7F02     		.2byte	0x27f
 2643 03c9 00000000 		.4byte	.LFB42
 2644 03cd 58000000 		.4byte	.LFE42-.LFB42
 2645 03d1 01       		.uleb128 0x1
 2646 03d2 9C       		.byte	0x9c
 2647 03d3 30040000 		.4byte	0x430
 2648 03d7 14       		.uleb128 0x14
 2649 03d8 13070000 		.4byte	.LASF42
 2650 03dc 01       		.byte	0x1
 2651 03dd 7F02     		.2byte	0x27f
 2652 03df 81000000 		.4byte	0x81
 2653 03e3 02       		.uleb128 0x2
 2654 03e4 91       		.byte	0x91
 2655 03e5 5C       		.sleb128 -36
 2656 03e6 13       		.uleb128 0x13
 2657 03e7 46070000 		.4byte	.LASF54
 2658 03eb 01       		.byte	0x1
 2659 03ec 8102     		.2byte	0x281
 2660 03ee 81000000 		.4byte	0x81
 2661 03f2 02       		.uleb128 0x2
 2662 03f3 91       		.byte	0x91
 2663 03f4 70       		.sleb128 -16
 2664 03f5 13       		.uleb128 0x13
 2665 03f6 E3070000 		.4byte	.LASF55
 2666 03fa 01       		.byte	0x1
 2667 03fb 8202     		.2byte	0x282
 2668 03fd 81000000 		.4byte	0x81
 2669 0401 02       		.uleb128 0x2
 2670 0402 91       		.byte	0x91
 2671 0403 6C       		.sleb128 -20
 2672 0404 13       		.uleb128 0x13
 2673 0405 38030000 		.4byte	.LASF56
 2674 0409 01       		.byte	0x1
 2675 040a 8302     		.2byte	0x283
 2676 040c 81000000 		.4byte	0x81
 2677 0410 02       		.uleb128 0x2
 2678 0411 91       		.byte	0x91
 2679 0412 68       		.sleb128 -24
 2680 0413 12       		.uleb128 0x12
 2681 0414 6900     		.ascii	"i\000"
 2682 0416 01       		.byte	0x1
 2683 0417 8402     		.2byte	0x284
 2684 0419 81000000 		.4byte	0x81
 2685 041d 02       		.uleb128 0x2
 2686 041e 91       		.byte	0x91
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 98


 2687 041f 74       		.sleb128 -12
 2688 0420 13       		.uleb128 0x13
 2689 0421 24070000 		.4byte	.LASF44
 2690 0425 01       		.byte	0x1
 2691 0426 8502     		.2byte	0x285
 2692 0428 81000000 		.4byte	0x81
 2693 042c 02       		.uleb128 0x2
 2694 042d 91       		.byte	0x91
 2695 042e 64       		.sleb128 -28
 2696 042f 00       		.byte	0
 2697 0430 15       		.uleb128 0x15
 2698 0431 0E020000 		.4byte	.LASF59
 2699 0435 01       		.byte	0x1
 2700 0436 B002     		.2byte	0x2b0
 2701 0438 76000000 		.4byte	0x76
 2702 043c 00000000 		.4byte	.LFB43
 2703 0440 1C000000 		.4byte	.LFE43-.LFB43
 2704 0444 01       		.uleb128 0x1
 2705 0445 9C       		.byte	0x9c
 2706 0446 5A040000 		.4byte	0x45a
 2707 044a 14       		.uleb128 0x14
 2708 044b E6030000 		.4byte	.LASF40
 2709 044f 01       		.byte	0x1
 2710 0450 B002     		.2byte	0x2b0
 2711 0452 81000000 		.4byte	0x81
 2712 0456 02       		.uleb128 0x2
 2713 0457 91       		.byte	0x91
 2714 0458 74       		.sleb128 -12
 2715 0459 00       		.byte	0
 2716 045a 16       		.uleb128 0x16
 2717 045b E1060000 		.4byte	.LASF57
 2718 045f 01       		.byte	0x1
 2719 0460 CB02     		.2byte	0x2cb
 2720 0462 00000000 		.4byte	.LFB44
 2721 0466 24000000 		.4byte	.LFE44-.LFB44
 2722 046a 01       		.uleb128 0x1
 2723 046b 9C       		.byte	0x9c
 2724 046c 8F040000 		.4byte	0x48f
 2725 0470 14       		.uleb128 0x14
 2726 0471 E6030000 		.4byte	.LASF40
 2727 0475 01       		.byte	0x1
 2728 0476 CB02     		.2byte	0x2cb
 2729 0478 81000000 		.4byte	0x81
 2730 047c 02       		.uleb128 0x2
 2731 047d 91       		.byte	0x91
 2732 047e 74       		.sleb128 -12
 2733 047f 14       		.uleb128 0x14
 2734 0480 BF030000 		.4byte	.LASF58
 2735 0484 01       		.byte	0x1
 2736 0485 CB02     		.2byte	0x2cb
 2737 0487 76000000 		.4byte	0x76
 2738 048b 02       		.uleb128 0x2
 2739 048c 91       		.byte	0x91
 2740 048d 72       		.sleb128 -14
 2741 048e 00       		.byte	0
 2742 048f 15       		.uleb128 0x15
 2743 0490 79040000 		.4byte	.LASF60
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 99


 2744 0494 01       		.byte	0x1
 2745 0495 E602     		.2byte	0x2e6
 2746 0497 6B000000 		.4byte	0x6b
 2747 049b 00000000 		.4byte	.LFB45
 2748 049f 1C000000 		.4byte	.LFE45-.LFB45
 2749 04a3 01       		.uleb128 0x1
 2750 04a4 9C       		.byte	0x9c
 2751 04a5 B9040000 		.4byte	0x4b9
 2752 04a9 14       		.uleb128 0x14
 2753 04aa E6030000 		.4byte	.LASF40
 2754 04ae 01       		.byte	0x1
 2755 04af E602     		.2byte	0x2e6
 2756 04b1 81000000 		.4byte	0x81
 2757 04b5 02       		.uleb128 0x2
 2758 04b6 91       		.byte	0x91
 2759 04b7 74       		.sleb128 -12
 2760 04b8 00       		.byte	0
 2761 04b9 16       		.uleb128 0x16
 2762 04ba A2080000 		.4byte	.LASF61
 2763 04be 01       		.byte	0x1
 2764 04bf 0103     		.2byte	0x301
 2765 04c1 00000000 		.4byte	.LFB46
 2766 04c5 24000000 		.4byte	.LFE46-.LFB46
 2767 04c9 01       		.uleb128 0x1
 2768 04ca 9C       		.byte	0x9c
 2769 04cb EE040000 		.4byte	0x4ee
 2770 04cf 14       		.uleb128 0x14
 2771 04d0 E6030000 		.4byte	.LASF40
 2772 04d4 01       		.byte	0x1
 2773 04d5 0103     		.2byte	0x301
 2774 04d7 81000000 		.4byte	0x81
 2775 04db 02       		.uleb128 0x2
 2776 04dc 91       		.byte	0x91
 2777 04dd 74       		.sleb128 -12
 2778 04de 14       		.uleb128 0x14
 2779 04df 15030000 		.4byte	.LASF62
 2780 04e3 01       		.byte	0x1
 2781 04e4 0103     		.2byte	0x301
 2782 04e6 6B000000 		.4byte	0x6b
 2783 04ea 02       		.uleb128 0x2
 2784 04eb 91       		.byte	0x91
 2785 04ec 73       		.sleb128 -13
 2786 04ed 00       		.byte	0
 2787 04ee 15       		.uleb128 0x15
 2788 04ef FD070000 		.4byte	.LASF63
 2789 04f3 01       		.byte	0x1
 2790 04f4 1C03     		.2byte	0x31c
 2791 04f6 6B000000 		.4byte	0x6b
 2792 04fa 00000000 		.4byte	.LFB47
 2793 04fe 1C000000 		.4byte	.LFE47-.LFB47
 2794 0502 01       		.uleb128 0x1
 2795 0503 9C       		.byte	0x9c
 2796 0504 18050000 		.4byte	0x518
 2797 0508 14       		.uleb128 0x14
 2798 0509 13070000 		.4byte	.LASF42
 2799 050d 01       		.byte	0x1
 2800 050e 1C03     		.2byte	0x31c
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 100


 2801 0510 81000000 		.4byte	0x81
 2802 0514 02       		.uleb128 0x2
 2803 0515 91       		.byte	0x91
 2804 0516 74       		.sleb128 -12
 2805 0517 00       		.byte	0
 2806 0518 15       		.uleb128 0x15
 2807 0519 54010000 		.4byte	.LASF64
 2808 051d 01       		.byte	0x1
 2809 051e 3703     		.2byte	0x337
 2810 0520 6B000000 		.4byte	0x6b
 2811 0524 00000000 		.4byte	.LFB48
 2812 0528 1C000000 		.4byte	.LFE48-.LFB48
 2813 052c 01       		.uleb128 0x1
 2814 052d 9C       		.byte	0x9c
 2815 052e 42050000 		.4byte	0x542
 2816 0532 14       		.uleb128 0x14
 2817 0533 13070000 		.4byte	.LASF42
 2818 0537 01       		.byte	0x1
 2819 0538 3703     		.2byte	0x337
 2820 053a 81000000 		.4byte	0x81
 2821 053e 02       		.uleb128 0x2
 2822 053f 91       		.byte	0x91
 2823 0540 74       		.sleb128 -12
 2824 0541 00       		.byte	0
 2825 0542 15       		.uleb128 0x15
 2826 0543 C6070000 		.4byte	.LASF65
 2827 0547 01       		.byte	0x1
 2828 0548 5303     		.2byte	0x353
 2829 054a 6B000000 		.4byte	0x6b
 2830 054e 00000000 		.4byte	.LFB49
 2831 0552 1C000000 		.4byte	.LFE49-.LFB49
 2832 0556 01       		.uleb128 0x1
 2833 0557 9C       		.byte	0x9c
 2834 0558 6C050000 		.4byte	0x56c
 2835 055c 14       		.uleb128 0x14
 2836 055d 13070000 		.4byte	.LASF42
 2837 0561 01       		.byte	0x1
 2838 0562 5303     		.2byte	0x353
 2839 0564 81000000 		.4byte	0x81
 2840 0568 02       		.uleb128 0x2
 2841 0569 91       		.byte	0x91
 2842 056a 74       		.sleb128 -12
 2843 056b 00       		.byte	0
 2844 056c 15       		.uleb128 0x15
 2845 056d 57000000 		.4byte	.LASF66
 2846 0571 01       		.byte	0x1
 2847 0572 6F03     		.2byte	0x36f
 2848 0574 6B000000 		.4byte	0x6b
 2849 0578 00000000 		.4byte	.LFB50
 2850 057c 1C000000 		.4byte	.LFE50-.LFB50
 2851 0580 01       		.uleb128 0x1
 2852 0581 9C       		.byte	0x9c
 2853 0582 96050000 		.4byte	0x596
 2854 0586 14       		.uleb128 0x14
 2855 0587 13070000 		.4byte	.LASF42
 2856 058b 01       		.byte	0x1
 2857 058c 6F03     		.2byte	0x36f
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 101


 2858 058e 81000000 		.4byte	0x81
 2859 0592 02       		.uleb128 0x2
 2860 0593 91       		.byte	0x91
 2861 0594 74       		.sleb128 -12
 2862 0595 00       		.byte	0
 2863 0596 16       		.uleb128 0x16
 2864 0597 C4020000 		.4byte	.LASF67
 2865 059b 01       		.byte	0x1
 2866 059c 9003     		.2byte	0x390
 2867 059e 00000000 		.4byte	.LFB51
 2868 05a2 24000000 		.4byte	.LFE51-.LFB51
 2869 05a6 01       		.uleb128 0x1
 2870 05a7 9C       		.byte	0x9c
 2871 05a8 CB050000 		.4byte	0x5cb
 2872 05ac 14       		.uleb128 0x14
 2873 05ad 13070000 		.4byte	.LASF42
 2874 05b1 01       		.byte	0x1
 2875 05b2 9003     		.2byte	0x390
 2876 05b4 81000000 		.4byte	0x81
 2877 05b8 02       		.uleb128 0x2
 2878 05b9 91       		.byte	0x91
 2879 05ba 74       		.sleb128 -12
 2880 05bb 14       		.uleb128 0x14
 2881 05bc 15030000 		.4byte	.LASF62
 2882 05c0 01       		.byte	0x1
 2883 05c1 9003     		.2byte	0x390
 2884 05c3 6B000000 		.4byte	0x6b
 2885 05c7 02       		.uleb128 0x2
 2886 05c8 91       		.byte	0x91
 2887 05c9 73       		.sleb128 -13
 2888 05ca 00       		.byte	0
 2889 05cb 16       		.uleb128 0x16
 2890 05cc 74070000 		.4byte	.LASF68
 2891 05d0 01       		.byte	0x1
 2892 05d1 AC03     		.2byte	0x3ac
 2893 05d3 00000000 		.4byte	.LFB52
 2894 05d7 24000000 		.4byte	.LFE52-.LFB52
 2895 05db 01       		.uleb128 0x1
 2896 05dc 9C       		.byte	0x9c
 2897 05dd 00060000 		.4byte	0x600
 2898 05e1 14       		.uleb128 0x14
 2899 05e2 13070000 		.4byte	.LASF42
 2900 05e6 01       		.byte	0x1
 2901 05e7 AC03     		.2byte	0x3ac
 2902 05e9 81000000 		.4byte	0x81
 2903 05ed 02       		.uleb128 0x2
 2904 05ee 91       		.byte	0x91
 2905 05ef 74       		.sleb128 -12
 2906 05f0 14       		.uleb128 0x14
 2907 05f1 15030000 		.4byte	.LASF62
 2908 05f5 01       		.byte	0x1
 2909 05f6 AC03     		.2byte	0x3ac
 2910 05f8 6B000000 		.4byte	0x6b
 2911 05fc 02       		.uleb128 0x2
 2912 05fd 91       		.byte	0x91
 2913 05fe 73       		.sleb128 -13
 2914 05ff 00       		.byte	0
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 102


 2915 0600 16       		.uleb128 0x16
 2916 0601 17050000 		.4byte	.LASF69
 2917 0605 01       		.byte	0x1
 2918 0606 C803     		.2byte	0x3c8
 2919 0608 00000000 		.4byte	.LFB53
 2920 060c 24000000 		.4byte	.LFE53-.LFB53
 2921 0610 01       		.uleb128 0x1
 2922 0611 9C       		.byte	0x9c
 2923 0612 35060000 		.4byte	0x635
 2924 0616 14       		.uleb128 0x14
 2925 0617 13070000 		.4byte	.LASF42
 2926 061b 01       		.byte	0x1
 2927 061c C803     		.2byte	0x3c8
 2928 061e 81000000 		.4byte	0x81
 2929 0622 02       		.uleb128 0x2
 2930 0623 91       		.byte	0x91
 2931 0624 74       		.sleb128 -12
 2932 0625 14       		.uleb128 0x14
 2933 0626 15030000 		.4byte	.LASF62
 2934 062a 01       		.byte	0x1
 2935 062b C803     		.2byte	0x3c8
 2936 062d 6B000000 		.4byte	0x6b
 2937 0631 02       		.uleb128 0x2
 2938 0632 91       		.byte	0x91
 2939 0633 73       		.sleb128 -13
 2940 0634 00       		.byte	0
 2941 0635 16       		.uleb128 0x16
 2942 0636 8A000000 		.4byte	.LASF70
 2943 063a 01       		.byte	0x1
 2944 063b E503     		.2byte	0x3e5
 2945 063d 00000000 		.4byte	.LFB54
 2946 0641 24000000 		.4byte	.LFE54-.LFB54
 2947 0645 01       		.uleb128 0x1
 2948 0646 9C       		.byte	0x9c
 2949 0647 6A060000 		.4byte	0x66a
 2950 064b 14       		.uleb128 0x14
 2951 064c 13070000 		.4byte	.LASF42
 2952 0650 01       		.byte	0x1
 2953 0651 E503     		.2byte	0x3e5
 2954 0653 81000000 		.4byte	0x81
 2955 0657 02       		.uleb128 0x2
 2956 0658 91       		.byte	0x91
 2957 0659 74       		.sleb128 -12
 2958 065a 14       		.uleb128 0x14
 2959 065b 15030000 		.4byte	.LASF62
 2960 065f 01       		.byte	0x1
 2961 0660 E503     		.2byte	0x3e5
 2962 0662 6B000000 		.4byte	0x6b
 2963 0666 02       		.uleb128 0x2
 2964 0667 91       		.byte	0x91
 2965 0668 73       		.sleb128 -13
 2966 0669 00       		.byte	0
 2967 066a 16       		.uleb128 0x16
 2968 066b E0020000 		.4byte	.LASF71
 2969 066f 01       		.byte	0x1
 2970 0670 0104     		.2byte	0x401
 2971 0672 00000000 		.4byte	.LFB55
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 103


 2972 0676 24000000 		.4byte	.LFE55-.LFB55
 2973 067a 01       		.uleb128 0x1
 2974 067b 9C       		.byte	0x9c
 2975 067c 9F060000 		.4byte	0x69f
 2976 0680 14       		.uleb128 0x14
 2977 0681 13070000 		.4byte	.LASF42
 2978 0685 01       		.byte	0x1
 2979 0686 0104     		.2byte	0x401
 2980 0688 81000000 		.4byte	0x81
 2981 068c 02       		.uleb128 0x2
 2982 068d 91       		.byte	0x91
 2983 068e 74       		.sleb128 -12
 2984 068f 14       		.uleb128 0x14
 2985 0690 15030000 		.4byte	.LASF62
 2986 0694 01       		.byte	0x1
 2987 0695 0104     		.2byte	0x401
 2988 0697 6B000000 		.4byte	0x6b
 2989 069b 02       		.uleb128 0x2
 2990 069c 91       		.byte	0x91
 2991 069d 73       		.sleb128 -13
 2992 069e 00       		.byte	0
 2993 069f 16       		.uleb128 0x16
 2994 06a0 1B030000 		.4byte	.LASF72
 2995 06a4 01       		.byte	0x1
 2996 06a5 1D04     		.2byte	0x41d
 2997 06a7 00000000 		.4byte	.LFB56
 2998 06ab 24000000 		.4byte	.LFE56-.LFB56
 2999 06af 01       		.uleb128 0x1
 3000 06b0 9C       		.byte	0x9c
 3001 06b1 D4060000 		.4byte	0x6d4
 3002 06b5 14       		.uleb128 0x14
 3003 06b6 E6030000 		.4byte	.LASF40
 3004 06ba 01       		.byte	0x1
 3005 06bb 1D04     		.2byte	0x41d
 3006 06bd 81000000 		.4byte	0x81
 3007 06c1 02       		.uleb128 0x2
 3008 06c2 91       		.byte	0x91
 3009 06c3 74       		.sleb128 -12
 3010 06c4 14       		.uleb128 0x14
 3011 06c5 15030000 		.4byte	.LASF62
 3012 06c9 01       		.byte	0x1
 3013 06ca 1D04     		.2byte	0x41d
 3014 06cc 6B000000 		.4byte	0x6b
 3015 06d0 02       		.uleb128 0x2
 3016 06d1 91       		.byte	0x91
 3017 06d2 73       		.sleb128 -13
 3018 06d3 00       		.byte	0
 3019 06d4 17       		.uleb128 0x17
 3020 06d5 34050000 		.4byte	.LASF73
 3021 06d9 01       		.byte	0x1
 3022 06da 4B04     		.2byte	0x44b
 3023 06dc 81000000 		.4byte	0x81
 3024 06e0 00000000 		.4byte	.LFB57
 3025 06e4 38010000 		.4byte	.LFE57-.LFB57
 3026 06e8 01       		.uleb128 0x1
 3027 06e9 9C       		.byte	0x9c
 3028 06ea 49070000 		.4byte	0x749
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 104


 3029 06ee 14       		.uleb128 0x14
 3030 06ef E6030000 		.4byte	.LASF40
 3031 06f3 01       		.byte	0x1
 3032 06f4 4B04     		.2byte	0x44b
 3033 06f6 81000000 		.4byte	0x81
 3034 06fa 02       		.uleb128 0x2
 3035 06fb 91       		.byte	0x91
 3036 06fc 6C       		.sleb128 -20
 3037 06fd 13       		.uleb128 0x13
 3038 06fe 13070000 		.4byte	.LASF42
 3039 0702 01       		.byte	0x1
 3040 0703 4D04     		.2byte	0x44d
 3041 0705 6B000000 		.4byte	0x6b
 3042 0709 02       		.uleb128 0x2
 3043 070a 91       		.byte	0x91
 3044 070b 77       		.sleb128 -9
 3045 070c 13       		.uleb128 0x13
 3046 070d 9C040000 		.4byte	.LASF74
 3047 0711 01       		.byte	0x1
 3048 0712 4E04     		.2byte	0x44e
 3049 0714 6B000000 		.4byte	0x6b
 3050 0718 02       		.uleb128 0x2
 3051 0719 91       		.byte	0x91
 3052 071a 74       		.sleb128 -12
 3053 071b 13       		.uleb128 0x13
 3054 071c EF070000 		.4byte	.LASF75
 3055 0720 01       		.byte	0x1
 3056 0721 4F04     		.2byte	0x44f
 3057 0723 6B000000 		.4byte	0x6b
 3058 0727 02       		.uleb128 0x2
 3059 0728 91       		.byte	0x91
 3060 0729 73       		.sleb128 -13
 3061 072a 13       		.uleb128 0x13
 3062 072b 7A000000 		.4byte	.LASF76
 3063 072f 01       		.byte	0x1
 3064 0730 5104     		.2byte	0x451
 3065 0732 6B000000 		.4byte	0x6b
 3066 0736 02       		.uleb128 0x2
 3067 0737 91       		.byte	0x91
 3068 0738 76       		.sleb128 -10
 3069 0739 13       		.uleb128 0x13
 3070 073a B9020000 		.4byte	.LASF77
 3071 073e 01       		.byte	0x1
 3072 073f 5204     		.2byte	0x452
 3073 0741 6B000000 		.4byte	0x6b
 3074 0745 02       		.uleb128 0x2
 3075 0746 91       		.byte	0x91
 3076 0747 75       		.sleb128 -11
 3077 0748 00       		.byte	0
 3078 0749 17       		.uleb128 0x17
 3079 074a 85060000 		.4byte	.LASF78
 3080 074e 01       		.byte	0x1
 3081 074f 9D04     		.2byte	0x49d
 3082 0751 81000000 		.4byte	0x81
 3083 0755 00000000 		.4byte	.LFB58
 3084 0759 44000000 		.4byte	.LFE58-.LFB58
 3085 075d 01       		.uleb128 0x1
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 105


 3086 075e 9C       		.byte	0x9c
 3087 075f A0070000 		.4byte	0x7a0
 3088 0763 14       		.uleb128 0x14
 3089 0764 13070000 		.4byte	.LASF42
 3090 0768 01       		.byte	0x1
 3091 0769 9D04     		.2byte	0x49d
 3092 076b 81000000 		.4byte	0x81
 3093 076f 02       		.uleb128 0x2
 3094 0770 91       		.byte	0x91
 3095 0771 64       		.sleb128 -28
 3096 0772 13       		.uleb128 0x13
 3097 0773 E4010000 		.4byte	.LASF79
 3098 0777 01       		.byte	0x1
 3099 0778 9F04     		.2byte	0x49f
 3100 077a 81000000 		.4byte	0x81
 3101 077e 02       		.uleb128 0x2
 3102 077f 91       		.byte	0x91
 3103 0780 74       		.sleb128 -12
 3104 0781 13       		.uleb128 0x13
 3105 0782 29080000 		.4byte	.LASF80
 3106 0786 01       		.byte	0x1
 3107 0787 A004     		.2byte	0x4a0
 3108 0789 81000000 		.4byte	0x81
 3109 078d 02       		.uleb128 0x2
 3110 078e 91       		.byte	0x91
 3111 078f 6C       		.sleb128 -20
 3112 0790 13       		.uleb128 0x13
 3113 0791 27020000 		.4byte	.LASF81
 3114 0795 01       		.byte	0x1
 3115 0796 A104     		.2byte	0x4a1
 3116 0798 81000000 		.4byte	0x81
 3117 079c 02       		.uleb128 0x2
 3118 079d 91       		.byte	0x91
 3119 079e 70       		.sleb128 -16
 3120 079f 00       		.byte	0
 3121 07a0 17       		.uleb128 0x17
 3122 07a1 36020000 		.4byte	.LASF82
 3123 07a5 01       		.byte	0x1
 3124 07a6 CB04     		.2byte	0x4cb
 3125 07a8 81000000 		.4byte	0x81
 3126 07ac 00000000 		.4byte	.LFB59
 3127 07b0 38000000 		.4byte	.LFE59-.LFB59
 3128 07b4 01       		.uleb128 0x1
 3129 07b5 9C       		.byte	0x9c
 3130 07b6 D7070000 		.4byte	0x7d7
 3131 07ba 12       		.uleb128 0x12
 3132 07bb 6900     		.ascii	"i\000"
 3133 07bd 01       		.byte	0x1
 3134 07be CE04     		.2byte	0x4ce
 3135 07c0 81000000 		.4byte	0x81
 3136 07c4 02       		.uleb128 0x2
 3137 07c5 91       		.byte	0x91
 3138 07c6 74       		.sleb128 -12
 3139 07c7 13       		.uleb128 0x13
 3140 07c8 27020000 		.4byte	.LASF81
 3141 07cc 01       		.byte	0x1
 3142 07cd CF04     		.2byte	0x4cf
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 106


 3143 07cf 81000000 		.4byte	0x81
 3144 07d3 02       		.uleb128 0x2
 3145 07d4 91       		.byte	0x91
 3146 07d5 70       		.sleb128 -16
 3147 07d6 00       		.byte	0
 3148 07d7 11       		.uleb128 0x11
 3149 07d8 BC040000 		.4byte	.LASF83
 3150 07dc 01       		.byte	0x1
 3151 07dd FA04     		.2byte	0x4fa
 3152 07df 00000000 		.4byte	.LFB60
 3153 07e3 5C000000 		.4byte	.LFE60-.LFB60
 3154 07e7 01       		.uleb128 0x1
 3155 07e8 9C       		.byte	0x9c
 3156 07e9 1B080000 		.4byte	0x81b
 3157 07ed 14       		.uleb128 0x14
 3158 07ee 13070000 		.4byte	.LASF42
 3159 07f2 01       		.byte	0x1
 3160 07f3 FA04     		.2byte	0x4fa
 3161 07f5 81000000 		.4byte	0x81
 3162 07f9 02       		.uleb128 0x2
 3163 07fa 91       		.byte	0x91
 3164 07fb 6C       		.sleb128 -20
 3165 07fc 13       		.uleb128 0x13
 3166 07fd E4010000 		.4byte	.LASF79
 3167 0801 01       		.byte	0x1
 3168 0802 FD04     		.2byte	0x4fd
 3169 0804 6B000000 		.4byte	0x6b
 3170 0808 02       		.uleb128 0x2
 3171 0809 91       		.byte	0x91
 3172 080a 77       		.sleb128 -9
 3173 080b 13       		.uleb128 0x13
 3174 080c 29080000 		.4byte	.LASF80
 3175 0810 01       		.byte	0x1
 3176 0811 FE04     		.2byte	0x4fe
 3177 0813 6B000000 		.4byte	0x6b
 3178 0817 02       		.uleb128 0x2
 3179 0818 91       		.byte	0x91
 3180 0819 76       		.sleb128 -10
 3181 081a 00       		.byte	0
 3182 081b 11       		.uleb128 0x11
 3183 081c CD010000 		.4byte	.LASF84
 3184 0820 01       		.byte	0x1
 3185 0821 2505     		.2byte	0x525
 3186 0823 00000000 		.4byte	.LFB61
 3187 0827 5C000000 		.4byte	.LFE61-.LFB61
 3188 082b 01       		.uleb128 0x1
 3189 082c 9C       		.byte	0x9c
 3190 082d 5F080000 		.4byte	0x85f
 3191 0831 14       		.uleb128 0x14
 3192 0832 13070000 		.4byte	.LASF42
 3193 0836 01       		.byte	0x1
 3194 0837 2505     		.2byte	0x525
 3195 0839 81000000 		.4byte	0x81
 3196 083d 02       		.uleb128 0x2
 3197 083e 91       		.byte	0x91
 3198 083f 6C       		.sleb128 -20
 3199 0840 13       		.uleb128 0x13
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 107


 3200 0841 E4010000 		.4byte	.LASF79
 3201 0845 01       		.byte	0x1
 3202 0846 2705     		.2byte	0x527
 3203 0848 6B000000 		.4byte	0x6b
 3204 084c 02       		.uleb128 0x2
 3205 084d 91       		.byte	0x91
 3206 084e 77       		.sleb128 -9
 3207 084f 13       		.uleb128 0x13
 3208 0850 29080000 		.4byte	.LASF80
 3209 0854 01       		.byte	0x1
 3210 0855 2805     		.2byte	0x528
 3211 0857 6B000000 		.4byte	0x6b
 3212 085b 02       		.uleb128 0x2
 3213 085c 91       		.byte	0x91
 3214 085d 76       		.sleb128 -10
 3215 085e 00       		.byte	0
 3216 085f 15       		.uleb128 0x15
 3217 0860 11010000 		.4byte	.LASF85
 3218 0864 01       		.byte	0x1
 3219 0865 4109     		.2byte	0x941
 3220 0867 76000000 		.4byte	0x76
 3221 086b 00000000 		.4byte	.LFB62
 3222 086f 6A000000 		.4byte	.LFE62-.LFB62
 3223 0873 01       		.uleb128 0x1
 3224 0874 9C       		.byte	0x9c
 3225 0875 B3080000 		.4byte	0x8b3
 3226 0879 18       		.uleb128 0x18
 3227 087a 783100   		.ascii	"x1\000"
 3228 087d 01       		.byte	0x1
 3229 087e 4109     		.2byte	0x941
 3230 0880 76000000 		.4byte	0x76
 3231 0884 02       		.uleb128 0x2
 3232 0885 91       		.byte	0x91
 3233 0886 6E       		.sleb128 -18
 3234 0887 18       		.uleb128 0x18
 3235 0888 783200   		.ascii	"x2\000"
 3236 088b 01       		.byte	0x1
 3237 088c 4109     		.2byte	0x941
 3238 088e 76000000 		.4byte	0x76
 3239 0892 02       		.uleb128 0x2
 3240 0893 91       		.byte	0x91
 3241 0894 6C       		.sleb128 -20
 3242 0895 18       		.uleb128 0x18
 3243 0896 783300   		.ascii	"x3\000"
 3244 0899 01       		.byte	0x1
 3245 089a 4109     		.2byte	0x941
 3246 089c 76000000 		.4byte	0x76
 3247 08a0 02       		.uleb128 0x2
 3248 08a1 91       		.byte	0x91
 3249 08a2 6A       		.sleb128 -22
 3250 08a3 12       		.uleb128 0x12
 3251 08a4 746D7000 		.ascii	"tmp\000"
 3252 08a8 01       		.byte	0x1
 3253 08a9 4309     		.2byte	0x943
 3254 08ab 76000000 		.4byte	0x76
 3255 08af 02       		.uleb128 0x2
 3256 08b0 91       		.byte	0x91
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 108


 3257 08b1 76       		.sleb128 -10
 3258 08b2 00       		.byte	0
 3259 08b3 15       		.uleb128 0x15
 3260 08b4 1B090000 		.4byte	.LASF86
 3261 08b8 01       		.byte	0x1
 3262 08b9 B909     		.2byte	0x9b9
 3263 08bb 76000000 		.4byte	0x76
 3264 08bf 00000000 		.4byte	.LFB63
 3265 08c3 3C000000 		.4byte	.LFE63-.LFB63
 3266 08c7 01       		.uleb128 0x1
 3267 08c8 9C       		.byte	0x9c
 3268 08c9 F9080000 		.4byte	0x8f9
 3269 08cd 18       		.uleb128 0x18
 3270 08ce 783100   		.ascii	"x1\000"
 3271 08d1 01       		.byte	0x1
 3272 08d2 B909     		.2byte	0x9b9
 3273 08d4 76000000 		.4byte	0x76
 3274 08d8 02       		.uleb128 0x2
 3275 08d9 91       		.byte	0x91
 3276 08da 6E       		.sleb128 -18
 3277 08db 18       		.uleb128 0x18
 3278 08dc 783200   		.ascii	"x2\000"
 3279 08df 01       		.byte	0x1
 3280 08e0 B909     		.2byte	0x9b9
 3281 08e2 76000000 		.4byte	0x76
 3282 08e6 02       		.uleb128 0x2
 3283 08e7 91       		.byte	0x91
 3284 08e8 6C       		.sleb128 -20
 3285 08e9 12       		.uleb128 0x12
 3286 08ea 746D7000 		.ascii	"tmp\000"
 3287 08ee 01       		.byte	0x1
 3288 08ef BB09     		.2byte	0x9bb
 3289 08f1 81000000 		.4byte	0x81
 3290 08f5 02       		.uleb128 0x2
 3291 08f6 91       		.byte	0x91
 3292 08f7 74       		.sleb128 -12
 3293 08f8 00       		.byte	0
 3294 08f9 15       		.uleb128 0x15
 3295 08fa CB080000 		.4byte	.LASF87
 3296 08fe 01       		.byte	0x1
 3297 08ff A20A     		.2byte	0xaa2
 3298 0901 81000000 		.4byte	0x81
 3299 0905 00000000 		.4byte	.LFB64
 3300 0909 1C000000 		.4byte	.LFE64-.LFB64
 3301 090d 01       		.uleb128 0x1
 3302 090e 9C       		.byte	0x9c
 3303 090f 23090000 		.4byte	0x923
 3304 0913 14       		.uleb128 0x14
 3305 0914 E6030000 		.4byte	.LASF40
 3306 0918 01       		.byte	0x1
 3307 0919 A20A     		.2byte	0xaa2
 3308 091b 81000000 		.4byte	0x81
 3309 091f 02       		.uleb128 0x2
 3310 0920 91       		.byte	0x91
 3311 0921 74       		.sleb128 -12
 3312 0922 00       		.byte	0
 3313 0923 15       		.uleb128 0x15
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 109


 3314 0924 EC050000 		.4byte	.LASF88
 3315 0928 01       		.byte	0x1
 3316 0929 BC0A     		.2byte	0xabc
 3317 092b 6B000000 		.4byte	0x6b
 3318 092f 00000000 		.4byte	.LFB65
 3319 0933 1C000000 		.4byte	.LFE65-.LFB65
 3320 0937 01       		.uleb128 0x1
 3321 0938 9C       		.byte	0x9c
 3322 0939 4D090000 		.4byte	0x94d
 3323 093d 14       		.uleb128 0x14
 3324 093e E6030000 		.4byte	.LASF40
 3325 0942 01       		.byte	0x1
 3326 0943 BC0A     		.2byte	0xabc
 3327 0945 81000000 		.4byte	0x81
 3328 0949 02       		.uleb128 0x2
 3329 094a 91       		.byte	0x91
 3330 094b 74       		.sleb128 -12
 3331 094c 00       		.byte	0
 3332 094d 15       		.uleb128 0x15
 3333 094e FC000000 		.4byte	.LASF89
 3334 0952 01       		.byte	0x1
 3335 0953 D60A     		.2byte	0xad6
 3336 0955 6B000000 		.4byte	0x6b
 3337 0959 00000000 		.4byte	.LFB66
 3338 095d 1C000000 		.4byte	.LFE66-.LFB66
 3339 0961 01       		.uleb128 0x1
 3340 0962 9C       		.byte	0x9c
 3341 0963 77090000 		.4byte	0x977
 3342 0967 14       		.uleb128 0x14
 3343 0968 13070000 		.4byte	.LASF42
 3344 096c 01       		.byte	0x1
 3345 096d D60A     		.2byte	0xad6
 3346 096f 81000000 		.4byte	0x81
 3347 0973 02       		.uleb128 0x2
 3348 0974 91       		.byte	0x91
 3349 0975 74       		.sleb128 -12
 3350 0976 00       		.byte	0
 3351 0977 19       		.uleb128 0x19
 3352 0978 E4080000 		.4byte	.LASF90
 3353 097c 01       		.byte	0x1
 3354 097d F00A     		.2byte	0xaf0
 3355 097f 00000000 		.4byte	.LFB67
 3356 0983 14000000 		.4byte	.LFE67-.LFB67
 3357 0987 01       		.uleb128 0x1
 3358 0988 9C       		.byte	0x9c
 3359 0989 19       		.uleb128 0x19
 3360 098a 76020000 		.4byte	.LASF91
 3361 098e 01       		.byte	0x1
 3362 098f 090B     		.2byte	0xb09
 3363 0991 00000000 		.4byte	.LFB68
 3364 0995 14000000 		.4byte	.LFE68-.LFB68
 3365 0999 01       		.uleb128 0x1
 3366 099a 9C       		.byte	0x9c
 3367 099b 1A       		.uleb128 0x1a
 3368 099c 6B000000 		.4byte	0x6b
 3369 09a0 AB090000 		.4byte	0x9ab
 3370 09a4 1B       		.uleb128 0x1b
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 110


 3371 09a5 A1000000 		.4byte	0xa1
 3372 09a9 01       		.byte	0x1
 3373 09aa 00       		.byte	0
 3374 09ab 0E       		.uleb128 0xe
 3375 09ac 02090000 		.4byte	.LASF92
 3376 09b0 01       		.byte	0x1
 3377 09b1 57       		.byte	0x57
 3378 09b2 9B090000 		.4byte	0x99b
 3379 09b6 05       		.uleb128 0x5
 3380 09b7 03       		.byte	0x3
 3381 09b8 10000000 		.4byte	CapSense_debounceCounter
 3382 09bc 1A       		.uleb128 0x1a
 3383 09bd 76000000 		.4byte	0x76
 3384 09c1 CC090000 		.4byte	0x9cc
 3385 09c5 1B       		.uleb128 0x1b
 3386 09c6 A1000000 		.4byte	0xa1
 3387 09ca 00       		.byte	0
 3388 09cb 00       		.byte	0
 3389 09cc 1C       		.uleb128 0x1c
 3390 09cd 8F080000 		.4byte	.LASF93
 3391 09d1 01       		.byte	0x1
 3392 09d2 2C       		.byte	0x2c
 3393 09d3 BC090000 		.4byte	0x9bc
 3394 09d7 1A       		.uleb128 0x1a
 3395 09d8 6B000000 		.4byte	0x6b
 3396 09dc E7090000 		.4byte	0x9e7
 3397 09e0 1B       		.uleb128 0x1b
 3398 09e1 A1000000 		.4byte	0xa1
 3399 09e5 00       		.byte	0
 3400 09e6 00       		.byte	0
 3401 09e7 1C       		.uleb128 0x1c
 3402 09e8 ED030000 		.4byte	.LASF94
 3403 09ec 01       		.byte	0x1
 3404 09ed 2D       		.byte	0x2d
 3405 09ee D7090000 		.4byte	0x9d7
 3406 09f2 1C       		.uleb128 0x1c
 3407 09f3 9C020000 		.4byte	.LASF95
 3408 09f7 01       		.byte	0x1
 3409 09f8 2E       		.byte	0x2e
 3410 09f9 FD090000 		.4byte	0x9fd
 3411 09fd 08       		.uleb128 0x8
 3412 09fe D7090000 		.4byte	0x9d7
 3413 0a02 1D       		.uleb128 0x1d
 3414 0a03 8F070000 		.4byte	.LASF96
 3415 0a07 01       		.byte	0x1
 3416 0a08 34       		.byte	0x34
 3417 0a09 BC090000 		.4byte	0x9bc
 3418 0a0d 05       		.uleb128 0x5
 3419 0a0e 03       		.byte	0x3
 3420 0a0f 00000000 		.4byte	CapSense_sensorBaseline
 3421 0a13 1D       		.uleb128 0x1d
 3422 0a14 62030000 		.4byte	.LASF97
 3423 0a18 01       		.byte	0x1
 3424 0a19 35       		.byte	0x35
 3425 0a1a D7090000 		.4byte	0x9d7
 3426 0a1e 05       		.uleb128 0x5
 3427 0a1f 03       		.byte	0x3
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 111


 3428 0a20 00000000 		.4byte	CapSense_sensorBaselineLow
 3429 0a24 1D       		.uleb128 0x1d
 3430 0a25 3E010000 		.4byte	.LASF98
 3431 0a29 01       		.byte	0x1
 3432 0a2a 36       		.byte	0x36
 3433 0a2b D7090000 		.4byte	0x9d7
 3434 0a2f 05       		.uleb128 0x5
 3435 0a30 03       		.byte	0x3
 3436 0a31 00000000 		.4byte	CapSense_sensorSignal
 3437 0a35 1D       		.uleb128 0x1d
 3438 0a36 41000000 		.4byte	.LASF99
 3439 0a3a 01       		.byte	0x1
 3440 0a3b 37       		.byte	0x37
 3441 0a3c D7090000 		.4byte	0x9d7
 3442 0a40 05       		.uleb128 0x5
 3443 0a41 03       		.byte	0x3
 3444 0a42 00000000 		.4byte	CapSense_sensorOnMask
 3445 0a46 1D       		.uleb128 0x1d
 3446 0a47 57070000 		.4byte	.LASF100
 3447 0a4b 01       		.byte	0x1
 3448 0a4c 39       		.byte	0x39
 3449 0a4d D7090000 		.4byte	0x9d7
 3450 0a51 05       		.uleb128 0x5
 3451 0a52 03       		.byte	0x3
 3452 0a53 00000000 		.4byte	CapSense_lowBaselineResetCnt
 3453 0a57 1D       		.uleb128 0x1d
 3454 0a58 5C020000 		.4byte	.LASF101
 3455 0a5c 01       		.byte	0x1
 3456 0a5d 3A       		.byte	0x3a
 3457 0a5e D7090000 		.4byte	0x9d7
 3458 0a62 05       		.uleb128 0x5
 3459 0a63 03       		.byte	0x3
 3460 0a64 00000000 		.4byte	CapSense_lowBaselineReset
 3461 0a68 1D       		.uleb128 0x1d
 3462 0a69 87050000 		.4byte	.LASF102
 3463 0a6d 01       		.byte	0x1
 3464 0a6e 49       		.byte	0x49
 3465 0a6f D7090000 		.4byte	0x9d7
 3466 0a73 05       		.uleb128 0x5
 3467 0a74 03       		.byte	0x3
 3468 0a75 00000000 		.4byte	CapSense_fingerThreshold
 3469 0a79 1D       		.uleb128 0x1d
 3470 0a7a 6F050000 		.4byte	.LASF103
 3471 0a7e 01       		.byte	0x1
 3472 0a7f 4D       		.byte	0x4d
 3473 0a80 D7090000 		.4byte	0x9d7
 3474 0a84 05       		.uleb128 0x5
 3475 0a85 03       		.byte	0x3
 3476 0a86 00000000 		.4byte	CapSense_noiseThreshold
 3477 0a8a 1D       		.uleb128 0x1d
 3478 0a8b 54090000 		.4byte	.LASF104
 3479 0a8f 01       		.byte	0x1
 3480 0a90 4F       		.byte	0x4f
 3481 0a91 D7090000 		.4byte	0x9d7
 3482 0a95 05       		.uleb128 0x5
 3483 0a96 03       		.byte	0x3
 3484 0a97 00000000 		.4byte	CapSense_negativeNoiseThreshold
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 112


 3485 0a9b 1D       		.uleb128 0x1d
 3486 0a9c 17000000 		.4byte	.LASF105
 3487 0aa0 01       		.byte	0x1
 3488 0aa1 51       		.byte	0x51
 3489 0aa2 D7090000 		.4byte	0x9d7
 3490 0aa6 05       		.uleb128 0x5
 3491 0aa7 03       		.byte	0x3
 3492 0aa8 00000000 		.4byte	CapSense_hysteresis
 3493 0aac 1D       		.uleb128 0x1d
 3494 0aad AD030000 		.4byte	.LASF106
 3495 0ab1 01       		.byte	0x1
 3496 0ab2 53       		.byte	0x53
 3497 0ab3 D7090000 		.4byte	0x9d7
 3498 0ab7 05       		.uleb128 0x5
 3499 0ab8 03       		.byte	0x3
 3500 0ab9 00000000 		.4byte	CapSense_debounce
 3501 0abd 1D       		.uleb128 0x1d
 3502 0abe 2B000000 		.4byte	.LASF107
 3503 0ac2 01       		.byte	0x1
 3504 0ac3 5B       		.byte	0x5b
 3505 0ac4 CE0A0000 		.4byte	0xace
 3506 0ac8 05       		.uleb128 0x5
 3507 0ac9 03       		.byte	0x3
 3508 0aca 00000000 		.4byte	CapSense_rawDataIndex
 3509 0ace 08       		.uleb128 0x8
 3510 0acf D7090000 		.4byte	0x9d7
 3511 0ad3 1D       		.uleb128 0x1d
 3512 0ad4 07040000 		.4byte	.LASF108
 3513 0ad8 01       		.byte	0x1
 3514 0ad9 5F       		.byte	0x5f
 3515 0ada E40A0000 		.4byte	0xae4
 3516 0ade 05       		.uleb128 0x5
 3517 0adf 03       		.byte	0x3
 3518 0ae0 00000000 		.4byte	CapSense_numberOfSensors
 3519 0ae4 08       		.uleb128 0x8
 3520 0ae5 D7090000 		.4byte	0x9d7
 3521 0ae9 1D       		.uleb128 0x1d
 3522 0aea A0050000 		.4byte	.LASF109
 3523 0aee 01       		.byte	0x1
 3524 0aef 27       		.byte	0x27
 3525 0af0 BC090000 		.4byte	0x9bc
 3526 0af4 05       		.uleb128 0x5
 3527 0af5 03       		.byte	0x3
 3528 0af6 00000000 		.4byte	CapSense_rawFilterData1
 3529 0afa 1C       		.uleb128 0x1c
 3530 0afb D6050000 		.4byte	.LASF110
 3531 0aff 01       		.byte	0x1
 3532 0b00 41       		.byte	0x41
 3533 0b01 32020000 		.4byte	0x232
 3534 0b05 1D       		.uleb128 0x1d
 3535 0b06 AC070000 		.4byte	.LASF111
 3536 0b0a 01       		.byte	0x1
 3537 0b0b 45       		.byte	0x45
 3538 0b0c 6B000000 		.4byte	0x6b
 3539 0b10 05       		.uleb128 0x5
 3540 0b11 03       		.byte	0x3
 3541 0b12 00000000 		.4byte	CapSense_enableRawFilters
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 113


 3542 0b16 00       		.byte	0
 3543              		.section	.debug_abbrev,"",%progbits
 3544              	.Ldebug_abbrev0:
 3545 0000 01       		.uleb128 0x1
 3546 0001 11       		.uleb128 0x11
 3547 0002 01       		.byte	0x1
 3548 0003 25       		.uleb128 0x25
 3549 0004 0E       		.uleb128 0xe
 3550 0005 13       		.uleb128 0x13
 3551 0006 0B       		.uleb128 0xb
 3552 0007 03       		.uleb128 0x3
 3553 0008 0E       		.uleb128 0xe
 3554 0009 1B       		.uleb128 0x1b
 3555 000a 0E       		.uleb128 0xe
 3556 000b 55       		.uleb128 0x55
 3557 000c 17       		.uleb128 0x17
 3558 000d 11       		.uleb128 0x11
 3559 000e 01       		.uleb128 0x1
 3560 000f 10       		.uleb128 0x10
 3561 0010 17       		.uleb128 0x17
 3562 0011 00       		.byte	0
 3563 0012 00       		.byte	0
 3564 0013 02       		.uleb128 0x2
 3565 0014 24       		.uleb128 0x24
 3566 0015 00       		.byte	0
 3567 0016 0B       		.uleb128 0xb
 3568 0017 0B       		.uleb128 0xb
 3569 0018 3E       		.uleb128 0x3e
 3570 0019 0B       		.uleb128 0xb
 3571 001a 03       		.uleb128 0x3
 3572 001b 0E       		.uleb128 0xe
 3573 001c 00       		.byte	0
 3574 001d 00       		.byte	0
 3575 001e 03       		.uleb128 0x3
 3576 001f 24       		.uleb128 0x24
 3577 0020 00       		.byte	0
 3578 0021 0B       		.uleb128 0xb
 3579 0022 0B       		.uleb128 0xb
 3580 0023 3E       		.uleb128 0x3e
 3581 0024 0B       		.uleb128 0xb
 3582 0025 03       		.uleb128 0x3
 3583 0026 08       		.uleb128 0x8
 3584 0027 00       		.byte	0
 3585 0028 00       		.byte	0
 3586 0029 04       		.uleb128 0x4
 3587 002a 16       		.uleb128 0x16
 3588 002b 00       		.byte	0
 3589 002c 03       		.uleb128 0x3
 3590 002d 0E       		.uleb128 0xe
 3591 002e 3A       		.uleb128 0x3a
 3592 002f 0B       		.uleb128 0xb
 3593 0030 3B       		.uleb128 0x3b
 3594 0031 0B       		.uleb128 0xb
 3595 0032 49       		.uleb128 0x49
 3596 0033 13       		.uleb128 0x13
 3597 0034 00       		.byte	0
 3598 0035 00       		.byte	0
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 114


 3599 0036 05       		.uleb128 0x5
 3600 0037 13       		.uleb128 0x13
 3601 0038 01       		.byte	0x1
 3602 0039 0B       		.uleb128 0xb
 3603 003a 0B       		.uleb128 0xb
 3604 003b 3A       		.uleb128 0x3a
 3605 003c 0B       		.uleb128 0xb
 3606 003d 3B       		.uleb128 0x3b
 3607 003e 0B       		.uleb128 0xb
 3608 003f 01       		.uleb128 0x1
 3609 0040 13       		.uleb128 0x13
 3610 0041 00       		.byte	0
 3611 0042 00       		.byte	0
 3612 0043 06       		.uleb128 0x6
 3613 0044 0D       		.uleb128 0xd
 3614 0045 00       		.byte	0
 3615 0046 03       		.uleb128 0x3
 3616 0047 0E       		.uleb128 0xe
 3617 0048 3A       		.uleb128 0x3a
 3618 0049 0B       		.uleb128 0xb
 3619 004a 3B       		.uleb128 0x3b
 3620 004b 0B       		.uleb128 0xb
 3621 004c 49       		.uleb128 0x49
 3622 004d 13       		.uleb128 0x13
 3623 004e 38       		.uleb128 0x38
 3624 004f 0B       		.uleb128 0xb
 3625 0050 00       		.byte	0
 3626 0051 00       		.byte	0
 3627 0052 07       		.uleb128 0x7
 3628 0053 0F       		.uleb128 0xf
 3629 0054 00       		.byte	0
 3630 0055 0B       		.uleb128 0xb
 3631 0056 0B       		.uleb128 0xb
 3632 0057 49       		.uleb128 0x49
 3633 0058 13       		.uleb128 0x13
 3634 0059 00       		.byte	0
 3635 005a 00       		.byte	0
 3636 005b 08       		.uleb128 0x8
 3637 005c 26       		.uleb128 0x26
 3638 005d 00       		.byte	0
 3639 005e 49       		.uleb128 0x49
 3640 005f 13       		.uleb128 0x13
 3641 0060 00       		.byte	0
 3642 0061 00       		.byte	0
 3643 0062 09       		.uleb128 0x9
 3644 0063 15       		.uleb128 0x15
 3645 0064 01       		.byte	0x1
 3646 0065 27       		.uleb128 0x27
 3647 0066 19       		.uleb128 0x19
 3648 0067 49       		.uleb128 0x49
 3649 0068 13       		.uleb128 0x13
 3650 0069 01       		.uleb128 0x1
 3651 006a 13       		.uleb128 0x13
 3652 006b 00       		.byte	0
 3653 006c 00       		.byte	0
 3654 006d 0A       		.uleb128 0xa
 3655 006e 05       		.uleb128 0x5
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 115


 3656 006f 00       		.byte	0
 3657 0070 49       		.uleb128 0x49
 3658 0071 13       		.uleb128 0x13
 3659 0072 00       		.byte	0
 3660 0073 00       		.byte	0
 3661 0074 0B       		.uleb128 0xb
 3662 0075 15       		.uleb128 0x15
 3663 0076 01       		.byte	0x1
 3664 0077 27       		.uleb128 0x27
 3665 0078 19       		.uleb128 0x19
 3666 0079 01       		.uleb128 0x1
 3667 007a 13       		.uleb128 0x13
 3668 007b 00       		.byte	0
 3669 007c 00       		.byte	0
 3670 007d 0C       		.uleb128 0xc
 3671 007e 2E       		.uleb128 0x2e
 3672 007f 01       		.byte	0x1
 3673 0080 3F       		.uleb128 0x3f
 3674 0081 19       		.uleb128 0x19
 3675 0082 03       		.uleb128 0x3
 3676 0083 0E       		.uleb128 0xe
 3677 0084 3A       		.uleb128 0x3a
 3678 0085 0B       		.uleb128 0xb
 3679 0086 3B       		.uleb128 0x3b
 3680 0087 0B       		.uleb128 0xb
 3681 0088 27       		.uleb128 0x27
 3682 0089 19       		.uleb128 0x19
 3683 008a 11       		.uleb128 0x11
 3684 008b 01       		.uleb128 0x1
 3685 008c 12       		.uleb128 0x12
 3686 008d 06       		.uleb128 0x6
 3687 008e 40       		.uleb128 0x40
 3688 008f 18       		.uleb128 0x18
 3689 0090 9742     		.uleb128 0x2117
 3690 0092 19       		.uleb128 0x19
 3691 0093 01       		.uleb128 0x1
 3692 0094 13       		.uleb128 0x13
 3693 0095 00       		.byte	0
 3694 0096 00       		.byte	0
 3695 0097 0D       		.uleb128 0xd
 3696 0098 05       		.uleb128 0x5
 3697 0099 00       		.byte	0
 3698 009a 03       		.uleb128 0x3
 3699 009b 0E       		.uleb128 0xe
 3700 009c 3A       		.uleb128 0x3a
 3701 009d 0B       		.uleb128 0xb
 3702 009e 3B       		.uleb128 0x3b
 3703 009f 0B       		.uleb128 0xb
 3704 00a0 49       		.uleb128 0x49
 3705 00a1 13       		.uleb128 0x13
 3706 00a2 02       		.uleb128 0x2
 3707 00a3 18       		.uleb128 0x18
 3708 00a4 00       		.byte	0
 3709 00a5 00       		.byte	0
 3710 00a6 0E       		.uleb128 0xe
 3711 00a7 34       		.uleb128 0x34
 3712 00a8 00       		.byte	0
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 116


 3713 00a9 03       		.uleb128 0x3
 3714 00aa 0E       		.uleb128 0xe
 3715 00ab 3A       		.uleb128 0x3a
 3716 00ac 0B       		.uleb128 0xb
 3717 00ad 3B       		.uleb128 0x3b
 3718 00ae 0B       		.uleb128 0xb
 3719 00af 49       		.uleb128 0x49
 3720 00b0 13       		.uleb128 0x13
 3721 00b1 02       		.uleb128 0x2
 3722 00b2 18       		.uleb128 0x18
 3723 00b3 00       		.byte	0
 3724 00b4 00       		.byte	0
 3725 00b5 0F       		.uleb128 0xf
 3726 00b6 2E       		.uleb128 0x2e
 3727 00b7 01       		.byte	0x1
 3728 00b8 3F       		.uleb128 0x3f
 3729 00b9 19       		.uleb128 0x19
 3730 00ba 03       		.uleb128 0x3
 3731 00bb 0E       		.uleb128 0xe
 3732 00bc 3A       		.uleb128 0x3a
 3733 00bd 0B       		.uleb128 0xb
 3734 00be 3B       		.uleb128 0x3b
 3735 00bf 0B       		.uleb128 0xb
 3736 00c0 27       		.uleb128 0x27
 3737 00c1 19       		.uleb128 0x19
 3738 00c2 11       		.uleb128 0x11
 3739 00c3 01       		.uleb128 0x1
 3740 00c4 12       		.uleb128 0x12
 3741 00c5 06       		.uleb128 0x6
 3742 00c6 40       		.uleb128 0x40
 3743 00c7 18       		.uleb128 0x18
 3744 00c8 9642     		.uleb128 0x2116
 3745 00ca 19       		.uleb128 0x19
 3746 00cb 01       		.uleb128 0x1
 3747 00cc 13       		.uleb128 0x13
 3748 00cd 00       		.byte	0
 3749 00ce 00       		.byte	0
 3750 00cf 10       		.uleb128 0x10
 3751 00d0 34       		.uleb128 0x34
 3752 00d1 00       		.byte	0
 3753 00d2 03       		.uleb128 0x3
 3754 00d3 08       		.uleb128 0x8
 3755 00d4 3A       		.uleb128 0x3a
 3756 00d5 0B       		.uleb128 0xb
 3757 00d6 3B       		.uleb128 0x3b
 3758 00d7 0B       		.uleb128 0xb
 3759 00d8 49       		.uleb128 0x49
 3760 00d9 13       		.uleb128 0x13
 3761 00da 02       		.uleb128 0x2
 3762 00db 18       		.uleb128 0x18
 3763 00dc 00       		.byte	0
 3764 00dd 00       		.byte	0
 3765 00de 11       		.uleb128 0x11
 3766 00df 2E       		.uleb128 0x2e
 3767 00e0 01       		.byte	0x1
 3768 00e1 3F       		.uleb128 0x3f
 3769 00e2 19       		.uleb128 0x19
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 117


 3770 00e3 03       		.uleb128 0x3
 3771 00e4 0E       		.uleb128 0xe
 3772 00e5 3A       		.uleb128 0x3a
 3773 00e6 0B       		.uleb128 0xb
 3774 00e7 3B       		.uleb128 0x3b
 3775 00e8 05       		.uleb128 0x5
 3776 00e9 27       		.uleb128 0x27
 3777 00ea 19       		.uleb128 0x19
 3778 00eb 11       		.uleb128 0x11
 3779 00ec 01       		.uleb128 0x1
 3780 00ed 12       		.uleb128 0x12
 3781 00ee 06       		.uleb128 0x6
 3782 00ef 40       		.uleb128 0x40
 3783 00f0 18       		.uleb128 0x18
 3784 00f1 9642     		.uleb128 0x2116
 3785 00f3 19       		.uleb128 0x19
 3786 00f4 01       		.uleb128 0x1
 3787 00f5 13       		.uleb128 0x13
 3788 00f6 00       		.byte	0
 3789 00f7 00       		.byte	0
 3790 00f8 12       		.uleb128 0x12
 3791 00f9 34       		.uleb128 0x34
 3792 00fa 00       		.byte	0
 3793 00fb 03       		.uleb128 0x3
 3794 00fc 08       		.uleb128 0x8
 3795 00fd 3A       		.uleb128 0x3a
 3796 00fe 0B       		.uleb128 0xb
 3797 00ff 3B       		.uleb128 0x3b
 3798 0100 05       		.uleb128 0x5
 3799 0101 49       		.uleb128 0x49
 3800 0102 13       		.uleb128 0x13
 3801 0103 02       		.uleb128 0x2
 3802 0104 18       		.uleb128 0x18
 3803 0105 00       		.byte	0
 3804 0106 00       		.byte	0
 3805 0107 13       		.uleb128 0x13
 3806 0108 34       		.uleb128 0x34
 3807 0109 00       		.byte	0
 3808 010a 03       		.uleb128 0x3
 3809 010b 0E       		.uleb128 0xe
 3810 010c 3A       		.uleb128 0x3a
 3811 010d 0B       		.uleb128 0xb
 3812 010e 3B       		.uleb128 0x3b
 3813 010f 05       		.uleb128 0x5
 3814 0110 49       		.uleb128 0x49
 3815 0111 13       		.uleb128 0x13
 3816 0112 02       		.uleb128 0x2
 3817 0113 18       		.uleb128 0x18
 3818 0114 00       		.byte	0
 3819 0115 00       		.byte	0
 3820 0116 14       		.uleb128 0x14
 3821 0117 05       		.uleb128 0x5
 3822 0118 00       		.byte	0
 3823 0119 03       		.uleb128 0x3
 3824 011a 0E       		.uleb128 0xe
 3825 011b 3A       		.uleb128 0x3a
 3826 011c 0B       		.uleb128 0xb
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 118


 3827 011d 3B       		.uleb128 0x3b
 3828 011e 05       		.uleb128 0x5
 3829 011f 49       		.uleb128 0x49
 3830 0120 13       		.uleb128 0x13
 3831 0121 02       		.uleb128 0x2
 3832 0122 18       		.uleb128 0x18
 3833 0123 00       		.byte	0
 3834 0124 00       		.byte	0
 3835 0125 15       		.uleb128 0x15
 3836 0126 2E       		.uleb128 0x2e
 3837 0127 01       		.byte	0x1
 3838 0128 3F       		.uleb128 0x3f
 3839 0129 19       		.uleb128 0x19
 3840 012a 03       		.uleb128 0x3
 3841 012b 0E       		.uleb128 0xe
 3842 012c 3A       		.uleb128 0x3a
 3843 012d 0B       		.uleb128 0xb
 3844 012e 3B       		.uleb128 0x3b
 3845 012f 05       		.uleb128 0x5
 3846 0130 27       		.uleb128 0x27
 3847 0131 19       		.uleb128 0x19
 3848 0132 49       		.uleb128 0x49
 3849 0133 13       		.uleb128 0x13
 3850 0134 11       		.uleb128 0x11
 3851 0135 01       		.uleb128 0x1
 3852 0136 12       		.uleb128 0x12
 3853 0137 06       		.uleb128 0x6
 3854 0138 40       		.uleb128 0x40
 3855 0139 18       		.uleb128 0x18
 3856 013a 9742     		.uleb128 0x2117
 3857 013c 19       		.uleb128 0x19
 3858 013d 01       		.uleb128 0x1
 3859 013e 13       		.uleb128 0x13
 3860 013f 00       		.byte	0
 3861 0140 00       		.byte	0
 3862 0141 16       		.uleb128 0x16
 3863 0142 2E       		.uleb128 0x2e
 3864 0143 01       		.byte	0x1
 3865 0144 3F       		.uleb128 0x3f
 3866 0145 19       		.uleb128 0x19
 3867 0146 03       		.uleb128 0x3
 3868 0147 0E       		.uleb128 0xe
 3869 0148 3A       		.uleb128 0x3a
 3870 0149 0B       		.uleb128 0xb
 3871 014a 3B       		.uleb128 0x3b
 3872 014b 05       		.uleb128 0x5
 3873 014c 27       		.uleb128 0x27
 3874 014d 19       		.uleb128 0x19
 3875 014e 11       		.uleb128 0x11
 3876 014f 01       		.uleb128 0x1
 3877 0150 12       		.uleb128 0x12
 3878 0151 06       		.uleb128 0x6
 3879 0152 40       		.uleb128 0x40
 3880 0153 18       		.uleb128 0x18
 3881 0154 9742     		.uleb128 0x2117
 3882 0156 19       		.uleb128 0x19
 3883 0157 01       		.uleb128 0x1
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 119


 3884 0158 13       		.uleb128 0x13
 3885 0159 00       		.byte	0
 3886 015a 00       		.byte	0
 3887 015b 17       		.uleb128 0x17
 3888 015c 2E       		.uleb128 0x2e
 3889 015d 01       		.byte	0x1
 3890 015e 3F       		.uleb128 0x3f
 3891 015f 19       		.uleb128 0x19
 3892 0160 03       		.uleb128 0x3
 3893 0161 0E       		.uleb128 0xe
 3894 0162 3A       		.uleb128 0x3a
 3895 0163 0B       		.uleb128 0xb
 3896 0164 3B       		.uleb128 0x3b
 3897 0165 05       		.uleb128 0x5
 3898 0166 27       		.uleb128 0x27
 3899 0167 19       		.uleb128 0x19
 3900 0168 49       		.uleb128 0x49
 3901 0169 13       		.uleb128 0x13
 3902 016a 11       		.uleb128 0x11
 3903 016b 01       		.uleb128 0x1
 3904 016c 12       		.uleb128 0x12
 3905 016d 06       		.uleb128 0x6
 3906 016e 40       		.uleb128 0x40
 3907 016f 18       		.uleb128 0x18
 3908 0170 9642     		.uleb128 0x2116
 3909 0172 19       		.uleb128 0x19
 3910 0173 01       		.uleb128 0x1
 3911 0174 13       		.uleb128 0x13
 3912 0175 00       		.byte	0
 3913 0176 00       		.byte	0
 3914 0177 18       		.uleb128 0x18
 3915 0178 05       		.uleb128 0x5
 3916 0179 00       		.byte	0
 3917 017a 03       		.uleb128 0x3
 3918 017b 08       		.uleb128 0x8
 3919 017c 3A       		.uleb128 0x3a
 3920 017d 0B       		.uleb128 0xb
 3921 017e 3B       		.uleb128 0x3b
 3922 017f 05       		.uleb128 0x5
 3923 0180 49       		.uleb128 0x49
 3924 0181 13       		.uleb128 0x13
 3925 0182 02       		.uleb128 0x2
 3926 0183 18       		.uleb128 0x18
 3927 0184 00       		.byte	0
 3928 0185 00       		.byte	0
 3929 0186 19       		.uleb128 0x19
 3930 0187 2E       		.uleb128 0x2e
 3931 0188 00       		.byte	0
 3932 0189 3F       		.uleb128 0x3f
 3933 018a 19       		.uleb128 0x19
 3934 018b 03       		.uleb128 0x3
 3935 018c 0E       		.uleb128 0xe
 3936 018d 3A       		.uleb128 0x3a
 3937 018e 0B       		.uleb128 0xb
 3938 018f 3B       		.uleb128 0x3b
 3939 0190 05       		.uleb128 0x5
 3940 0191 27       		.uleb128 0x27
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 120


 3941 0192 19       		.uleb128 0x19
 3942 0193 11       		.uleb128 0x11
 3943 0194 01       		.uleb128 0x1
 3944 0195 12       		.uleb128 0x12
 3945 0196 06       		.uleb128 0x6
 3946 0197 40       		.uleb128 0x40
 3947 0198 18       		.uleb128 0x18
 3948 0199 9742     		.uleb128 0x2117
 3949 019b 19       		.uleb128 0x19
 3950 019c 00       		.byte	0
 3951 019d 00       		.byte	0
 3952 019e 1A       		.uleb128 0x1a
 3953 019f 01       		.uleb128 0x1
 3954 01a0 01       		.byte	0x1
 3955 01a1 49       		.uleb128 0x49
 3956 01a2 13       		.uleb128 0x13
 3957 01a3 01       		.uleb128 0x1
 3958 01a4 13       		.uleb128 0x13
 3959 01a5 00       		.byte	0
 3960 01a6 00       		.byte	0
 3961 01a7 1B       		.uleb128 0x1b
 3962 01a8 21       		.uleb128 0x21
 3963 01a9 00       		.byte	0
 3964 01aa 49       		.uleb128 0x49
 3965 01ab 13       		.uleb128 0x13
 3966 01ac 2F       		.uleb128 0x2f
 3967 01ad 0B       		.uleb128 0xb
 3968 01ae 00       		.byte	0
 3969 01af 00       		.byte	0
 3970 01b0 1C       		.uleb128 0x1c
 3971 01b1 34       		.uleb128 0x34
 3972 01b2 00       		.byte	0
 3973 01b3 03       		.uleb128 0x3
 3974 01b4 0E       		.uleb128 0xe
 3975 01b5 3A       		.uleb128 0x3a
 3976 01b6 0B       		.uleb128 0xb
 3977 01b7 3B       		.uleb128 0x3b
 3978 01b8 0B       		.uleb128 0xb
 3979 01b9 49       		.uleb128 0x49
 3980 01ba 13       		.uleb128 0x13
 3981 01bb 3F       		.uleb128 0x3f
 3982 01bc 19       		.uleb128 0x19
 3983 01bd 3C       		.uleb128 0x3c
 3984 01be 19       		.uleb128 0x19
 3985 01bf 00       		.byte	0
 3986 01c0 00       		.byte	0
 3987 01c1 1D       		.uleb128 0x1d
 3988 01c2 34       		.uleb128 0x34
 3989 01c3 00       		.byte	0
 3990 01c4 03       		.uleb128 0x3
 3991 01c5 0E       		.uleb128 0xe
 3992 01c6 3A       		.uleb128 0x3a
 3993 01c7 0B       		.uleb128 0xb
 3994 01c8 3B       		.uleb128 0x3b
 3995 01c9 0B       		.uleb128 0xb
 3996 01ca 49       		.uleb128 0x49
 3997 01cb 13       		.uleb128 0x13
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 121


 3998 01cc 3F       		.uleb128 0x3f
 3999 01cd 19       		.uleb128 0x19
 4000 01ce 02       		.uleb128 0x2
 4001 01cf 18       		.uleb128 0x18
 4002 01d0 00       		.byte	0
 4003 01d1 00       		.byte	0
 4004 01d2 00       		.byte	0
 4005              		.section	.debug_aranges,"",%progbits
 4006 0000 24010000 		.4byte	0x124
 4007 0004 0200     		.2byte	0x2
 4008 0006 00000000 		.4byte	.Ldebug_info0
 4009 000a 04       		.byte	0x4
 4010 000b 00       		.byte	0
 4011 000c 0000     		.2byte	0
 4012 000e 0000     		.2byte	0
 4013 0010 00000000 		.4byte	.LFB35
 4014 0014 84000000 		.4byte	.LFE35-.LFB35
 4015 0018 00000000 		.4byte	.LFB36
 4016 001c 2A000000 		.4byte	.LFE36-.LFB36
 4017 0020 00000000 		.4byte	.LFB37
 4018 0024 26000000 		.4byte	.LFE37-.LFB37
 4019 0028 00000000 		.4byte	.LFB38
 4020 002c 50000000 		.4byte	.LFE38-.LFB38
 4021 0030 00000000 		.4byte	.LFB39
 4022 0034 28020000 		.4byte	.LFE39-.LFB39
 4023 0038 00000000 		.4byte	.LFB40
 4024 003c 1E000000 		.4byte	.LFE40-.LFB40
 4025 0040 00000000 		.4byte	.LFB41
 4026 0044 40000000 		.4byte	.LFE41-.LFB41
 4027 0048 00000000 		.4byte	.LFB42
 4028 004c 58000000 		.4byte	.LFE42-.LFB42
 4029 0050 00000000 		.4byte	.LFB43
 4030 0054 1C000000 		.4byte	.LFE43-.LFB43
 4031 0058 00000000 		.4byte	.LFB44
 4032 005c 24000000 		.4byte	.LFE44-.LFB44
 4033 0060 00000000 		.4byte	.LFB45
 4034 0064 1C000000 		.4byte	.LFE45-.LFB45
 4035 0068 00000000 		.4byte	.LFB46
 4036 006c 24000000 		.4byte	.LFE46-.LFB46
 4037 0070 00000000 		.4byte	.LFB47
 4038 0074 1C000000 		.4byte	.LFE47-.LFB47
 4039 0078 00000000 		.4byte	.LFB48
 4040 007c 1C000000 		.4byte	.LFE48-.LFB48
 4041 0080 00000000 		.4byte	.LFB49
 4042 0084 1C000000 		.4byte	.LFE49-.LFB49
 4043 0088 00000000 		.4byte	.LFB50
 4044 008c 1C000000 		.4byte	.LFE50-.LFB50
 4045 0090 00000000 		.4byte	.LFB51
 4046 0094 24000000 		.4byte	.LFE51-.LFB51
 4047 0098 00000000 		.4byte	.LFB52
 4048 009c 24000000 		.4byte	.LFE52-.LFB52
 4049 00a0 00000000 		.4byte	.LFB53
 4050 00a4 24000000 		.4byte	.LFE53-.LFB53
 4051 00a8 00000000 		.4byte	.LFB54
 4052 00ac 24000000 		.4byte	.LFE54-.LFB54
 4053 00b0 00000000 		.4byte	.LFB55
 4054 00b4 24000000 		.4byte	.LFE55-.LFB55
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 122


 4055 00b8 00000000 		.4byte	.LFB56
 4056 00bc 24000000 		.4byte	.LFE56-.LFB56
 4057 00c0 00000000 		.4byte	.LFB57
 4058 00c4 38010000 		.4byte	.LFE57-.LFB57
 4059 00c8 00000000 		.4byte	.LFB58
 4060 00cc 44000000 		.4byte	.LFE58-.LFB58
 4061 00d0 00000000 		.4byte	.LFB59
 4062 00d4 38000000 		.4byte	.LFE59-.LFB59
 4063 00d8 00000000 		.4byte	.LFB60
 4064 00dc 5C000000 		.4byte	.LFE60-.LFB60
 4065 00e0 00000000 		.4byte	.LFB61
 4066 00e4 5C000000 		.4byte	.LFE61-.LFB61
 4067 00e8 00000000 		.4byte	.LFB62
 4068 00ec 6A000000 		.4byte	.LFE62-.LFB62
 4069 00f0 00000000 		.4byte	.LFB63
 4070 00f4 3C000000 		.4byte	.LFE63-.LFB63
 4071 00f8 00000000 		.4byte	.LFB64
 4072 00fc 1C000000 		.4byte	.LFE64-.LFB64
 4073 0100 00000000 		.4byte	.LFB65
 4074 0104 1C000000 		.4byte	.LFE65-.LFB65
 4075 0108 00000000 		.4byte	.LFB66
 4076 010c 1C000000 		.4byte	.LFE66-.LFB66
 4077 0110 00000000 		.4byte	.LFB67
 4078 0114 14000000 		.4byte	.LFE67-.LFB67
 4079 0118 00000000 		.4byte	.LFB68
 4080 011c 14000000 		.4byte	.LFE68-.LFB68
 4081 0120 00000000 		.4byte	0
 4082 0124 00000000 		.4byte	0
 4083              		.section	.debug_ranges,"",%progbits
 4084              	.Ldebug_ranges0:
 4085 0000 00000000 		.4byte	.LFB35
 4086 0004 84000000 		.4byte	.LFE35
 4087 0008 00000000 		.4byte	.LFB36
 4088 000c 2A000000 		.4byte	.LFE36
 4089 0010 00000000 		.4byte	.LFB37
 4090 0014 26000000 		.4byte	.LFE37
 4091 0018 00000000 		.4byte	.LFB38
 4092 001c 50000000 		.4byte	.LFE38
 4093 0020 00000000 		.4byte	.LFB39
 4094 0024 28020000 		.4byte	.LFE39
 4095 0028 00000000 		.4byte	.LFB40
 4096 002c 1E000000 		.4byte	.LFE40
 4097 0030 00000000 		.4byte	.LFB41
 4098 0034 40000000 		.4byte	.LFE41
 4099 0038 00000000 		.4byte	.LFB42
 4100 003c 58000000 		.4byte	.LFE42
 4101 0040 00000000 		.4byte	.LFB43
 4102 0044 1C000000 		.4byte	.LFE43
 4103 0048 00000000 		.4byte	.LFB44
 4104 004c 24000000 		.4byte	.LFE44
 4105 0050 00000000 		.4byte	.LFB45
 4106 0054 1C000000 		.4byte	.LFE45
 4107 0058 00000000 		.4byte	.LFB46
 4108 005c 24000000 		.4byte	.LFE46
 4109 0060 00000000 		.4byte	.LFB47
 4110 0064 1C000000 		.4byte	.LFE47
 4111 0068 00000000 		.4byte	.LFB48
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 123


 4112 006c 1C000000 		.4byte	.LFE48
 4113 0070 00000000 		.4byte	.LFB49
 4114 0074 1C000000 		.4byte	.LFE49
 4115 0078 00000000 		.4byte	.LFB50
 4116 007c 1C000000 		.4byte	.LFE50
 4117 0080 00000000 		.4byte	.LFB51
 4118 0084 24000000 		.4byte	.LFE51
 4119 0088 00000000 		.4byte	.LFB52
 4120 008c 24000000 		.4byte	.LFE52
 4121 0090 00000000 		.4byte	.LFB53
 4122 0094 24000000 		.4byte	.LFE53
 4123 0098 00000000 		.4byte	.LFB54
 4124 009c 24000000 		.4byte	.LFE54
 4125 00a0 00000000 		.4byte	.LFB55
 4126 00a4 24000000 		.4byte	.LFE55
 4127 00a8 00000000 		.4byte	.LFB56
 4128 00ac 24000000 		.4byte	.LFE56
 4129 00b0 00000000 		.4byte	.LFB57
 4130 00b4 38010000 		.4byte	.LFE57
 4131 00b8 00000000 		.4byte	.LFB58
 4132 00bc 44000000 		.4byte	.LFE58
 4133 00c0 00000000 		.4byte	.LFB59
 4134 00c4 38000000 		.4byte	.LFE59
 4135 00c8 00000000 		.4byte	.LFB60
 4136 00cc 5C000000 		.4byte	.LFE60
 4137 00d0 00000000 		.4byte	.LFB61
 4138 00d4 5C000000 		.4byte	.LFE61
 4139 00d8 00000000 		.4byte	.LFB62
 4140 00dc 6A000000 		.4byte	.LFE62
 4141 00e0 00000000 		.4byte	.LFB63
 4142 00e4 3C000000 		.4byte	.LFE63
 4143 00e8 00000000 		.4byte	.LFB64
 4144 00ec 1C000000 		.4byte	.LFE64
 4145 00f0 00000000 		.4byte	.LFB65
 4146 00f4 1C000000 		.4byte	.LFE65
 4147 00f8 00000000 		.4byte	.LFB66
 4148 00fc 1C000000 		.4byte	.LFE66
 4149 0100 00000000 		.4byte	.LFB67
 4150 0104 14000000 		.4byte	.LFE67
 4151 0108 00000000 		.4byte	.LFB68
 4152 010c 14000000 		.4byte	.LFE68
 4153 0110 00000000 		.4byte	0
 4154 0114 00000000 		.4byte	0
 4155              		.section	.debug_line,"",%progbits
 4156              	.Ldebug_line0:
 4157 0000 D0030000 		.section	.debug_str,"MS",%progbits,1
 4157      02005E00 
 4157      00000201 
 4157      FB0E0D00 
 4157      01010101 
 4158              	.LASF10:
 4159 0000 75696E74 		.ascii	"uint16\000"
 4159      313600
 4160              	.LASF49:
 4161 0007 66696C74 		.ascii	"filteredRawData\000"
 4161      65726564 
 4161      52617744 
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 124


 4161      61746100 
 4162              	.LASF105:
 4163 0017 43617053 		.ascii	"CapSense_hysteresis\000"
 4163      656E7365 
 4163      5F687973 
 4163      74657265 
 4163      73697300 
 4164              	.LASF107:
 4165 002b 43617053 		.ascii	"CapSense_rawDataIndex\000"
 4165      656E7365 
 4165      5F726177 
 4165      44617461 
 4165      496E6465 
 4166              	.LASF99:
 4167 0041 43617053 		.ascii	"CapSense_sensorOnMask\000"
 4167      656E7365 
 4167      5F73656E 
 4167      736F724F 
 4167      6E4D6173 
 4168              	.LASF66:
 4169 0057 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 4169      656E7365 
 4169      5F476574 
 4169      4E656761 
 4169      74697665 
 4170              	.LASF76:
 4171 007a 66696E67 		.ascii	"fingerThreshold\000"
 4171      65725468 
 4171      72657368 
 4171      6F6C6400 
 4172              	.LASF70:
 4173 008a 43617053 		.ascii	"CapSense_SetNegativeNoiseThreshold\000"
 4173      656E7365 
 4173      5F536574 
 4173      4E656761 
 4173      74697665 
 4174              	.LASF53:
 4175 00ad 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 4175      656E7365 
 4175      5F557064 
 4175      61746557 
 4175      69646765 
 4176              	.LASF25:
 4177 00cb 70747247 		.ascii	"ptrGetRaw\000"
 4177      65745261 
 4177      7700
 4178              	.LASF30:
 4179 00d5 43617053 		.ascii	"CapSense_CONFIG_TYPE_POINTERS_P4_v2_10\000"
 4179      656E7365 
 4179      5F434F4E 
 4179      4649475F 
 4179      54595045 
 4180              	.LASF89:
 4181 00fc 43617053 		.ascii	"CapSense_GetDebounce\000"
 4181      656E7365 
 4181      5F476574 
 4181      4465626F 
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 125


 4181      756E6365 
 4182              	.LASF85:
 4183 0111 43617053 		.ascii	"CapSense_MedianFilter\000"
 4183      656E7365 
 4183      5F4D6564 
 4183      69616E46 
 4183      696C7465 
 4184              	.LASF7:
 4185 0127 6C6F6E67 		.ascii	"long long unsigned int\000"
 4185      206C6F6E 
 4185      6720756E 
 4185      7369676E 
 4185      65642069 
 4186              	.LASF98:
 4187 013e 43617053 		.ascii	"CapSense_sensorSignal\000"
 4187      656E7365 
 4187      5F73656E 
 4187      736F7253 
 4187      69676E61 
 4188              	.LASF64:
 4189 0154 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 4189      656E7365 
 4189      5F476574 
 4189      4E6F6973 
 4189      65546872 
 4190              	.LASF43:
 4191 016f 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 4191      656E7365 
 4191      5F496E69 
 4191      7469616C 
 4191      697A6545 
 4192              	.LASF52:
 4193 0193 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 4193      656E7365 
 4193      5F557064 
 4193      61746545 
 4193      6E61626C 
 4194              	.LASF6:
 4195 01b3 6C6F6E67 		.ascii	"long long int\000"
 4195      206C6F6E 
 4195      6720696E 
 4195      7400
 4196              	.LASF0:
 4197 01c1 7369676E 		.ascii	"signed char\000"
 4197      65642063 
 4197      68617200 
 4198              	.LASF84:
 4199 01cd 43617053 		.ascii	"CapSense_DisableWidget\000"
 4199      656E7365 
 4199      5F446973 
 4199      61626C65 
 4199      57696467 
 4200              	.LASF79:
 4201 01e4 72617749 		.ascii	"rawIndex\000"
 4201      6E646578 
 4201      00
 4202              	.LASF24:
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 126


 4203 01ed 6E756D62 		.ascii	"numberOfSensors\000"
 4203      65724F66 
 4203      53656E73 
 4203      6F727300 
 4204              	.LASF21:
 4205 01fd 77696467 		.ascii	"widgetNubmersTbl\000"
 4205      65744E75 
 4205      626D6572 
 4205      7354626C 
 4205      00
 4206              	.LASF59:
 4207 020e 43617053 		.ascii	"CapSense_GetBaselineData\000"
 4207      656E7365 
 4207      5F476574 
 4207      42617365 
 4207      6C696E65 
 4208              	.LASF81:
 4209 0227 73746174 		.ascii	"state\000"
 4209      6500
 4210              	.LASF4:
 4211 022d 6C6F6E67 		.ascii	"long int\000"
 4211      20696E74 
 4211      00
 4212              	.LASF82:
 4213 0236 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 4213      656E7365 
 4213      5F436865 
 4213      636B4973 
 4213      416E7957 
 4214              	.LASF9:
 4215 0256 75696E74 		.ascii	"uint8\000"
 4215      3800
 4216              	.LASF101:
 4217 025c 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 4217      656E7365 
 4217      5F6C6F77 
 4217      42617365 
 4217      6C696E65 
 4218              	.LASF91:
 4219 0276 43617053 		.ascii	"CapSense_DisableRawDataFilters\000"
 4219      656E7365 
 4219      5F446973 
 4219      61626C65 
 4219      52617744 
 4220              	.LASF13:
 4221 0295 646F7562 		.ascii	"double\000"
 4221      6C6500
 4222              	.LASF95:
 4223 029c 43617053 		.ascii	"CapSense_widgetNumber\000"
 4223      656E7365 
 4223      5F776964 
 4223      6765744E 
 4223      756D6265 
 4224              	.LASF11:
 4225 02b2 75696E74 		.ascii	"uint32\000"
 4225      333200
 4226              	.LASF77:
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 127


 4227 02b9 68797374 		.ascii	"hysteresis\000"
 4227      65726573 
 4227      697300
 4228              	.LASF67:
 4229 02c4 43617053 		.ascii	"CapSense_SetFingerThreshold\000"
 4229      656E7365 
 4229      5F536574 
 4229      46696E67 
 4229      65725468 
 4230              	.LASF71:
 4231 02e0 43617053 		.ascii	"CapSense_SetDebounce\000"
 4231      656E7365 
 4231      5F536574 
 4231      4465626F 
 4231      756E6365 
 4232              	.LASF34:
 4233 02f5 73656E73 		.ascii	"sensetivitySeed\000"
 4233      65746976 
 4233      69747953 
 4233      65656400 
 4234              	.LASF33:
 4235 0305 746F7461 		.ascii	"totalSensorsNum\000"
 4235      6C53656E 
 4235      736F7273 
 4235      4E756D00 
 4236              	.LASF62:
 4237 0315 76616C75 		.ascii	"value\000"
 4237      6500
 4238              	.LASF72:
 4239 031b 43617053 		.ascii	"CapSense_SetLowBaselineReset\000"
 4239      656E7365 
 4239      5F536574 
 4239      4C6F7742 
 4239      6173656C 
 4240              	.LASF56:
 4241 0338 6C617374 		.ascii	"lastSensor\000"
 4241      53656E73 
 4241      6F7200
 4242              	.LASF8:
 4243 0343 756E7369 		.ascii	"unsigned int\000"
 4243      676E6564 
 4243      20696E74 
 4243      00
 4244              	.LASF5:
 4245 0350 6C6F6E67 		.ascii	"long unsigned int\000"
 4245      20756E73 
 4245      69676E65 
 4245      6420696E 
 4245      7400
 4246              	.LASF97:
 4247 0362 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 4247      656E7365 
 4247      5F73656E 
 4247      736F7242 
 4247      6173656C 
 4248              	.LASF22:
 4249 037d 7265736F 		.ascii	"resolutionsTbl\000"
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 128


 4249      6C757469 
 4249      6F6E7354 
 4249      626C00
 4250              	.LASF28:
 4251 038c 70747247 		.ascii	"ptrGetBitValue\000"
 4251      65744269 
 4251      7456616C 
 4251      756500
 4252              	.LASF31:
 4253 039b 746F7461 		.ascii	"totalScanslotsNum\000"
 4253      6C536361 
 4253      6E736C6F 
 4253      74734E75 
 4253      6D00
 4254              	.LASF106:
 4255 03ad 43617053 		.ascii	"CapSense_debounce\000"
 4255      656E7365 
 4255      5F646562 
 4255      6F756E63 
 4255      6500
 4256              	.LASF58:
 4257 03bf 64617461 		.ascii	"data\000"
 4257      00
 4258              	.LASF3:
 4259 03c4 73686F72 		.ascii	"short unsigned int\000"
 4259      7420756E 
 4259      7369676E 
 4259      65642069 
 4259      6E7400
 4260              	.LASF18:
 4261 03d7 73656E73 		.ascii	"sensetivityTbl\000"
 4261      65746976 
 4261      69747954 
 4261      626C00
 4262              	.LASF40:
 4263 03e6 73656E73 		.ascii	"sensor\000"
 4263      6F7200
 4264              	.LASF94:
 4265 03ed 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 4265      656E7365 
 4265      5F73656E 
 4265      736F7245 
 4265      6E61626C 
 4266              	.LASF108:
 4267 0407 43617053 		.ascii	"CapSense_numberOfSensors\000"
 4267      656E7365 
 4267      5F6E756D 
 4267      6265724F 
 4267      6653656E 
 4268              	.LASF51:
 4269 0420 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 4269      656E7365 
 4269      5F557064 
 4269      61746553 
 4269      656E736F 
 4270              	.LASF46:
 4271 043e 63616C63 		.ascii	"calc\000"
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 129


 4271      00
 4272              	.LASF19:
 4273 0443 63686172 		.ascii	"chargeDivTbl\000"
 4273      67654469 
 4273      7654626C 
 4273      00
 4274              	.LASF113:
 4275 0450 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
 4275      6E657261 
 4275      7465645F 
 4275      536F7572 
 4275      63655C50 
 4276              	.LASF60:
 4277 0479 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 4277      656E7365 
 4277      5F476574 
 4277      44696666 
 4277      436F756E 
 4278              	.LASF36:
 4279 0493 706F696E 		.ascii	"pointers\000"
 4279      74657273 
 4279      00
 4280              	.LASF74:
 4281 049c 6465626F 		.ascii	"debounce\000"
 4281      756E6365 
 4281      00
 4282              	.LASF35:
 4283 04a5 6866636C 		.ascii	"hfclkFreq_MHz\000"
 4283      6B467265 
 4283      715F4D48 
 4283      7A00
 4284              	.LASF15:
 4285 04b3 73697A65 		.ascii	"sizetype\000"
 4285      74797065 
 4285      00
 4286              	.LASF83:
 4287 04bc 43617053 		.ascii	"CapSense_EnableWidget\000"
 4287      656E7365 
 4287      5F456E61 
 4287      626C6557 
 4287      69646765 
 4288              	.LASF45:
 4289 04d2 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 4289      656E7365 
 4289      5F557064 
 4289      61746542 
 4289      6173656C 
 4290              	.LASF39:
 4291 04f5 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 4291      656E7365 
 4291      5F496E69 
 4291      7469616C 
 4291      697A6553 
 4292              	.LASF69:
 4293 0517 43617053 		.ascii	"CapSense_SetFingerHysteresis\000"
 4293      656E7365 
 4293      5F536574 
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 130


 4293      46696E67 
 4293      65724879 
 4294              	.LASF73:
 4295 0534 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 4295      656E7365 
 4295      5F436865 
 4295      636B4973 
 4295      53656E73 
 4296              	.LASF16:
 4297 0551 69646163 		.ascii	"idac1LevelsTbl\000"
 4297      314C6576 
 4297      656C7354 
 4297      626C00
 4298              	.LASF17:
 4299 0560 69646163 		.ascii	"idac2LevelsTbl\000"
 4299      324C6576 
 4299      656C7354 
 4299      626C00
 4300              	.LASF103:
 4301 056f 43617053 		.ascii	"CapSense_noiseThreshold\000"
 4301      656E7365 
 4301      5F6E6F69 
 4301      73655468 
 4301      72657368 
 4302              	.LASF102:
 4303 0587 43617053 		.ascii	"CapSense_fingerThreshold\000"
 4303      656E7365 
 4303      5F66696E 
 4303      67657254 
 4303      68726573 
 4304              	.LASF109:
 4305 05a0 43617053 		.ascii	"CapSense_rawFilterData1\000"
 4305      656E7365 
 4305      5F726177 
 4305      46696C74 
 4305      65724461 
 4306              	.LASF37:
 4307 05b8 43617053 		.ascii	"CapSense_CONFIG_TYPE_P4_v2_10\000"
 4307      656E7365 
 4307      5F434F4E 
 4307      4649475F 
 4307      54595045 
 4308              	.LASF110:
 4309 05d6 43617053 		.ascii	"CapSense_config\000"
 4309      656E7365 
 4309      5F636F6E 
 4309      66696700 
 4310              	.LASF12:
 4311 05e6 666C6F61 		.ascii	"float\000"
 4311      7400
 4312              	.LASF88:
 4313 05ec 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 4313      656E7365 
 4313      5F476574 
 4313      4C6F7742 
 4313      6173656C 
 4314              	.LASF112:
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 131


 4315 0609 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 4315      4320342E 
 4315      382E3420 
 4315      32303134 
 4315      30353236 
 4316 063c 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 4316      20726576 
 4316      6973696F 
 4316      6E203231 
 4316      31333538 
 4317 066f 30202D66 		.ascii	"0 -ffunction-sections\000"
 4317      66756E63 
 4317      74696F6E 
 4317      2D736563 
 4317      74696F6E 
 4318              	.LASF78:
 4319 0685 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 4319      656E7365 
 4319      5F436865 
 4319      636B4973 
 4319      57696467 
 4320              	.LASF1:
 4321 06a2 756E7369 		.ascii	"unsigned char\000"
 4321      676E6564 
 4321      20636861 
 4321      7200
 4322              	.LASF41:
 4323 06b0 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 4323      656E7365 
 4323      5F496E69 
 4323      7469616C 
 4323      697A6541 
 4324              	.LASF27:
 4325 06d0 70747252 		.ascii	"ptrReadSensorRaw\000"
 4325      65616453 
 4325      656E736F 
 4325      72526177 
 4325      00
 4326              	.LASF57:
 4327 06e1 43617053 		.ascii	"CapSense_SetBaselineData\000"
 4327      656E7365 
 4327      5F536574 
 4327      42617365 
 4327      6C696E65 
 4328              	.LASF50:
 4329 06fa 6E6F6973 		.ascii	"noiseThreshold\000"
 4329      65546872 
 4329      6573686F 
 4329      6C6400
 4330              	.LASF2:
 4331 0709 73686F72 		.ascii	"short int\000"
 4331      7420696E 
 4331      7400
 4332              	.LASF42:
 4333 0713 77696467 		.ascii	"widget\000"
 4333      657400
 4334              	.LASF20:
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 132


 4335 071a 6D6F6444 		.ascii	"modDivTbl\000"
 4335      69765462 
 4335      6C00
 4336              	.LASF44:
 4337 0724 69735365 		.ascii	"isSensorEnabled\000"
 4337      6E736F72 
 4337      456E6162 
 4337      6C656400 
 4338              	.LASF38:
 4339 0734 43617053 		.ascii	"CapSense_BaseInit\000"
 4339      656E7365 
 4339      5F426173 
 4339      65496E69 
 4339      7400
 4340              	.LASF54:
 4341 0746 73656E73 		.ascii	"sensorsPerWidget\000"
 4341      6F727350 
 4341      65725769 
 4341      64676574 
 4341      00
 4342              	.LASF100:
 4343 0757 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 4343      656E7365 
 4343      5F6C6F77 
 4343      42617365 
 4343      6C696E65 
 4344              	.LASF68:
 4345 0774 43617053 		.ascii	"CapSense_SetNoiseThreshold\000"
 4345      656E7365 
 4345      5F536574 
 4345      4E6F6973 
 4345      65546872 
 4346              	.LASF96:
 4347 078f 43617053 		.ascii	"CapSense_sensorBaseline\000"
 4347      656E7365 
 4347      5F73656E 
 4347      736F7242 
 4347      6173656C 
 4348              	.LASF14:
 4349 07a7 63686172 		.ascii	"char\000"
 4349      00
 4350              	.LASF111:
 4351 07ac 43617053 		.ascii	"CapSense_enableRawFilters\000"
 4351      656E7365 
 4351      5F656E61 
 4351      626C6552 
 4351      61774669 
 4352              	.LASF65:
 4353 07c6 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 4353      656E7365 
 4353      5F476574 
 4353      46696E67 
 4353      65724879 
 4354              	.LASF55:
 4355 07e3 66697273 		.ascii	"firstSensor\000"
 4355      7453656E 
 4355      736F7200 
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 133


 4356              	.LASF75:
 4357 07ef 6465626F 		.ascii	"debounceIndex\000"
 4357      756E6365 
 4357      496E6465 
 4357      7800
 4358              	.LASF63:
 4359 07fd 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 4359      656E7365 
 4359      5F476574 
 4359      46696E67 
 4359      65725468 
 4360              	.LASF26:
 4361 0819 70747250 		.ascii	"ptrPreScan\000"
 4361      72655363 
 4361      616E00
 4362              	.LASF47:
 4363 0824 7369676E 		.ascii	"sign\000"
 4363      00
 4364              	.LASF80:
 4365 0829 6E756D4F 		.ascii	"numOfSensors\000"
 4365      6653656E 
 4365      736F7273 
 4365      00
 4366              	.LASF114:
 4367 0836 433A5C55 		.ascii	"C:\\Users\\Manisha Goyal\\Desktop\\PSoC_4_BLE_CapSe"
 4367      73657273 
 4367      5C4D616E 
 4367      69736861 
 4367      20476F79 
 4368 0865 6E73655F 		.ascii	"nse_Proximity\\PSOC_CapenseProximity.cydsn\000"
 4368      50726F78 
 4368      696D6974 
 4368      795C5053 
 4368      4F435F43 
 4369              	.LASF93:
 4370 088f 43617053 		.ascii	"CapSense_sensorRaw\000"
 4370      656E7365 
 4370      5F73656E 
 4370      736F7252 
 4370      617700
 4371              	.LASF61:
 4372 08a2 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 4372      656E7365 
 4372      5F536574 
 4372      44696666 
 4372      436F756E 
 4373              	.LASF29:
 4374 08bc 70747253 		.ascii	"ptrSetBitValue\000"
 4374      65744269 
 4374      7456616C 
 4374      756500
 4375              	.LASF87:
 4376 08cb 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 4376      656E7365 
 4376      5F476574 
 4376      57696467 
 4376      65744E75 
ARM GAS  C:\Users\MANISH~1\AppData\Local\Temp\ccewkX8e.s 			page 134


 4377              	.LASF90:
 4378 08e4 43617053 		.ascii	"CapSense_EnableRawDataFilters\000"
 4378      656E7365 
 4378      5F456E61 
 4378      626C6552 
 4378      61774461 
 4379              	.LASF92:
 4380 0902 43617053 		.ascii	"CapSense_debounceCounter\000"
 4380      656E7365 
 4380      5F646562 
 4380      6F756E63 
 4380      65436F75 
 4381              	.LASF86:
 4382 091b 43617053 		.ascii	"CapSense_IIR4Filter\000"
 4382      656E7365 
 4382      5F494952 
 4382      3446696C 
 4382      74657200 
 4383              	.LASF23:
 4384 092f 72617744 		.ascii	"rawDataIndex\000"
 4384      61746149 
 4384      6E646578 
 4384      00
 4385              	.LASF48:
 4386 093c 74656D70 		.ascii	"tempRaw\000"
 4386      52617700 
 4387              	.LASF32:
 4388 0944 746F7461 		.ascii	"totalWidgetsNum\000"
 4388      6C576964 
 4388      67657473 
 4388      4E756D00 
 4389              	.LASF104:
 4390 0954 43617053 		.ascii	"CapSense_negativeNoiseThreshold\000"
 4390      656E7365 
 4390      5F6E6567 
 4390      61746976 
 4390      654E6F69 
 4391              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
